[{"issue_number":1,"repository":"facebook\/react","title":"[Compiler Bug]: InvalidReact: Ref values (the `current` property) may not be accessed during render. False Positive","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [x] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAHQHYIB4AcIwAuABACYIBmAhlADYkVQZyECWEGxAsgJ4CCuXAAoAlMWCZixOBzAlSrAG4AlSsQC8xKGASqKQjHVoiA3JOmySAWx4AJKhlK0EMDcQQaAfOPNSqzoiEFFUoAOjhYGAQMQlDWDCwYABUcQlNzAF9zGQw5Ygc4AAsCAAUYCFwwN2AMs0585mKYMoqwUI4AYVpWOABrN1EvYht7RwDROsxzKMJYTiFfYgAeT0WpJeDiKIp1YGC9DM9bBFpaCGIAdQJaUiWAemDV+ql1qnFQj4KmlsrDi8KqPIIAgqoRCh5NmAqDwAPz3KhPF7LO6I4jpDBZDAgDJAA\n\n### Repro steps\n\n1) Create a ref with `useRef()`\n2) Create an event handler that accesses `ref.current`\n3) Create an arbitrary object\n4) Assign an arbitrary property to that object and set it equal to a function that calls the handler from step 2.\n5) Witness the `InvalidReact: Ref values (the `current` property) may not be accessed during render.` error\n\nEx (also in playground link):\n\n```js\nexport default function MyApp() {\n  const divRef = useRef(null);\n  const myHandler = e => {\n    alert(divRef.current.innerText);\n  }\n  const anchorProps = {};\n  anchorProps.onClick = () => myHandler();\n\n\n  return (\n    <>\n      <div ref={divRef}>Hello World<\/div>\n      <a {...anchorProps}>What does the div say?<\/a>\n    <\/>\n  );\n}\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-27714ef-20250124","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2025-02-06T21:05:56Z","comments":2,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/32320"},{"issue_number":2,"repository":"facebook\/react","title":"[Compiler Bug]: Upgrading from `e552027-20250112` to `27714ef-20250124` no longer optimizes","description":"### What kind of issue is this?\n\n- [x] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhHCA7MAXABAYQgFsAHZXAJQQEM5sA6AMX1wF5cAKASjYD5dgAHQy5c6LHgDaYBABsEdBABMAqjJhgANLhnYAynIXZlahBoC6bXFBl7s1YwB4YNJZlkBPXKZgB5GACCJACWPpLmvBzhXADcwsKi4jjW6gCSSmBWMvKKqupg9ETUJBwcNmY8rPzlMPTBSrHxImKYyXjs3HwCuAmiLRK41DAwVuFxGL2iAGYQIxxJeNlGJuq4EFMpZulgPELNfYPD9CQ2ABYcS7k+jfu4AL6TuC7YsBPND2+iz6+4GFCysnGd3GIDuQA\n\n### Repro steps\n\nNo reproduction steps required - the playground shows the error.\n\nhttps:\/\/github.com\/facebook\/react\/pull\/32093\/files#diff-20b95f808e27819de316464ff5819940614b11b694deb9f1c4fecf39dff6b6e4R1607\n\nAs a workaround I've just extracted the function (in our real app it's a `queryFn` to `react-query`) outside of the component and pass it the arguments instead, so we no longer loop inside the component itself.\n\n---\n\nFor future reference (for when this is fixed and the playground no longer shows an error), this is the current result:\n\n<img width=\"670\" alt=\"Image\" src=\"https:\/\/github.com\/user-attachments\/assets\/c9d632bb-f4b0-4ee4-8026-eb086cdbc3ea\" \/>\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nN\/A\n\n### What version of React Compiler are you using?\n\n`27714ef-20250124`","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2025-01-30T08:10:31Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/32269"},{"issue_number":3,"repository":"facebook\/react","title":"[Compiler Bug]: \"Ref values (the `current` property) may not be accessed during render\" but there is no value access","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [x] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBASggIZx4ByEAJggDSkIBmA8gEYBWCVzUMAgCyCDBAFCyrAgF8CrGBAwEAOiBgUq6gNyqAdgYD0RggBU0eADYIAamgYRkBTfoYwwBcgQBuDhBAEAO6WABZeBHiWNgYGeACeWAjm0Xb+EAAKSlieALxEBgQubAD8ztJcvFQAPAASZsIAMvaOAKI2GAj6hAA+BPpQVlYAfHr6RVHWCM5geDBo+gDmY0Vg8DNzC8sGsmMGrFD6VGgQ4xZTLQEAFMSarMyTNsxrcHLO5zaXmdlgAJQF42KeFg4yuhSKBGqdDQPmG4IhkNCAEZhsBHghZNUjMi4YCEcAjAAqAgIMBWBZ4AC00LA5E4Nkp+gQAA8qeSmQRuGBmZTyEikfEjJ1oeRKaFyGBKXByFgoqcCISjLJ4RDqn5HMVWLlgHd5C9tS95EZcQisdDYeDfmNlYZ9CYCMIoHgEABhU5zCBWMDOch0OiebycJ14eUhggYJ3JPChZLqgLFNwITR0AiceIJ9xfWLdRLJR3Ot3dJRerIQHIEfLAcGuTPpZxXO7lNiVPh4OoNZrpdpiLq9fqDEb-XLDFiUGj0BDWvb6A5HOXjfOu93FsA3DNJr5vB2Rwseks-f5VwFwU6zXzpaQVgiCBDSdtNL7dzrdYZXAZDK3ZoqaYEwUEqqEYRNBEiBrDd0iuOMIGkX4bRAyEgzwENbXgopThdck4AAa21K4hxHI9UIhNAZEgi82AAOjgWBXDwf4oOkKiaN7CifE9KBOivAAGFZUNkOCQOA+CI2dFUiixRDkKEyEjHNYDP30G1jFML5GjQWZnDAjwInJM8IBkKDPBCaNw0jVNg1PbMEiSAhVPUvBS3LStwUMgARcg8HIZxiBeDZ5iWHRIlSPytjkABtABdKds1nY55Ts2Ybhc9IwHczyrzCnz1jUEB1AeYKcs3JF1DkCLGB2ZwEocg8ASKE99DPLSADFDjgb0WBPGA6GqWZ-MWZhF13FdHLAML1C0rMQAikd8hvURxDBPECDwitpKKFsqAoxRlFaIs0FJRaiLcjzyAojAZSuK46BO-CCDGpb4OuzyKPRcqHpAhs2Fu6oPjSDU7m1XUiAokGnvII1hjeoiIt+KGQNhlUwuOzyystadvwQX9-yWwCLXe4ANrwCje3mA7mtav4zouq4wte9cYBh1blrE1VBuXT1PCwhB4m1dF5Am9JAa6dwIZZ35YIA2SgLRnZsxZHB8AIBhWHIQZCCqsYQFkIA\n\n### Repro steps\n\n1. Create a component A\n2. Add a prop P to component A. This prop must be a render function that receives a `RefObject` and returns a `ReactNode`\n3. Use the `useRef` hook in component A and initialize it with null\n4. Invoke the render function passed in prop P with the ref from the previous step\n\n**Notes:**\n- I'm not absolutely certain if this is an error on the compiler plugin or if I am not fully understanding what the error is supposed to be. If it is an error on my end, then I would say this error message needs to be improved.\n- The repro link has a complete example of a scenario where this error could arise. The bug itself is only triggered in the `MuteControls` component.\n- The only ref value access in the repro link (`videoRef.current`) is in the `onClick` function of the button in `MuteControls`. Commenting this **does not make the error disappear**, so the error is triggered without any value access\n- Using `useMemo` to memoize the `renderVideo` call does not make the error dissapear neither\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\neslint-plugin-react-compiler@19.0.0-beta-27714ef-20250124","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2025-01-29T13:49:56Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/32261"},{"issue_number":4,"repository":"facebook\/react","title":"[Compiler Bug]: Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used","description":"### What kind of issue is this?\n\n- [x] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [x] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/github.com\/egorBezmen\/next15-styled-components\n\n### Repro steps\n\n1) npm install\n2) npm run dev\n3) open [localhost](http:\/\/localhost:3000) \n\n<img width=\"1512\" alt=\"Image\" src=\"https:\/\/github.com\/user-attachments\/assets\/53f68d57-6c50-4cf7-baf5-5aaf7ac4a7a6\" \/>\n\nhttps:\/\/github.com\/vercel\/next.js\/tree\/canary\/examples\/with-styled-components\nI deployed the template project and enabled the option react-compiler\ncodesandbox - https:\/\/codesandbox.io\/p\/github\/egorBezmen\/next15-styled-components\/main?import=true\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1 \/ 19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-27714ef-20250124","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2025-01-27T12:16:47Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/32235"},{"issue_number":5,"repository":"facebook\/react","title":"[DevTools Bug]:  [DevTools Bug] Cannot reorder children for node \"0\" because no matching node was found in the Store.","description":"### Website or app\n\nhttps:\/\/www.autotrack.nl\/aanbod\n\n### Repro steps\n\n1. Start profiling in chrome\n2. Click on any filter\n3. Uncaught Error: Cannot reorder children for node \"0\" because no matching node was found in the Store.\nDismiss\nThe error was thrown at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1175534\n    at v.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1140783)\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1142390\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1552529)\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCannot reorder children for node \"0\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1175534\n    at v.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1140783)\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1142390\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1552529)\n```\n\n### Error component stack (automated)\n\n```text\n\n```\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot reorder children for node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2025-01-23T11:25:04Z","comments":2,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/32196"},{"issue_number":6,"repository":"facebook\/react","title":"[DevTools Bug]: react-devtools not start up","description":"### Website or app\n\nsorrry I don't know how to reproduce this.\n\n### Repro steps\n\nnpm install -g react-devtools\n\nreact-devtools\n\nreact-devtools not start up on ubuntu24 ,  nothing happen , no error message at all\n\n\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n```text\n\n```\n\n### Error component stack (automated)\n\n```text\n\n```\n\n### GitHub query string (automated)\n\n```text\n\n```","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2025-01-23T01:40:01Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/32165"},{"issue_number":7,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add child \"301\" to parent \"155\" because parent node was not found in the Store.","description":"### Website or app\n\nwww.github.com\n\n### Repro steps\n\nThe error was thrown at chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1173126\n    at v.emit (chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1140783)\n    at chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1142390\n    at bridgeListener (chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1552662)\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCannot add child \"301\" to parent \"155\" because parent node was not found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1173126\n    at v.emit (chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1140783)\n    at chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1142390\n    at bridgeListener (chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1552662)\n```\n\n### Error component stack (automated)\n\n```text\n\n```\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add child  to parent  because parent node was not found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2025-01-18T03:21:16Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/32118"},{"issue_number":8,"repository":"facebook\/react","title":"[Compiler Bug]: eslint plugin erroneously flags third-party functions starting with \"use\" as hooks","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [x] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBUYCAMgIYCe0eAogGaMJyEC+BjMEGBA5DASU2-ANwAdAHaYc+AgCoClMMowBhABaV8q7rwEABShjjbdAehNmdeMABYLcXAnHTpCAB5zCAEwSMlFAANoSMUFJsaBBSBACy1ACCWFgAFACURNIEJGRUtFAMzKx4qRkEALwAfFmxOWpatmAAdKQIACqaCBgIqVIhwemSdewANAQA2gC66e51QniwsanZ9QA8vmgAbgQWVauzUuzSIOxAA\n\n### Repro steps\n\nIn the simplified playground example above, I'm using `amCharts.useTheme` which is not a hook at all, just a random function of an external library that happen to start with **use**.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nreact@19.0.0\n\n### What version of React Compiler are you using?\n\nbabel-plugin-react-compiler@19.0.0-beta-e552027-20250112","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2025-01-17T14:32:20Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/32109"},{"issue_number":9,"repository":"facebook\/react","title":"[DevTools Bug]: incorrect error on react-hooks\/exhaustive-deps","description":"### Website or app\n\nhttp:\/\/localhost:3008\/\n\n### Repro steps\n\n```\nReact Hook useMemo has unnecessary dependencies: 'store1.list' and 'store2.list'. Either exclude them or remove the dependency array. Outer scope values like 'domains.content' aren't valid dependencies because mutating them doesn't re-render the component  react-hooks\/exhaustive-deps\n```\n\n\nFor an unknown reason, it appears in the following code.\n```\nconst list = useMemo(() => _.map(store1.list, item => ({\n    ...item,\n    warnings: _.map(\n      _.filter(store2.list, { name: item.name }),\n      ({ info }) => ({ label: `Important ${info}` })\n    )\n  })), [store1.list, store2.list])\n```\n\nAnd I am sure there is a bug because it doesn't appear in the following code:\n\n```\nconst list1 = store1.list\n  const list2 = store2.list\n  const list = useMemo(() => _.map(list1, item => ({\n    ...item,\n    warnings: _.map(\n      _.filter(list2, { name: item.name }),\n      ({ info }) => ({ label: `Important ${info}` })\n    )\n  })), [list1, list2])\n```\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n```text\n\n```\n\n### Error component stack (automated)\n\n```text\n\n```\n\n### GitHub query string (automated)\n\n```text\n\n```","labels":["Type: Bug","Status: Unconfirmed"],"created_at":"2025-01-16T15:29:24Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/32089"},{"issue_number":10,"repository":"facebook\/react","title":"[DevTools Bug] Cannot remove node \"92\" because no matching node was found in the Store.","description":"### Website or app\n\nhttp:\/\/localhost:3000\/\n\n### Repro steps\n\nI was trying to inspect my component tree via react dev tools, but each time I make an interaction on the website which changes the state, it throws an error \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCannot remove node \"92\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1173889\r\n    at v.emit (chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1140783)\r\n    at chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1142390\r\n    at bridgeListener (chrome-extension:\/\/gpphkfbcpidddadnkolkpfckpihlkkil\/build\/main.js:1:1552662)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2025-01-01T16:10:15Z","comments":4,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/31950"},{"issue_number":11,"repository":"facebook\/react","title":"[DevTools Bug] Minified React error #310; visit https:\/\/react.dev\/errors\/310 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.","description":"### Website or app\n\nhttp:\/\/localhost:1234\/restaurants\/323532\n\n### Repro steps\n\ni'm not able to open components features and use it properly\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nMinified React error #310; visit https:\/\/react.dev\/errors\/310 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\n\n### Error call stack (automated)\n\n```text\nat updateWorkInProgressHook (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:53845)\r\n    at Object.updateCallback [as useCallback] (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:63009)\r\n    at t.useCallback (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:222673)\r\n    at InspectedElementContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1329500)\r\n    at renderWithHooks (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:52283)\r\n    at updateFunctionComponent (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:81757)\r\n    at beginWork (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:95976)\r\n    at performUnitOfWork (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:154382)\r\n    at workLoopSync (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:154250)\r\n    at renderRootSync (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:153981)\n```\n\n\n### Error component stack (automated)\n\n```text\nat InspectedElementContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1328724)\r\n    at da (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1315454)\r\n    at div (<anonymous>)\r\n    at InspectedElementErrorBoundaryWrapper (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1321764)\r\n    at NativeStyleContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1354133)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at OwnersListContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1268367)\r\n    at SettingsModalContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1297652)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1393839\r\n    at da (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1315454)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1318165)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1318362\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1318165)\r\n    at TimelineContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1395852)\r\n    at ProfilerContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1387571)\r\n    at TreeContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1209877)\r\n    at SettingsContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1238028)\r\n    at ModalDialogContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1375269)\r\n    at DevTools_DevTools (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1544258)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Minified React error #310; visit https:\/\/react.dev\/errors\/310 for the full message or use the non-minified dev environment for full errors and additional helpful warnings. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-12-25T15:27:25Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31911"},{"issue_number":12,"repository":"facebook\/react","title":"[DevTools Bug] Could not find commit data for root \"1\"","description":"### Website or app\n\nhttp:\/\/localhost:5173\/\n\n### Repro steps\n\nwas trying to test the performance of my react application\n\n### How often does this bug happen?\n\nOnly once\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCould not find commit data for root \"1\"\n\n### Error call stack (automated)\n\n```text\nat me.getDataForRoot (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1167575)\r\n    at SnapshotSelector_SnapshotSelector (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1528048)\r\n    at renderWithHooks (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:52283)\r\n    at updateFunctionComponent (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:81757)\r\n    at beginWork (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:95976)\r\n    at performUnitOfWork (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:154382)\r\n    at workLoopSync (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:154250)\r\n    at renderRootSync (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:153981)\r\n    at performWorkOnRoot (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:149824)\r\n    at performSyncWorkOnRoot (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:164385)\n```\n\n\n### Error component stack (automated)\n\n```text\nat SnapshotSelector_SnapshotSelector (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1527987)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at SettingsModalContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1297652)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1536522\r\n    at da (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1315454)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1318165)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1318362\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1318165)\r\n    at TimelineContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1395852)\r\n    at ProfilerContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1387571)\r\n    at TreeContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1209877)\r\n    at SettingsContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1238028)\r\n    at ModalDialogContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1375269)\r\n    at DevTools_DevTools (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1544258)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Could not find commit data for root  in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-12-22T13:17:55Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31888"},{"issue_number":13,"repository":"facebook\/react","title":"[DevTools Bug]: Profiling not supported error with up-to-date React.","description":"### Website or app\n\nhttps:\/\/vercel.com\/login\n\n### Repro steps\n\nWhen I open React Developer Tools profiler page, I get the following error:\r\n\r\n```\r\nProfiling not supported.\r\nProfiling support requires either a development or profiling build of React v16.5+.\r\n\r\nLearn more at [reactjs.org\/link\/profiling](https:\/\/fb.me\/react-devtools-profiling).\r\n```\r\n\r\nI first saw the problem on my own app, which is running React 18 and NextJS 15, but was able to reproduce the problem on every other NextJS react page I could find.\r\n\r\nI am running Google Chrome 131.0.6778.204 on Fedora 40. My version of React Developer Tools is 6.0.1 (10\/15\/2024). \r\n\r\nIf I test the same conditions, but on Firefox, profiling works, suggesting it is a problem with React Dev Tools.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-12-20T22:07:56Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31880"},{"issue_number":14,"repository":"facebook\/react","title":"[DevTools Bug]: Profiling not supported error points to stale documentation link.","description":"### Website or app\n\nhttps:\/\/vercel.com\/login\n\n### Repro steps\n\nI opened developer tools and went to the react dev tools profiling tab. There it says \"Profiling not supported. Profiling support requires either a development or profiling build of React v16.5+. Learn more at [reactjs.org\/link\/profiling](https:\/\/fb.me\/react-devtools-profiling).\"\r\n\r\nWhen I follow this URL, the top of the page says, \"This site is no longer updated. [Go to react.dev](https:\/\/react.dev\/blog\/2023\/03\/16\/introducing-react-dev)\"\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-12-20T22:04:06Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31878"},{"issue_number":15,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"1\" because a node with that id is already in the Store.","description":"### Website or app\n\nExpo Go & Google Chrome\n\n### Repro steps\n\nAndroid Bundled 589ms node_modules\\expo-router\\entry.js (1 module)\r\n (NOBRIDGE) LOG  Bridgeless mode is enabled     \r\n INFO \r\n \ud83d\udca1 JavaScript logs will be removed from Metro in React Native 0.77! Please use React Native DevTools as your default tool. Tip: Type j in the terminal to open (requires Google Chrome or Microsoft Edge).\r\n (NOBRIDGE) WARN  Route \".\/Colors.ts\" is missing the required default export. Ensure a React component is exported as default. [Component Stack]\r\n (NOBRIDGE) WARN  Route \".\/TabBarIcon.tsx\" is missing the required default export. Ensure a React component is exported as default. [Component Stack]\r\n (NOBRIDGE) WARN  Route \".\/useThemeColor.ts\" is missing the required default export. Ensure a React component is exported as default. [Component Stack]\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-core\n\n### DevTools version (automated)\n\n5.2.0-1717ab0171\n\n### Error message (automated)\n\nCannot add node \"1\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nat http:\/\/10.251.14.176:8081\/_expo\/react-devtools\/standalone.js:2:1011371\r\n    at f.emit (http:\/\/10.251.14.176:8081\/_expo\/react-devtools\/standalone.js:2:984358)\r\n    at http:\/\/10.251.14.176:8081\/_expo\/react-devtools\/standalone.js:2:985900\r\n    at http:\/\/10.251.14.176:8081\/_expo\/react-devtools\/standalone.js:2:1359186\r\n    at Array.forEach (<anonymous>)\r\n    at U_.e.onmessage (http:\/\/10.251.14.176:8081\/_expo\/react-devtools\/standalone.js:2:1359169)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-12-12T11:10:31Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31743"},{"issue_number":16,"repository":"facebook\/react","title":"[Compiler Bug]: Ref values may not be accessed during render when using `mergeRefs`","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvhgJcsNgB5CTAG4A+ABIJKlCPgDqOSoTkB6RaoDc4gL7jxx4-lxkA1gjYkYEALb4AFrlxMMGR7AHMmXF8oACMAOjhvYwB3CAArXARnLzJU4y8EGFCEAFopEjBjaO1ovLImOmMweGN64nRY3DBxWgZmVnx8woQAJVIwOQAVFX5xfHxYhfrMKFxR8uR8flGyRli1yZV8AB98emISeoRCQQBtAF1xQQ3t3f2p4-wX3D3SAGEyLTRHbOA4iWb4BJ0MA0JjUApXACSdGWqzG+AAvPglis1mBYhc4TB+AAhCAQSgIMh0QSWOjgpgkTYEjJSQhIlG42IUuihSL4OSYgCMwjEEjmkOh+AuMGhawxUthLMRyJxYxuAAY7rTwXMpDIYO4mDLUYyjic6FRKLS5jY6RI9bIpfRGCw2IMioRcfwyiKdVKcJsJQRsSb8BBGcz4WyVSawL6xXMsYz+LhOJgEOGsTG5ejc-gAOQ9F2sfPxxPlrMc0je0g0v02-CaMAIJObENrMsVub8dukfBkMCfSm7dgrMhVEakADy0VSCEYkw+Fq0KkE8VgUjoBExZWtFdt5YP+CstNt3WdfTY7AKRTWv282Doblw+hgznqoX4wEkfasG2-ZTPMO3z7GoEzsAAMgAIsoACiFL5FuhxWJ2QZEMoOanM2az8MulB1nacz2PgmADmAH6OL4LZlIOKRvoO0ScPgSQwGQfAUZECA+PU-ZOr0rrgg6Br8mYP4kOiwDupO5Svu+PL8EIGKHDcZQADToUoax3IIVgqGUjgINCJhmCop62HQRaXgMN7SWAskfgcMwSEUsYbIp6KHFswE-CQoInGcpCXNc9yPGC9rSI6UlegssQuV6ggEWeFkXq6HA2XeD6sM+xKeK4dBfmJx7-mJQE7CBpByGBkEwUo8Fcc+yGoawkpmJhUDYdWeEEeCxGYJ4E4+FRUiCRFwkKMoYkSVFYw1iQ6mtbWun6RkRmmMopnWOIIBWEAA\n\n### Repro steps\n\nI was previously getting an error saying, \"Ref values (the current property) may not be accessed during render.\" However, passing a function to access the refs seems to work as a solution since there is no eslint error now.\r\n\r\nIn the repro, wrapping the refs in a function return doesn't change any functionality so I'm finding this issue to be a little odd.\r\n\r\nThe error doesn't always appear with every component. I couldn't find a reason why.\r\n\r\nThis seems to be similar to https:\/\/github.com\/facebook\/react\/issues\/31290\n\n### How often does this bug happen?\n\nSometimes\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-12-12T09:32:53Z","comments":1,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/31742"},{"issue_number":17,"repository":"facebook\/react","title":"[Compiler Bug]: Compiler fails to memoize hooks with no hook calls","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/github.com\/billyjanitsch\/react-compiler-hook-detection-bug\n\n### Repro steps\n\nGiven the following three custom hooks:\r\n\r\n```tsx\r\nimport {useDebugValue} from 'react'\r\n\r\nfunction useFoo() {\r\n  return () => 'foo'\r\n}\r\n\r\nfunction useBar() {\r\n  useDebugValue('bar')\r\n  return () => 'bar'\r\n}\r\n\r\nfunction useBaz() {\r\n  return useCallback(() => 'baz', [])\r\n}\r\n```\r\n\r\nI'd expect the compiler to memoize all of them, but it only memoizes `useBar` and `useBaz`:\r\n\r\n```tsx\r\nimport { useCallback, useDebugValue } from \"react\";\r\nfunction useFoo() {\r\n  return () => \"foo\";\r\n}\r\nfunction useBar() {\r\n  useDebugValue(\"bar\");\r\n  return _temp;\r\n}\r\nfunction _temp() {\r\n  return \"bar\";\r\n}\r\nfunction useBaz() {\r\n  return _temp2;\r\n}\r\nfunction _temp2() {\r\n  return \"baz\";\r\n}\r\n```\r\n\r\nI'm guessing that it's because the compiler's hook detection logic looks for at least one hook call in the function body. I understand that it generally doesn't make sense to write a custom hook that doesn't use any other hooks, but the exception is when the custom hook would have used only `useMemo` and\/or `useCallback`, such as `useBaz`. I expect the compiler to let me remove those hooks without losing memoization.\r\n\r\nThis doesn't reproduce in the playground. I'm not sure why.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-12-10T23:35:42Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31727"},{"issue_number":18,"repository":"facebook\/react","title":"[Compiler Bug]: server components built externally by the compiler error when rendered in app","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/github.com\/DanielOrtel\/compiler-bug\r\n\r\n### Repro steps\r\n\r\nI'm building an esm UI library and ran into a weird issue with one component when adding react compiler to the build pipeline(which uses rollup with babel). You can check the reproduction repo above, steps:\r\n- set node 20.18.0 if not set automatically\r\n- run `yarn install`\r\n- run `yarn test-compiler-error` \/\/ this will build the library and start a bare-bones next app\r\n- open localhost:3000\\\r\n- app should error out with the following:\r\n```\r\nTypeError: Cannot read properties of undefined (reading 'H')\r\n    at IconsRoot (..\/..\/libraries\/ui\/.dist\/icons-root\/index.js:12:72)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at stringify (<anonymous>)\r\n    at stringify (<anonymous>)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\r\ndigest: \"2235527820\"\r\n  15 |       require(\"next\/dist\/compiled\/react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\r\n  16 |     exports.c = function (size) {\r\n> 17 |       var dispatcher = ReactSharedInternals.H; \/\/ <-- ReactSharedInternals is undefined here. \r\n```\r\n\r\nThis is a limited snippet of the larger UI library. The error occurs because the file doesn't have the `'use client'` directive, but this component should be server-renderable, it's just a barebones `div` component. If I remove the `react-compiler` from the build pipeline or if I make this a client component, it works as expected.\r\n\r\nUltimately, I'd expect adding the compiler to the build pipeline of my library to not break components which previously could be server rendered and force the use of client directive when it is unnecessary. \r\n\r\nMy suggestion, in case compiler-optimized components can't be rendered in server components, would be to have some config option that can be enabled for libraries to check for client directives and only optimize client components. And also to add some form of an error boundary to let consumers know that they're trying to render a compiler-optimized component in a server environment. The current error is just confusing and it took me a while to figure out what was the exact cause of it. \r\n\r\nBut the ideal scenario would be to not have to worry about in which environment the component is rendered. Sure, the compiler optimizations do nothing on the server, but that means that they could be essentially stubbed and still render as expected. I dislike the idea of having to output separate versions of components that can be potentially server rendered, simply because I'd like the client versions to be optimized by the compiler. \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-df7b47d-20241124","labels":["Type: Bug","Component: Optimizing Compiler"],"created_at":"2024-12-08T14:09:14Z","comments":12,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/31702"},{"issue_number":19,"repository":"facebook\/react","title":"[Compiler Bug]: Properties added to hook functions are removed","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgDMoA7OXASwhPyjAQGUIBbBXACwpIHMAKASnzAAOjXxxqkADYIAdFIh8A5OwQBPJf1H4AvqNF1GLNpx6zWuAIYATS1fwBefEoDu7OwgBuCGEv0kMbDx8awRCSygpAmIySmp8AFk1AEFMTAEhbVp6JgtTPi0SLJg2WBoAHmsKTwA+AAkEKQV8AHUcKWshQ1yTLm5zNhs7Sx1ygHoq2oBuUT0SEB0gA\n\n### Repro steps\n\nProperties added to hook functions get removed by the Compiler, and trigger the [rule](https:\/\/react.dev\/reference\/rules\/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-valueseslint(react-compiler\/react-compiler) below:\r\n\r\n```\r\nHooks may not be referenced as normal values, they must be called.\r\nSee https:\/\/react.dev\/reference\/rules\/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-valueseslint(react-compiler\/react-compiler)\r\n```\r\n\r\nI understand why this would be triggered for other scenarios where the hooks are referenced as normal values, but is this case really a violation of hook rules in React? It's not listed as a \"bad example\" in the React docs. If it is, then the compiler and the linter behavior is correct and expected, but can't help but wonder if this is really an issue and not an oversight?\r\n\r\n---\r\n\r\nFor context, I use this pattern in one of my apps that uses TanStack's React Query:\r\n\r\n```tsx\r\nimport { useQuery } from \"@tanstack\/react-query\"\r\nimport { api } from \"~\/server\/api\"\r\n\r\nexport const useGetClient = (id: string) => {\r\n  const query = useQuery({\r\n    queryKey: useGetClient.queryKey(id),\r\n    queryFn: async () => {\r\n      const data = await api.getClient(id)\r\n      return data\r\n    },\r\n  })\r\n\r\n  return query\r\n}\r\n\r\nuseGetClient.queryKey = (id: string) => [\"client\", id]\r\n```\r\n\r\nAttaching the `queryKey` function to the hook like this provides a nice developer experience because we don't need a separate import or a convention-based pattern for figuring out what the query key of a given query is.\r\n\r\nWe migrated to this pattern away from the pattern we used before where `queryKey` functions were separate objects\/functions.\r\n\r\nThanks!\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-df7b47d-20241124","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-12-05T13:46:19Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31673"},{"issue_number":20,"repository":"facebook\/react","title":"[Compiler Bug]: Moved breakpoint in React Native","description":"### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [x] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/github.com\/maciekstosio\/CompilerRepo\r\n\r\n### Repro steps\r\n\r\n- Run the app\r\n```\r\nyarn install\r\nyarn start \r\n```\r\n- Run dev tools \r\n- Try to put breakpoint on `const a = 'Test Error';` - it's moved to main component\r\n- Put breakpoint on `throw new Error(a);` - debugger don't stop on \r\n\r\nThe debugger used with React Native (0.76.3) sometimes moves the breakpoint to other places. It sometimes doesn't stop. I can reproduce it reliably with the variable assignment and arrow functions. The problem occurs both in DevTools and Radon IDE ), so I assume this is a problem with source maps after optimization or Chrome Debugger, not the DevTools front. \r\n\r\n|Without Compiler|With Compiler|\r\n|-|-|\r\n|<video src=\"https:\/\/github.com\/user-attachments\/assets\/bcb514cc-4697-4019-998f-79ca2fb1c219\" \/>|<video src=\"https:\/\/github.com\/user-attachments\/assets\/c1dbb46d-5da2-49d8-a1d3-1f4545729fe4\" \/>| \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n18.3.1\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-df7b47d-20241124","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-12-02T11:19:11Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31651"},{"issue_number":21,"repository":"facebook\/react","title":"[Compiler Bug]: False positive `Ref values (the `current` property) may not be accessed during render` for non-jsx code","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAHRFMCAEcA2AlggHYAuGA3GiTYQLYAOEMZOwOAVmAB44C+OAGYwI9HBhgIAhnDIB6bjwC0MKOQYIqdJizYcsCAEoIhA4aPGSZc7STgQSYNgGEI+fNMbYcAXhwAFMA0OHgAFoT4ACZStCT8AJR+AHzsIXiOzhnk0oQkCDAmZv6GRQEkUB4J1CShUmSwtfIAVDgAAgD6HQAKAKpGAKJdOM2KvAEYUYQAbhgANGm1oThSQsjZZLn5haZz6aFwEdGx6Yk1-DUIPMys7DhuHl4+FyD8QA\n\n### Repro steps\n\n\r\n\r\nfollowing code gives false positive error\r\n\r\n```js\r\nconst Collapse = ({\r\n  children\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  return \/* @__PURE__ *\/jsx(\"div\", {\r\n    ref: containerRef,\r\n    children\r\n  });\r\n};\r\n```\r\n\r\nbut not\r\n\r\n```ts\r\nexport const Collapse: FC<{\r\n  children: ReactNode\r\n}> = ({ children }) => {\r\n  const containerRef = useRef<HTMLDivElement>(null!)\r\n\r\n  return <div ref={containerRef}>{children}<\/div>\r\n}\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nfrom playground\n\n### What version of React Compiler are you using?\n\nfrom playground","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-26T21:18:57Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31637"},{"issue_number":22,"repository":"facebook\/react","title":"[DevTools Bug]: Component flashing many times but profiler says it was rendered once","description":"### Website or app\n\nhttps:\/\/berrotools.vercel.app\/signin\n\n### Repro steps\n\n- Access the website https:\/\/berrotools.vercel.app\/signin, you'll see a sign in form.\r\n- Open the DevTools, go to the Profiler tab and start profiling.\r\n- Focus the e-mail input and start typing any letter, should not be a valid e-mail so the error label will show. You'll see the error message flashing as long as you type.\r\n- Stop the profiling.\r\n- Check the profiling results, you'll see that the error message was rendered once, if you have typed random letters. The problem is, why did it flash many times?\r\n\r\nIf the website doesn't work try cloning and running the project located at https:\/\/github.com\/rhberro\/berrotools.\r\n\r\nThank you in advance!\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-11-26T16:29:16Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31636"},{"issue_number":23,"repository":"facebook\/react","title":"[Compiler Bug]: React Hook placement prevents memoization of dependent variables","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAHQHYIB4AcIwAuABAGZQZyECWEGxAMtWIQBQCUxwmxxcdLYgBtmJALzEoYBExYcA3Dz4CSAEwCGhdcQlSEAEU3qFmJfwyDcMCIjDTVs8cQDmCQgAVrt+49YiW7Ir0ktIAyhAAtm4AFtQYzgrEAPRJxACyEABuCMSEsWDE0RAQANbEAEYIpAQ5IljE6uVZCKbB5oIYEKoIBRIaWgB0Eeq4rKyd3ZxiAHxcSrztJP6EAJKECBE6xFY2PT6iANoTCAPUqgC6Qby8MG6w9NzB18QDr8cANPPXkFF5cc7IYSiNYbAY-GL-T5PYgAXyusMCrRudxg9FYXwAPABhSL4LAYEjHMBiYBEmHJaZKREYGGYEAwoA\r\n\r\n### Repro steps\r\n\r\nI noticed an interesting behavior in the compiler. If you place a React hook between two variables that depend on each other, the compiler skips memoizing them. But if you move the hook somewhere else (like above both variables), the memoization works as expected.\r\n\r\n| Hook between | Hook above |\r\n| - | - |\r\n|![Screenshot 2024-11-25 at 13 40 07](https:\/\/github.com\/user-attachments\/assets\/5e5e691d-94bf-47e5-bed9-72ccced1def8)|![Screenshot 2024-11-25 at 13 40 23](https:\/\/github.com\/user-attachments\/assets\/e45cd841-1f46-4ec7-81f3-0c13a31b565a)|\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19.0.0-rc.1\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-0dec889-20241115","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-25T12:37:32Z","comments":0,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/31631"},{"issue_number":24,"repository":"facebook\/react","title":"[Compiler Bug]: ESLint Compiler rules do not allow writing to external variable from effect-called function","description":"### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBUYCAogGaUJyEC+BlMEGBAOiDAgIZ2cBudgDsRCAB458BACYJKPKABtClKMLpoIwggEEAFAEoiIgiTJUadfUYIBeAHwmdZgjyNCX9ADQEA2gC6hp6mBAD0YQQAkpQEAJ7QBBgQAG4IBHgAFmhgTOqa2gQARvK46ZykFNS0eJy+WekIMCwwBADmEAi5PADuPHEAdKFqGnhaOu7GwKFmPWjCMhA9A+L2HCAAjIKh9CEu3HiwOgA8MmgpDsdhZxee9CIg9EA\r\n\r\n### Repro steps\r\n\r\n1. Run ESLint with eslint-plugin-react-compiler with the Playground's link\r\n2. Observe error \"InvalidReact: Writing to a variable defined outside a component or hook is not allowed. Consider using an effect\"\r\n\r\nI assume functions called from effects should have the same liberties as the effects themselves, else we are forced to write big effects. I used `window` as the external variable as it represents a common use case, but any other name would work.\r\n\r\nNotice the error only happens when the function which writes to `window` is defined after the `useEffect` which calls it. Invert the order and it's fine.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n18.3.1\r\n\r\n### What version of React Compiler are you using?\r\n\r\neslint-plugin-react-compiler@npm:19.0.0-beta-0dec889-20241115","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-24T22:42:46Z","comments":1,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/31630"},{"issue_number":25,"repository":"facebook\/react","title":"[Compiler Bug]: False positive local mutation warning inside filter","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [x] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEASggIZyEBmMEGBA5DGRfQDoB2HCAHjvgZSjsKaCOwIBhWjnYJ2eABTA0eBBjABfAJQFgHAgThiwhE1EqUCAXmLM8AOihgEAWTUQFCnVYB8u-QYEADYIhGhgUhBB1gKkQc4BBkbsJgSQGAgAkqrqMSpqYImB9pRoQaowCnCkTgjWfnrigc1ollU1ziUQEDqNzf0E4ZHRNngwUAhFzRpTgUx4sOJjE7PaHEWtBArpWTlg9iHsAOZ4ABYEfgAMvbPzi7o72QUANIMR3UEzTQZfP68A2vl1ABdLQBO4wcQAHgAJmgAG4EAD0Pg4XxAGiAA\n\n### Repro steps\n\n```js\r\nimport React from 'react'\r\n\r\nexport function Component({items}) {\r\n  const stuff = React.useMemo(() => {\r\n    let isCool = false\r\n    const someItems = items\r\n      .filter(cause => {\r\n        if (cause.foo) {\r\n          isCool = true\r\n        }\r\n        return true\r\n      })\r\n\r\n    if (someItems.length > 0) {\r\n      return {someItems, isCool}\r\n    }\r\n  }, [items])\r\n  return <div \/>\r\n}\r\n```\r\n\r\nGetting:\r\n\r\n```\r\nInvalidReact: Reassigning a variable after render has completed can cause inconsistent behavior on subsequent renders. Consider using state instead. Variable `isCool` cannot be reassigned after render (9:9)\r\n```\r\n\r\nBut it's not used after render. Curiously, changing the `if` condition to something that doesn't refer to `someItems` helps.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.2.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-a7bf2bd-20241110","labels":["Type: Bug","Component: Optimizing Compiler"],"created_at":"2024-11-17T20:15:49Z","comments":3,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/31569"},{"issue_number":26,"repository":"facebook\/react","title":"[React 19] Prewarm with use() broken in certain state-change situations in the parent","description":"## Summary\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\nWhen testing the new prewarming, I ran across a situation where an effect \/ state change in the parent seems to break prewarming. This only happens with `use()`, not with `throw promise`:\r\n\r\nhttps:\/\/codesandbox.io\/p\/sandbox\/sibling-suspense-use-reproduction-lmscnl\r\n\r\nI have not explored exactly under which circumstances this happens.\r\n\r\nI did not find this in a real app, it happened when I was testing edge cases with React Query and noticed `useSuspenseQuery` worked as expected (`throw promise`) and `{ promise } = useQuery(...); use(promise)` did not in one case.\r\n\r\nI am not sure this is a bug or intentional behaviour, but wanted to file it since it behaves differently with `use(promise)` and `throw promise`.","labels":["Type: Bug","React 19"],"created_at":"2024-11-17T12:27:05Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31566"},{"issue_number":27,"repository":"facebook\/react","title":"[Compiler Bug]: null reference exception if you assume a value is not null in a callback (which can be valid)","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAKgmDgBTBEC2AhgJ4BGCAclADacA0RAvgEoiwADrEicQhUnMiAXiJQwCAML1uzenADWlSsPkA+EeKLmiaTNSIAPZHSasO3AHS2BggNxmBfANoMLOxcvAC63uK+MAg4sMRBzqFEAPxEADxgAA70xAD0Jg7pACZ4AG5EhKqceLrywHDM-EQFPpj8IPxAA\n\n### Repro steps\n\nSimiliar to https:\/\/github.com\/facebook\/react\/issues\/31550 but with useCallback and no external deps.\r\n\r\nYou seem to assume that accessing `x.y` is safe in the render method if it is safe in a callback.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-a7bf2bd-20241110","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-15T14:28:17Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31551"},{"issue_number":28,"repository":"facebook\/react","title":"[DevTools Bug]: Components tab freezes after inspecting","description":"### Website or app\n\nhttps:\/\/dev.permaplant.net\n\n### Repro steps\n\n1. Login\n2. Go to Maps and create or open one\n3. Look for the TimelinePicker component in the components tab\n4. Click on it to inspect it\n\nAfter that my components tab freezes and sometimes my RAM fills up endlessly. \n\n(If you need authentication, just contact me)\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-11-15T09:45:50Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31549"},{"issue_number":29,"repository":"facebook\/react","title":"[Compiler Bug]: eslint plugin rule only applied to first instance inside a file","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhHCA7MAXABAMwglwF5cAKASlID4LqS7gBfAHQ3YQA8AHCGPABME+AIZQANnnxQMcbAEtMuALIBPAII8eVXMHa5c6LNKIBhURIkAjUXADWpXACUEd7ADooYBBau2HckIIKkoDI0wcXFsYPxs7RzJXdy8fOID7IKJQ9nCYBGxYDFwAHkEFADcaAAkEK2IAdX4JQRKAenKqgG52NgwQZiA\n\n### Repro steps\n\nFor the rule 'Expected the first argument to be an inline function expression', it is only applied to the first violation even if there is more than one violation. (Example in playground link.) Moreover, on my setup if I eslint-disable the first violation and then eslint-enable after, then subsequent violations still aren't shown. I couldn't get eslint-disable to work in the playground though.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\nn\/a eslint-plugin issue","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-14T21:27:01Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31545"},{"issue_number":30,"repository":"facebook\/react","title":"[Compiler Bug]: Incorrect \"Writing to a variable defined outside a component or hook is not allowed.\" error","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBUYCAgllgQL4EBmMEGBA5GgHYDWrA3ADodMOfERJkAwgEMANjIBGUuFwA04hBIgc8CAB6E6jZmxgIlePoOG5CxUggCiMJjABC0DgBMpMAJ60GJhZWU3MAWgRnXDD5D28-Sw4rbBsxLCYAcxgpDE1tPQNA41YAOgB6Th0YDlkwEoArMETBMoAqVsECVoJyAgAlMzhCAAsICC4GXAIlRDAwTgyiAAEZTgmABUzsjDpOMDwpDkRprwIAAz00PDOGKCO8NC0CPGGpQjQwdU9JmAIwUYA7gsTgRIi4CAAKABuaCkILBU1id3ivgAlCdvpcHhwMiVOq0yoI9CJCPQ7kNHhx1JsIFkchD0cBOgQZAhbH9Ae5kT5-HQALzqJwuLleHkMgRUllssRY5DTKgOXRXAIC+yULDi5ms9npWnbFXqPI6fQQ3V03JaY14VESrXSrEEVWSWQKJRcCHMgiQhEwOV3LgcCAAjjovkAPiInq9BF1szqWM0ngQjoIAEZbZLoxygyKURCfTao16pAqlXh81EYIXM7QVFGANolrCKq5qf45uI8gC6dcl1eZpjwsCpxDN2zUDpoEpoghANCAA\n\n### Repro steps\n\n1. Run ESLint with eslint-plugin-react-compiler enabled on the code from the repro and observe an error \"Writing to a variable defined outside a component or hook is not allowed. Consider using an effect\".\r\n\r\nThe error is caused by using `process.exitCode = 1` inside a `useCallback` hook, which does seem like a false positive. Or am I missing something? Thank you.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\neslint-plugin-react-compiler@19.0.0-beta-a7bf2bd-20241110","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-14T20:22:10Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31544"},{"issue_number":31,"repository":"facebook\/react","title":"[Compiler Bug]: Cannot alter scroll values on a element -  Mutating a value returned from 'useState'","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAggBTBFhwwQA2dAChGEQL4CURwAOsUXEJgcRANoI6AGioIcAUToBdIgF4iAJQQBDXADooYBAGUcWnAjIcA3Hz5EiBhABktAT2jy0aBLjKXVAHzcRHb2RBK61LQMTghoImpR9EwsNvxs0uJSVDTJzGCKHLb8MLKwxAA8ACZ4AG5EpWgqwIbydGwBFQD0NbUBaWwgbEA\n\n### Repro steps\n\nSometimes we need to \"mutate\" a html element, e.g. when dealing with scrolling.\r\n\r\nBut with this code we get an error:\r\n> Mutating a value returned from 'useState()', which should not be mutated. Use the setter function to update instead\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-a7bf2bd-20241110","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-12T09:07:07Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31483"},{"issue_number":32,"repository":"facebook\/react","title":"[Compiler Bug]: `eslint-plugin-react-compiler`: npm warn deprecated `@babel\/plugin-proposal-private-methods`","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\n`npm install eslint-plugin-react-compiler@beta --save-dev`\n\n### Repro steps\n\n1. \r\n```sh\r\nnpm install eslint-plugin-react-compiler@beta --save-dev\r\n```\r\n\r\nMessage: `npm warn deprecated @babel\/plugin-proposal-private-methods@7.18.6: This proposal has been merged to the ECMAScript standard and thus this plugin is no longer maintained. Please use @babel\/plugin-transform-private-methods instead.`\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\nN\/A","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-12T08:10:34Z","comments":3,"reactions":6,"url":"https:\/\/github.com\/facebook\/react\/issues\/31481"},{"issue_number":33,"repository":"facebook\/react","title":"[Compiler Bug]: Getting false eslint error from compiler","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nNot Applicable. \n\n### Repro steps\n\nimport { useEffect, useRef } from 'react'\r\n\r\nconst usePrevious = <T>(value: T): T => {\r\n  \/\/ The ref object is a generic container whose current property is mutable ...\r\n  \/\/ ... and can hold any value, similar to an instance property on a class\r\n  \/\/ eslint-disable-next-line @typescript-eslint\/no-explicit-any\r\n  const ref: any = useRef<T>()\r\n  \/\/ Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value]) \/\/ Only re-run if value changes\r\n  \/\/ Return previous value (happens before update in useEffect above)\r\n  return ref.current\r\n}\r\n\r\nexport default usePrevious\r\n\r\n**Getting false eslint error, above is a custom hook to store previous state value.** \r\n\r\nRef values (the `current` property) may not be accessed during render. (https:\/\/react.dev\/reference\/react\/useRef)eslint(react-compiler\/react-compiler)\r\n\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-63b359f-20241101","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-10T16:00:15Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31474"},{"issue_number":34,"repository":"facebook\/react","title":"[Compiler Bug]: \"Mutating a value returned from 'useContext()', which should not be mutated\" When the value is a Ref","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAjggDswCBZATwGETcMCBeQmBAQ3tuPvVwApgAHWKCebALaYANggBKCAGbJ8wOLFbdlxKFKkBfYXoCUw4Rmx58AE0VsdBBVGJxcASxL4ACmw25akkgRuPiMVYXxCEjJ8DAlpOUV8ZigwBIU+AHIAOQgMkxFiCNZcWEK+cIj8AB4APgrK6qouHlwAOk8YCAA3VxsYfC62KSgERmBgWMkZeQU9PTrChsqq6gALVykrf2xiIIIAegWl6v2mugZ2zp6+o+XDiqMAbkNTYkdnNw81ja2IAN3gqEhIsiKQCMAYug4tNEnokvgUghmgw+GduAx8hVEQBRBQKBAuPghJI1MKLCKTeIzVpqGC+eEZACaCDAGQqegANPgANqUmEKAC6+QiFWKpWqVlcXXuxAMxBAeiAA\n\n### Repro steps\n\n1. Instantiate a Context\r\n2. In Parent, Instantiate a ref\r\n3. Wrap the child in the Context's Provider, and pass the ref as a value\r\n4. Get the ref in the child, and mutate it in a useEffect\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-63b359f-20241101","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-10T03:11:53Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31470"},{"issue_number":35,"repository":"facebook\/react","title":"[Compiler Bug]: \"InvalidReact: Mutating component props or hook arguments is not allowed\" When Passing a MutableRef as a prop, then mutating it in child","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwAUyYE7cBhCAFtsdHrgAUASnzAAOm3xxWYAhjLDKCAEql8AXnxQw20uIDkAOQhnJ8+fnzdcsNuPsP8AHgB87j174ACyZKQgFhVjEZADpY4DUNExIAX2T8AHpfBX9PQiYAN3xWPkomOABrPWApPW85bP9FZQhNaMoIAHNzAAkyfIR8IJDCQ2MAURISBEYwfAAjBB5HegB+MwAafATMTR0SaLhYbl5bBodUjKyczPdJAG55ZLs6WgZmVkHg0PCRMXF49DqHZJZLSeoOIwICZTRjiKT6bwyPxbQGJPYHI5RAxmACaCDAZncyU2AG1trtSABdU7uJwuLx5fI3OhPOggZJAA\r\n\r\n### Repro steps\r\n\r\n1. Instantiate a ref in the parent\r\n2. Mutate the current property in a useEffect in the child\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n18.3.1\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-63b359f-20241101","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-10T02:49:42Z","comments":3,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/31469"},{"issue_number":36,"repository":"facebook\/react","title":"[DevTools Bug] getCommitTree(): Invalid commit \"7\" for root \"1\". There are only \"7\" commits.","description":"### Website or app\n\nprivate\n\n### Repro steps\n\nprofile re-renders click on individual re-renders. Clicked on the last re-render and it crashed instead of displaying info.\n\n### How often does this bug happen?\n\nOnly once\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.0-d66fa02a30\n\n### Error message (automated)\n\ngetCommitTree(): Invalid commit \"7\" for root \"1\". There are only \"7\" commits.\n\n### Error call stack (automated)\n\n```text\nve\/<@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1159236\r\nCommitFlamegraphAutoSizer@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1404914\r\nrenderWithHooks@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:52244\r\nupdateFunctionComponent@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:81718\r\nbeginWork@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:95937\r\nperformUnitOfWork@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:154622\r\nworkLoopSync@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:154498\r\nrenderRootSync@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:154249\r\nperformWorkOnRoot@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:149824\r\nperformSyncWorkOnRoot@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:164884\r\nflushSyncWorkAcrossRoots_impl@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:163205\r\nprocessRootScheduleInMicrotask@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:163662\r\n1519\/ensureRootIsScheduled\/<@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:162805\n```\n\n\n### Error component stack (automated)\n\n```text\nCommitFlamegraphAutoSizer@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1404715\r\ndiv@unknown:0:0\r\ndiv@unknown:0:0\r\ndiv@unknown:0:0\r\nSettingsModalContextController@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1297733\r\nwl<@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1536567\r\nfa@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1315530\r\ndiv@unknown:0:0\r\ndiv@unknown:0:0\r\nThemeProvider@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1318230\r\nportaledContent\/<@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1318420\r\ndiv@unknown:0:0\r\ndiv@unknown:0:0\r\ndiv@unknown:0:0\r\nThemeProvider@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1318230\r\nTimelineContextController@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1395885\r\nProfilerContextController@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1387636\r\nTreeContextController@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1209953\r\nSettingsContextController@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1238133\r\nModalDialogContextController@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1375334\r\nDevTools_DevTools@moz-extension:\/\/beb769c0-41a5-4f80-ba39-12fab791919f\/build\/main.js:1:1544294\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=getCommitTree(): Invalid commit  for root . There are only  commits. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-11-08T18:59:44Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31463"},{"issue_number":37,"repository":"facebook\/react","title":"[Compiler Bug]: useMemo does not provide stable results across renders for specific functions when compiler enabled","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAejQAgMIBsCWcA1vgHYDmmALgBYKYK4IC2CpVmA7vrrpmXBgs2HWvTgFimONHYAdUhkwBDUgBNMAMwjxxEZgAcIpEZiEBaIeoQwFSgMoD6AN2W4oCAIwr1mV+4QAJhUhTCgwMkoAA3CEAFkWCCiufFpMOyxVBkMqAE9MNQQDNkLSOHzlGBhlXIAaajp8sBpoXA1SCA44GlVyBAA6DMwAdVSaHH0DHhsGUmUAIyY1ev8PYO7ehDBB0gUEAA8jGA5CzWUoXA5NKDKqfGNMONyAQQMDAAoASkxgBUxMJRgKgLJgqQQQMBgMwlGxgP7SYxAvxuDzeAC8YTA8US7y+mDRAD5HspaP1qup9F96gBtAC6nwA3Ap4UoOhwgSD6MpwZDodYYFDOFgZIZpjB0qR-kp5lAOPhBWNoF1JmKmZKAcKspwdEQQrINOFIhKpcLERxqasgrUAPq0-GYhD2YFUBC476E4mk8lqSnfADUmE8n0+8JkpCRluCGNiCWYEDd+KJcRJNDJqh9zDxAc8NPpapZwskJAoKV40MsMNs6rDSOpAiErHY9SxVAAkmUGyI7dGsU6Sa6AAyM5nqoRUWCSgA8anwzkwxjwhCIaOAeI9LfbgmE7He+ET-Ew2c+AF8CRIl8hgPXt1RjysUV5L5bPHfkQFAk+H4Fj5O0DPnASarHiAx5AA\r\n\r\n### Repro steps\r\n\r\n1. Write a `useMemo` function that uses Math.random() AND some other value or function, for example:\r\n-  `const val = useMemo(() => Math.random() + 0, []);`\r\n- `const val = useMemo(() => Math.floor(Math.random()), []);`\r\n2. Cause the component to re-render\r\n3. The resulting value will be re-computed on re-render\r\n\r\nIn associated repro link, clicking the component increments a counter which triggers re-render. Without compiler both memoized values are stable; with compiler, only the first is.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n18.3.1\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-8a03594-20241020","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-08T17:36:46Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31462"},{"issue_number":38,"repository":"facebook\/react","title":"[DevTools Bug]: Element selector mode not working with coarse pointer","description":"### Website or app\n\nhttps:\/\/react.dev\/\n\n### Repro steps\n\n\r\n\r\nhttps:\/\/github.com\/user-attachments\/assets\/159b1f24-dd54-4c8e-b726-1d37a131316e\r\n\r\nUsing the device emulation mode, switch to a mobile device and ensure the pointer is that used for touch devices (circular, rather than the regular fine pointer). \r\n\r\nToggle on the element selector mode. \r\n\r\nTry to select an element on the page. \r\n\r\nNo overlay when you hover the coarse pointer on the emulated device.\r\n\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-11-07T13:00:18Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31447"},{"issue_number":39,"repository":"facebook\/react","title":"[DevTools Bug] Cannot remove node \"2546\" because no matching node was found in the Store.","description":"### Website or app\n\ne-comerce\n\n### Repro steps\n\nlogin\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCannot remove node \"2546\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1173889\r\n    at v.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1140783)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1142390\r\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1552529)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-11-06T11:24:01Z","comments":2,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/31436"},{"issue_number":40,"repository":"facebook\/react","title":"[Compiler Bug]: Does not check for ref access in setState initial value function","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAKgmDgBQCURwAOsUXIRUTgIYBGASgmkQC8RKGAR80NRkRFiAypxwJKNIQD523CQDo4sGAkw5qAbkYBfEOaA\n\n### Repro steps\n\nThe playground compiles, but it should fail (Rules of React)\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nlatest playground\n\n### What version of React Compiler are you using?\n\nlatest playground","labels":["Type: Bug","Component: Optimizing Compiler"],"created_at":"2024-11-05T02:09:57Z","comments":0,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/31418"},{"issue_number":41,"repository":"facebook\/react","title":"[DevTools Bug]: Settings \/ Components \/ Hide components where...  - need to be set on each reload.","description":"### Website or app\n\nhttps:\/\/react.dev\/\n\n### Repro steps\n\n_When filtering components under \"Hide components where... \" you need to modify the filter each time you've reloaded the page and\/or hide\/show the Chrome DevTools. Otherwise the filter doesn't bite and the hidden components still show._\r\n\r\n**For example:**\r\nName matches Anonymous\r\n\r\nWorks fine the first time you enter it - all Anonymous components are hidden.\r\nReload the page and the filter no longer applies. You need to open:  Settings \/ Components \/ Hide components where...  and modify the entry and it works again:\r\n\r\n**For example:**\r\nName matches Anonymous*\r\n\r\nOr toggle OFF - close the dialog - open the dialog and toggle ON - Now Anonymous is hidden again.\r\n\r\n\r\n<img width=\"820\" alt=\"Screenshot 2024-11-04 at 13 10 37\" src=\"https:\/\/github.com\/user-attachments\/assets\/7d7bf89f-d801-4605-9100-140036e67589\">\r\n\r\n\r\nUsing 6.0.1-c7c68ef842 of the extension\r\nChrome Version 130.0.6723.92 (Official Build) (arm64)\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-11-04T12:12:54Z","comments":3,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/31410"},{"issue_number":42,"repository":"facebook\/react","title":"[Compiler Bug]: `'Unused 'use no memo' directive'` lint warning even though the directive is used","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAegFQYDoDsAEG+AKgBYCWY+l+Y5AtuQDYCGM+ALhPlGAgMocWHBABp8AIygdqMlkyYQA7lQDmCDh3K5VnUgnysRYGSeEGEANwS48hSQgBmEGAY77aQkflIsqEhBseAAcAE3NQyQBPfFcWOA4AOjsMNDwEAA9glxlHKFwE8ggCXgEogsFzAAptci15AEp8YDt8AHJS-FxuegR6CDbWuGKTfABtcT4OADV5KAQAXXwAXh4+SpEa3DryRoBuIZGZV0cVtYQAJSctnf3W1w5YAjHW-HwqpuWAPlinRLhYK5cBxRK93pY5ghPj8WgQ3vDyKcqid-oCbDIAITLVYQpjzJqw+FE36OVEwIEyHGQg5w4m0DSzPEIKq4-E0ukAXzBHNBcIWNK5tlwmBwBCIAEEfBAIABrTjcGWBYKcGDxOUQU7uCyhOosCRMAxmbwavQGbTBaTJMX4AByEG87mE+CUBlwgUiXB8LFwoQN+BY+GGUGCfpNCFC6kDfgQYGQKXwAEZEoGIPRGDJ6CwYgEowpw9QCFraCxer8fQh2IoIMq-CFwiIAKI6maQ+MAJmTwfrCCbdUZ83wmezBjg8gNkRYjhE7GGabq1Coo7zoXjZBjBjYBlCA89Rcc8RkjpkNqg9ACMAAkrgLTJpMxyAAvGOyKjKAhGhAAWgk0ZX1tZBhduYVDepEs7pgW+AuKEFbyvgwQVs4MD0Cm5IIAk+BIZmmjaKoVqEGkbpZDkmH5IUxTnL2Qj6syhJQbgADCvg6GIrTFAAQniMC8m8cShAA8rgTAxKs+5MHwPH4ABknFEx3rqFeN79qxcKyd6iBMJJMH7lATAcFRuFnGJEl4ByBKtB0fBdD0fQDIcuCjGM6gtky7EILhVHhpMDKQm5HnNuGSyrKU-DlHAGzMmC2ksLp+nNoZAD8zRSZC+AcvgyBdLpmmtA0NL2aM4HzqsHwrDCYLDA5MgAX5OieZEqzOcptWqPVHzsgiSI1e5dUBZEWKrLg2X4AAZCNKWuT1rV9YkAH4ANE34s0YJvLJzHqAliQsr5U31bNkJ5dyYJTM1u19VUQ0KIdtL0ZxsCbe1rQcvlcKVYV6kIEwZyld8y03SdO3+XU4YXdl11Emt8kIIp0jKQ9AHg-CakFJ9D2I6tuB3TAaMdc9eAFTI6IVlREXfdCf1Eoi7wYnxgnCeZN1vADk1AyIoRVMAi0GGZHVvIKfMvW8b23mE5hUcp31ukoynk3RGNySxMMufMD1SzLvMplVXMtfVZxNYDvXA+z6PUF1BvTUbo3jd1rPhvtTLzdiXQINLB0U8SzPzDr52cwBmVq6lPPcvgn1WXL8JoGgJAUFQNCOOQrgTlOsFFSCtDcPOYCkNATCRKo3AmKq5CqKQh7cJDLErfgkf4AA6huYBgKebi+DI85KMwX1utY7A5vHicOEhFjAsTzYReI2cuj3+HEhXG1bQHTIm-zaWC5row24bbN6z5LNbyDiMPE87tvH72tnZbSWbxbbP2wOmXSWClAGToD-m7rC2XV9Y3zbTQlRJJIWqZ0yAKjCjHKN0iYwBJl4FSRIgKNmbMpSSgpBQgA5EAA\n\n### Repro steps\n\n`useSyncState` and `useEditable` break when the React Compiler runs on it. So I added `'use no memo'` to the top of `useSyncState` and `useEditable`. In both these places, `eslint-plugin-react-compiler` reports that the `'use no memo'` directive is unused. Even though this directive is the only difference between a passing E2E test and a failing one!\r\n\r\n<img width=\"561\" alt=\"image\" src=\"https:\/\/github.com\/user-attachments\/assets\/fa72f31a-2d00-4d2a-8f90-b39db1c69185\">\r\n\r\n* Related to https:\/\/github.com\/facebook\/react\/issues\/31406, where I report that the compiler should ideally bail out on these hooks so the `'use no memo'` directive becomes unnecessary.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-6fc168f-20241025","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-02T17:25:16Z","comments":0,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/31407"},{"issue_number":43,"repository":"facebook\/react","title":"[Compiler Bug]: Compiler doesn't catch ref access in render","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAegFQYDoDsAEG+AKgBYCWY+l+Y5AtuQDYCGM+ALhPlGAgMocWHBABp8AIygdqMlkyYQA7lQDmCDh3K5VnUgnysRYGSeEGEANwS48hSQgBmEGAY77aQkflIsqEhBseAAcAE3NQyQBPfFcWOA4AOjsMNDwEAA9glxlHKFwE8ggCXgEogsFzAAptci15AEp8YDt8OGKTfABtcT4OADV5KAQAXXwAXh4+SpEa3DryRoBuVvbcTtdHCamEACUnOYXl1tcOWAIu1vx8KqbxgD5Yp0S4WFdcDlErm8shhDvHi0CNcQeQtlVNi83jYZABCcaTX5MYZNIEg9FPRxQmDvGSIv4rYEY2gaQbIhBVJEownEgC+31pX2BI0J9NsuEwOAIRAAgj4IBAANacbiCwLBTgweLCiBbdwWUJ1FgSJgGMzeWV6AzaYLSZLc-AAOQg3ncwnwSgMuECkS4PhYuFCqvwLDa0GCzs1CFC6jafgQYGQKXwAEZEm76IwZPQWDEAn6FN7qAR5bQWPQDO9Qgh2IoIBK-CFwiIAKKKgZ-YMAJnDUDC5jLdTJw3wMbjBjg8lVkRYjhE7Hakbq1ConcToWDZADBjYBlCLbtqcc8RkZpkhqg9ACMAAkrhdTJpMxyAAvAOyKjKAjqhAAWgk-onBqpBjrxfPDsig6jyfwLmz7B2sEObODA9BujiCAJPgoExpo2iqPqhBpNaWQ5DB+SFMUOyNkIKoUmif64AAwr4OhiK0xQAELIjATLXHEoQAPK4EwMSTMuTB8PR+AvjxxSkQ66h7gezYUcCAkOogTA8dmy5QEwHC4Qh2ycdxeC0qiqwdDIXTqBW5JUQgCG4d6vSkn8RkmeW3pjJMpT8OUcAzBS3xySwClKeWKkAPzNLxfz4LS+DIPguAKTJrQNIS2nrDI37DpMtwTIC3xrJ0L5WTopmRJM+liVlqg5bcNKguCmXGdlNmRPCkzhQo+AAGSNQFhmVUV1WJC++C1a1KLNN81wCWR6g+YklKWe1OVdX80UMt8fQFVN1VVPVTBzUSRE0bAY0la0tIxcC6XxVJCBMNsyUPANm2LZN1l1N6q0RRt6LDUJCAidIYm7S+L0gpJBRnbtf1Dbg20wMDpUHXgsWdDCOa4S5F0Atd6JgjcsKMSxbFaZt1y3W190iKEVTAH1BiaaV1xstTh3XMdRYNuWYkXdaShiSjhGg4J5GfQZwy7WzHNU26cXk4VOXbPld1VQ9JMg9Q5Uyx1ctNS1FVE96M3kj1CJhQg7OzajGIE8MEsrWTL6hULgWUwy+BnXwxvomgaAkBQVA0I45CuD2fY5hGUa9Nww5gKQ0BMJEqjcCYUrkKopCrtwb3kYN+Cu-gADqM5gGAm5uL4MjDkozDnda1jsPG3u+w4oEWB8CPli54jh5aFdIRiKejeNNvkgrNNBXTosZcrkt5RZhOy8Te3Aqc5zO+ToUa1PSZ+cvKvE9rLZL38PHXJQyk6Dvk8b0mvVrWrPVY6xUR74HdR352gORZt8MwIjXjieib5M02u-7RpPAIBaRAA\n\n### Repro steps\n\nHi! I'm hoping the React compiler catches this invalid ref access and bails out of optimizing code like this, but I understand that catching this kind of issue is probably a bigger undertaking than normal.\r\n\r\nOur team's codebase has some dubious core library hooks which break React's rules, or at least make it easy to break React's rules without knowing what you're doing. Here, `useSyncState` advertises itself as a cooler `useState` that lets you see the freshest state, even before React does! (But after memoization, this just means you see stale state). This leads to it being used incorrectly in `useEditable`, when we call `getValueBeingEdited()` inside of a render.\r\n\r\nWhen I installed the compiler on our codebase, many E2E tests started failing. One of the tests showed us that when we update one EditableCell, the state change doesn't propagate to another cell like it was supposed to. The test passed after I added `'use no memo'` to *either* `useSyncState.ts` *or* `useEditable.ts`. For now, I'm going to add `'use no memo'` to both of these files, but my understanding is that every time I add `'use no memo'`, you'd like to see why I had to do so.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nPlayground\n\n### What version of React Compiler are you using?\n\nPlayground","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-02T17:05:03Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31406"},{"issue_number":44,"repository":"facebook\/react","title":"[Compiler Bug]: ","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBUYCAsghhADQlkBKCAZnaQgMICGANjwEZc4AawIBfAsxgQMBADogYCIXgUBuOQDtMOfEQJ4AFtLx4eCcZOmyFPCABMuYQ+q1aEAD12F7LLlB5CZihNODw0CE0CcgBPAEEsLAAKAEoiLQICOEiwQiVmAgBeegQmZlSNKIysnMIjEzMEewAxCDhSIpLKaiTqzNSigD4+zINjCFNzXqjR2YHCwYJ8gDp2mCVNPAB+ZeY20lSaEdmAVgAGM6OZ2czgY5vzLns0TQBzZEleMiubm7wYLhoHgvd4GGBQBA-X7iKGzFKwggAbT27TAAF0oSlKtV2ABRZjMBBhJLzRbAeoTRotfZgVJiOiIimTJqtVFolJuGZKPCwKIAHmeADclixCsB8mJBgAJBB8CAEADquB49j5AHohYNKmItCAxEA\n\n### Repro steps\n\nThe compiler assumes that `ref.current` is called during render when inside of `useMemo()`, even when `useMemo` is returning a callback that is only called in a `useEffect` and never during render. See playground for the code.\r\n\r\nThe most common use case for specifying a callback with `useMemo` instead of `useCallback`, is when the callback is wrapped in a debouncing technique, like `lodash\/throttle`:\r\n\r\n```tsx\r\n  const throttledFocus = useMemo(\r\n    () =>\r\n      throttle(\r\n        () => ref.current?.focus(),\r\n        500,\r\n        {\r\n          leading: false,\r\n          trailing: true,\r\n        },\r\n      ),\r\n    [focus],\r\n  );\r\n```\r\nIt's as if the compiler isn't differentiating the closure that returns the memoized value (and thus is indeed firing during render), and `useMemo` returning a callback \ud83e\udd14 \n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n^18.3.1\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-6fc168f-20241025","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-11-01T12:50:54Z","comments":3,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/31396"},{"issue_number":45,"repository":"facebook\/react","title":"[DevTools Bug] Could not find commit data for root \"1\"","description":"### Website or app\n\nShadow\n\n### Repro steps\n\nSteps:-\r\n\r\n1.Rendering the FlatList with my below code - \r\n<FlatList\r\n          data={numbersArray}\r\n          keyExtractor={item => item.toString()}\r\n          renderItem={({item}) => (\r\n            <SquircleView\r\n              style={{width: 300, height: 200}}\r\n              squircleParams={{\r\n                cornerSmoothing: 0.7,\r\n                cornerRadius: 30,\r\n                fillColor: 'green',\r\n              }}\r\n            \/>\r\n          )}\r\n        \/>  \/\/ data length is 1000\r\n2. Start Scrolling Continuously in the flatlist, then this error happens\r\n![Screenshot 2024-10-29 at 11 51 15\u202fAM](https:\/\/github.com\/user-attachments\/assets\/e835ad91-d8fa-4382-97aa-2c5eb4677e45)\r\n![Screenshot 2024-10-29 at 11 51 15\u202fAM](https:\/\/github.com\/user-attachments\/assets\/b0cf7f5a-6342-4bc6-821e-bc11141ae069)\r\n\n\n### How often does this bug happen?\n\nSometimes\n\n### DevTools package (automated)\n\nreact-devtools-core\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCould not find commit data for root \"1\"\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n```text\nat v_ (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1368389)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at ts (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1157861)\r\n    at \/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1376165\r\n    at Ks (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1173575)\r\n    at \/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1176231\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at Ys (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1176065)\r\n    at Zc (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1247244)\r\n    at Lc (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1239735)\r\n    at xt (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1079120)\r\n    at ca (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1106654)\r\n    at Ec (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1227871)\r\n    at Y_ (\/Users\/sunaina\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1382695)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Could not find commit data for root  in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-29T06:27:45Z","comments":0,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/31380"},{"issue_number":46,"repository":"facebook\/react","title":"[Compiler Bug]: Error when calling `React.createElement(..., { ref })`","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEMCaAkpgBI4C2ANgKL0K0KY4AUAlEcADrEicQmBwkyRALxEoYBACUynTFHr1uAbkFEJOWMSUBDXADo4pIzgTNW7LvxBwjmAG5GwjgDR8JaIgC+WoIBIAFAA\n\n### Repro steps\n\n[Playground link](https:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEMCaAkpgBI4C2ANgKL0K0KY4AUAlEcADrEicQmBwkyRALxEoYBACUynTFHr1uAbkFEJOWMSUBDXADo4pIzgTNW7LvxBwjmAG5GwjgDR8JaIgC+WoIBIAFAA)\r\n\r\nThis code:\r\n\r\n```js\r\nfunction refInHtmlElement() {\r\n  const ref = useRef(null);\r\n  return React.createElement(\"canvas\", { ref });\r\n}\r\n```\r\n\r\nHas this error:\r\n\r\n> InvalidReact: Ref values (the `current` property) may not be accessed during render. (https:\/\/react.dev\/reference\/react\/useRef) (3:3)\r\n\r\nEven though we're using a ref in the way it's meant to be used. If we rewrite it in JSX, the error goes away:\r\n\r\n```jsx\r\nfunction refInHtmlElement() {\r\n  const ref = useRef(null);\r\n  return <canvas ref={ref} \/>;\r\n}\r\n```\r\n\r\nI find this behavior surprising, because I always thought that JSX desugared down to `React.createElement` anyway....\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nPlayground\n\n### What version of React Compiler are you using?\n\nPlayground","labels":["Type: Bug","Component: Optimizing Compiler"],"created_at":"2024-10-25T20:11:09Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31357"},{"issue_number":47,"repository":"facebook\/react","title":"[DevTools Bug]: React profiler reporting false rendering times","description":"### Website or app\r\n\r\nhttps:\/\/codesandbox.io\/p\/sandbox\/suspicious-darkness-zpfcld\r\n\r\n### Repro steps\r\n\r\nVisit sandbox: https:\/\/codesandbox.io\/p\/sandbox\/suspicious-darkness-zpfcld?file=%2Fsrc%2FApp.js%3A19%2C22\r\n(This is a modified version of a sandbox from Dan Abramov's blog https:\/\/overreacted.io\/before-you-memo\/) \r\n\r\nObserve that ExpensiveTree does not actually render when you type in the text input. I confirmed this with the Chrome CPU profiler (basically 100% idle):\r\n<img width=\"341\" alt=\"Screenshot 2024-10-24 at 1 36 54\u202fPM\" src=\"https:\/\/github.com\/user-attachments\/assets\/e6444e4a-1543-4122-b9f4-5b22e41312b0\">\r\n\r\nAlso, ExpensiveTree waits a random amount of time every time it updates. It renders the resulting delay, and you can observe that the value never changes.\r\n\r\nHowever, React Profiler falsely reports that ExpensiveTree is actually rendering:\r\n\r\n<img width=\"1590\" alt=\"Screenshot 2024-10-24 at 1 38 06\u202fPM\" src=\"https:\/\/github.com\/user-attachments\/assets\/8d09c18e-2a5f-473e-b65a-13d4c6b92449\">\r\n\r\nThe times are all the same, which suggests that the Profiler UI is:\r\n\r\n- falsely marking ExpensiveTree as rendered when it wasn't\r\n- probably using the initial render time as the value\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-24T20:38:21Z","comments":1,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/31353"},{"issue_number":48,"repository":"facebook\/react","title":"[Compiler Bug]: `useLayoutEffect` without dependency array should be allowed by either `react-hooks\/exhaustive-deps` or `react-compiler\/react-compiler`","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nN\/A\n\n### Repro steps\n\nUse `useLayoutEffect` without dependency array, for example:\r\n\r\n```tsx\r\nexport default function Breadcrumb({ children, to }) {\r\n  const itemRef = useRef<HTMLLIElement>(null);\r\n  const [isLast, setIsLast] = useState<boolean>();\r\n\r\n  useLayoutEffect(() => {\r\n    setIsLast(itemRef.current?.matches(':last-child') ?? false);\r\n  });\r\n\r\n  return (\r\n    <li ref={itemRef}>\r\n      <a to={to} aria-current={isLast ? 'page' : undefined}>\r\n        {children}\r\n      <\/a>\r\n    <\/li>\r\n  );\r\n}\r\n```\r\n\r\nThis will generate a `react-hooks\/exhaustive-deps` warning for using `useLayoutEffect` without dependencies, but the dependency array is optional when you want the effect to run on every render, which I do in this case. Up till now I had just ignored this warning using `\/\/ eslint-disable-next-line react-hooks\/exhaustive-deps`, but now this will then generate a `react-compiler\/react-compiler` warning:\r\n\r\n> React Compiler has skipped optimizing this component because one or more React ESLint rules were disabled. React Compiler only works when your components follow all the rules of React, disabling them may result in unexpected or incorrect behavior \r\n\r\nSo... either you should fix the `react-hooks\/exhaustive-deps` rule to allow effects without dependencies (`useEffect` seem to allow this, but not `useLayoutEffect` for some reason), or the compiler should be smarter about what disabled ESLint rules to take into account...\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nreact@18.3.1\n\n### What version of React Compiler are you using?\n\neslint-plugin-react-compiler@19.0.0-beta-8a03594-20241020","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-24T08:23:42Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31341"},{"issue_number":49,"repository":"facebook\/react","title":"[Compiler Bug]: False positive calling WebGLContext.useProgram","description":"### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvihgEAURIkEjfkPwBeAHwjx+HfjiswBAOaU1RCHCgBbBHVwA6IwlwzKCG3YBCnAJKF+AORWnAC0cGR0AG5kYAGCjs4Awqy4GLiBAO4IAEYmAExxANzauvp0hvjBAAowEEYwZFZmJvZwMAhkqTV1DVZCxRI6LVII3fWN-NW141aCAzoAvgA0+ADaALpz4gviIAtAA\r\n\r\n### Repro steps\r\n\r\nCall `gl.useProgram` within an effect:\r\n\r\n```ts\r\nexport default function MyApp() {\r\n  useEffect(() => {\r\n    const gl = document.getElementById('my-canvas').getContext('webgl2');\r\n    const myProgram = gl.createProgram();\r\n    gl.useProgram(myProgram); \/\/ this should not error; useProgram is not a React hook\r\n  }, []);\r\n}\r\n```\r\n\r\n`WebGLRenderingContext.useProgram` is not a hook, and is part of a built-in Web API\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19.0.0-rc-65a56d0e-20241020\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-rc-65a56d0e-20241020","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-23T21:40:26Z","comments":0,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/31339"},{"issue_number":50,"repository":"facebook\/react","title":"[Compiler Bug]: TS types missing for `eslint-plugin-react-compiler`","description":"### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/www.typescriptlang.org\/play\/?#code\/JYWwDg9gTgLgBFApgQwMYwMIXMANoqOAMymzgHJEBnXYAOxgFoxcBXAc3saTSdWzB4C5ANwAoIA\r\n\r\n### Repro steps\r\n\r\n1. Configure `compilerOptions.checkJs = true` in `tsconfig.json`\r\n2. Import from `eslint-plugin-react-compiler` in `eslint.config.js`\r\n3. \ud83d\udca5 Observe the error below\r\n\r\n```\r\nCould not find a declaration file for module 'eslint-plugin-react-compiler'. 'node_modules\/eslint-plugin-react-compiler\/dist\/index.js' implicitly has an 'any' type.\r\n  Try `npm i --save-dev @types\/eslint-plugin-react-compiler` if it exists or add a new declaration (.d.ts) file containing `declare module 'eslint-plugin-react-compiler';`ts(7016)\r\n```\r\n\r\n![Screenshot 2024-10-23 at 18 52 33](https:\/\/github.com\/user-attachments\/assets\/7545d733-9ed7-4a1b-aeb1-6bb03bb2e270)\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19.0.0-rc-69d4b800-20241021\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-8a03594-20241020\r\n\r\n\r\n### Alternatives Considered\r\n\r\nI thought maybe there would be types at [`@types\/eslint-plugin-react-compiler`](https:\/\/www.npmjs.com\/package\/@types\/eslint-plugin-react-compiler) (DefinitelyTyped), but this does not exist\r\n","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-23T16:57:36Z","comments":2,"reactions":5,"url":"https:\/\/github.com\/facebook\/react\/issues\/31334"},{"issue_number":51,"repository":"facebook\/react","title":"[Compiler Bug]: Lint plugin is too strict about passing hooks as values","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/github.com\/adobe\/react-spectrum\/issues\/7220\n\n### Repro steps\n\nIn React Aria, we have several instances where we use dependency injection to reduce bundle size impact and allow global configuration.\r\n\r\n* [RouterProvider](https:\/\/react-spectrum.adobe.com\/react-aria\/routing.html#react-router) accepts a `useHref` prop that allows globally configuring all links in an app. Usually you pass a value directly imported from another library like `react-router-dom`, which should be safe (the function never changes).\r\n* Our implementation of [drag and drop](https:\/\/react-spectrum.adobe.com\/react-aria\/ListBox.html#reorderable) is dependency injected to reduce bundle size. Rather than building the entire drag and drop implementation (which can be quite large) into all components that support it and bloating their bundle size even if you aren't using drag and drop, the drag and drop hooks are injected only if you actually use it. Again, since the actual function implementation of these hooks are static and never change, this can be done safely.\r\n\r\nThe new lint plugin now causes errors in these cases for users of our library (see https:\/\/github.com\/adobe\/react-spectrum\/issues\/7220), which I believe to be safe. The [documentation](https:\/\/react.dev\/reference\/rules\/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values) describes a few reasons why this might be avoided in regular app code, such as debuggability and locality of behavior, but does not describe any reason why this would actually break anything. Swapping to a different function at runtime would be one such case, but if you don't do that I think it is safe.\r\n\r\nIs it possible to loosen this rule so that the _value_ of the hook that is passed into a component is checked to determine if it is static? For example, if you pass down a function in module scope, or something imported from another module, this should be safe since the value never changes, but if you pass down an unmemoized callback declared within a component as a hook this would not be allowed.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nN\/A\n\n### What version of React Compiler are you using?\n\nN\/A","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-22T22:28:49Z","comments":6,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/31327"},{"issue_number":52,"repository":"facebook\/react","title":"[DevTools Bug] Could not find node with id \"18006\" in commit tree","description":"### Website or app\n\nnpx react-devtools\n\n### Repro steps\n\nclicking on the record button and stop in it produces this error\n\n### How often does this bug happen?\n\nSometimes\n\n### DevTools package (automated)\n\nreact-devtools-core\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCould not find node with id \"18006\" in commit tree\n\n### Error call stack (automated)\n\n```text\nat \/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1033341\r\n    at Map.forEach (<anonymous>)\r\n    at \/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1033290\r\n    at Er.getRankedChartData (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1033791)\r\n    at Nf (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1258069)\r\n    at di (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:44095)\r\n    at ts (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:64373)\r\n    at gs (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:75284)\r\n    at rc (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:120293)\r\n    at Ju (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:120221)\n```\n\n\n### Error component stack (automated)\n\n```text\nat Nf (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1257826)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at ts (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1157861)\r\n    at \/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1376165\r\n    at Ks (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1173575)\r\n    at \/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1176231\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at Ys (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1176065)\r\n    at Zc (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1247244)\r\n    at Lc (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1239735)\r\n    at xt (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1079120)\r\n    at ca (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1106654)\r\n    at Ec (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1227871)\r\n    at Y_ (\/Users\/macgr\/.npm\/_npx\/8ea6ac5c50576a3b\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1382695)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Could not find node with id  in commit tree in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-21T01:51:56Z","comments":0,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/31310"},{"issue_number":53,"repository":"facebook\/react","title":"[Compiler Bug]: Memoizing a debounced function complains about ref access","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvjiswBQhAC2AUUoAlUvgC8+NWUYA6KGARqSQ8fknSClJjIDyUXAhgnN2hLtwGjJsxPOWdDL4APpgcDAQlJQAKhAAQhC4uApuhggAwmTRAEa6ANb8QpoAfCIBFnJKqqR6cLAwCHRe4ZHRcfxiEhYWKZjI+Db2js4mdQ1NLRFRlAASCEwA5gAWuAA0FT05CMtkAG4sMAOi4PIQScsnG934AL6CANwBt2v4ANoAuo8BUkEErTM4olkqktOl2AgzvxNsUNGViDloAwEPwwtN2gkkil5K8AIwABnxgmuPXeaLasUxIPkHxJ+G+dHEAUauFgbAAPIQmHsSvNohB8AB1HCUQjsgD0XJ5Tzot3EIFuQA\n\n### Repro steps\n\nAttempting to memoize a debounced function that access a ref gives me this react compiler lint violation:\r\n> Ref values (the `current` property) may not be accessed during render. \r\n\r\nHowever, the underlying function isn't called during render, it's simply referenced, and only called when the memoized, debounced function is called. In my case, it's called in an event handler, which is safe.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.3.1","labels":["Type: Bug","Component: Optimizing Compiler"],"created_at":"2024-10-18T17:58:41Z","comments":5,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/31290"},{"issue_number":54,"repository":"facebook\/react","title":"[DevTools Bug]: Phantom re-renders on sibling <label> components","description":"### Website or app\n\nhttps:\/\/stackblitz.com\/edit\/react-devtools-bug?file=src%2FApp.jsx\n\n### Repro steps\n\n1. Start profiler\r\n2. Input into \"Component with state\"\r\n3. Both of \"ComponentWithState\" and \"AnotherReactComponent\" were re-rendered will be shown in the report but why?\r\n\r\n![image](https:\/\/github.com\/user-attachments\/assets\/a62f5168-b986-4ec1-8d99-a8731f7a21ff)\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-18T08:08:40Z","comments":8,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31285"},{"issue_number":55,"repository":"facebook\/react","title":"[DevTools Bug]:  `gl.useProgram(program);` will cause react-refresh to perform incorrect code injection.","description":"### Website or app\n\nhttps:\/\/github.com\/Yukiniro\/reproduce\/tree\/master\/rspack-issue-hot-update-worker\n\n### Repro steps\n\n1. clone `https:\/\/github.com\/Yukiniro\/reproduce\/tree\/master\/rspack-issue-hot-update-worker`\r\n2. Run pnpm run dev\r\n3. Go to http:\/\/localhost:8080\/\r\n\r\n```js\r\n      const setup = () => {\r\n        const offscreenCanvas = new OffscreenCanvas(100, 100);\r\n        const gl = offscreenCanvas.getContext(\"webgl2\");\r\n\r\n        const program = gl.createProgram();\r\n        gl.linkProgram(program);\r\n        gl.useProgram(program);\r\n      };\r\n ``` \r\n    will be transform to be:\r\n    \r\n```js\r\n      var _s = $RefreshSig$();\r\n      const setup = () => {\r\n        _s();\r\n        const offscreenCanvas = new OffscreenCanvas(100, 100);\r\n        const gl = offscreenCanvas.getContext(\"webgl2\");\r\n\r\n        const program = gl.createProgram();\r\n        gl.linkProgram(program);\r\n        gl.useProgram(program);\r\n      };\r\n ``` \r\n Then, I use the `setup` string to create a worker.\r\n\r\n```js\r\nconst worker = new Worker(URL.createObjectURL(new Blob([`(${setup})()`])));\r\nconsole.log(worker);\r\n```\r\n\r\nThere will throw a error in the worker becuase of `_s()`.\r\n\r\nI am not sure if this is a bug. If not, what could I do sometion to skip the generation of `_s()`.\r\n    \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-17T06:40:12Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31279"},{"issue_number":56,"repository":"facebook\/react","title":"[DevTools Bug]: v6.0.0 (9\/26\/2024) of devtools makes a page extremely slow in dev (even when devtools are closed)","description":"### Website or app\r\n\r\ndifficult to build a repor for now, since \r\n\r\n### Repro steps\r\n\r\nI'm unsure what's the best way to reproduce the issue, but I'm loading a page with React Router v6 with React@19.0.0-rc-6cf85185-20241014 (using the latest version of the compiler), and v6.0.0 of devtools. Chrome version 129.0.6668.101 (Official Build) (arm64) on MacOS.\r\n\r\nEven with devtools closed, page loads become very sluggish in development. If I run a Chrome performance profiler, it completely stalls on opening a new page for 5 seconds (albeit we're not running the React profiler):\r\n<img width=\"1249\" alt=\"Screenshot 2024-10-15 at 15 52 16\" src=\"https:\/\/github.com\/user-attachments\/assets\/8a61346e-fb56-4611-adab-36b2c0567111\">\r\n\r\nWhen I turn off React Developer tools, page loads become instant when devtools are closed, and Chrome profiler is also 10x faster.\r\n\r\nThe problem is so bad that we thought we had a memory leak in our app somewhere, but it was all good in the built version of the app. Turns out devtools had updated in the background and everything became sluggish in development as a result. After we disabled the extensions, everything became supper snappy in development again.\r\n\r\nWould love to provide a repro, but I'm not exactly sure what conditions trigger the issue, as a barebones react router setup doesn't seem to do the trick.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-15T14:24:44Z","comments":4,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/31266"},{"issue_number":57,"repository":"facebook\/react","title":"[Compiler Bug]: false positive when accessing `window.location` from the props object","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/github.com\/iamakulov\/react-compiler-bug-repro\n\n### Repro steps\n\n1. Clone the repo\r\n2. `yarn && yarn eslint --ext .js,.ts,.tsx src\/*`\r\n3. Observe ESLint logging the following (false positive) error:\r\n\r\n   ![Screenshot 2024-10-15 at 13 56 31](https:\/\/github.com\/user-attachments\/assets\/e46a0bb6-03ce-4cb8-b8e9-942ddd1a8eeb)\r\n\r\n4. Open `src\/Component.jsx` and inline the `miniCarouselProps` object:\r\n\r\n    ```diff\r\n    - const miniCarouselProps = {\r\n    -   ...props,\r\n    -   cards: cardListTransformed,\r\n    -   slug: props.locationSlug,\r\n    -   onCardClick: (card) => {\r\n    -     location.pathname = card.slug;\r\n    -   },\r\n    -   forceAnchorTag: false,\r\n    - };\r\n    -\r\n    - return <MiniCarousel {...miniCarouselProps} \/>;\r\n    + return (\r\n    +   <MiniCarousel\r\n    +     {...props}\r\n    +     cards={cardListTransformed}\r\n    +     slug={props.locationSlug}\r\n    +     onCardClick={(card) => {\r\n    +       location.pathname = card.slug;\r\n    +     }}\r\n    +     forceAnchorTag={false}\r\n    +   \/>\r\n    );\r\n    ```\r\n   \r\n5. `yarn eslint --ext .js,.ts,.tsx src\/*`\r\n6. Observe ESLint not logging the error anymore\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-15T13:16:29Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31264"},{"issue_number":58,"repository":"facebook\/react","title":"[Compiler Bug]: Does not correctly identify components returned from factory","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEAVAQIZgEBKCpchAZjBBgQOQw12sDcAOgHYCEADxz4CAEwT1SUADYMo-Omgj8CAWQCeAQSxYAFAEoCwAQQIc8sdQB4JaAG4A+ABII5ciAQDquORK2APQOLnz8AL4CAvRKKmoEAGIQEMam5gRwamCEANr8pBgIADQEYAh4AHKFCAC6BAC8VJx4AHRQ5QDKeKR4CAasrEbhFlY2BLYAFgCMbh5epgVFEcEzzgJRgvyxyniq6nAcvQjJqSZm6pYV4zvx6qdpFxYWWfw5BPk1peVVNfVN1FobQ6CG6xwGQxGzzGMDsa3cnm8wCWCBWQTWGU2mxAESAA\r\n\r\neven without state, the output is questionable: https:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEAVAQIZgEBKCpchAZjBBgQOQw12sDcAOgHYCEADxz4CAEwT1SUADYMo-Omgj8CAWQCeAQSxYAFAEoCwAQQIc8sdQB4JaAG4A+ABII5ciAQDquORK2APQOLnz8AL4CAvRKKmoEAGIQEMam5gRwamCEANr8pBgIADQEYAh4AHKFCAC6BAC8VJx4AHRQ5QDKeKR4CAasrEbhFlY2BLYAFgCMbh5epgVFEcEzzgJRgvyxyniq6nAcvQjJqSZm6pYV4zvx6qdpFxYWQUGZ2XlLJWUV1UX1TWotDaHQQ3WOAyGI2eYxgdjW7k8EFKAHd-IEgmsMptNiAIkA\r\n\r\n### Repro steps\r\n\r\nSimply create a function that returns a React function component. This is completely valid code.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-15T10:36:02Z","comments":0,"reactions":5,"url":"https:\/\/github.com\/facebook\/react\/issues\/31262"},{"issue_number":59,"repository":"facebook\/react","title":"[DevTools Bug] Cannot remove node \"820\" because no matching node was found in the Store.","description":"### Website or app\n\nfix\n\n### Repro steps\n\nfix\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.0-d66fa02a30\n\n### Error message (automated)\n\nCannot remove node \"820\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1173591\r\n    at v.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1141200)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1142807\r\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1552441)\n```\n\n\n### Error component stack (automated)\n\n```text\nfix\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-15T09:44:46Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31259"},{"issue_number":60,"repository":"facebook\/react","title":"[DevTools Bug]: React Devtools do not show source position for host component","description":"### Website or app\n\nnone\n\n### Repro steps\n\n<img width=\"1715\" alt=\"image\" src=\"https:\/\/github.com\/user-attachments\/assets\/86400e7a-d653-4ee5-a9c7-f7287931a224\">\r\nAs you see, it should show source filed\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-14T06:48:03Z","comments":0,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/31236"},{"issue_number":61,"repository":"facebook\/react","title":"[Compiler Bug]: TypeError: Cannot read properties of undefined (reading 'length')","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhHCA7MAXABAYQgFsAHTBDPAXlwApgSYISEZsBPAXwEpcqA+ADoZcuADwATAJYA3XI2asOVYLV4D5TFm3YA6ADYUA5tgAWnAPT8QnIA\n\n### Repro steps\n\n1. render the component\r\n\r\n> We do not call the property function named `property`, but the error occurs regardless (when the component is rendered).\r\n\r\nother versions:\r\n`babel-plugin-react-compiler`: `experimental`\r\n`react-compiler-runtime-polyfill`: `0.x`\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.x","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-11T21:13:40Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31205"},{"issue_number":62,"repository":"facebook\/react","title":"[Compiler Bug]: Compiler modified and broke external react component default export","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/github.com\/reinismu\/react-native-video-react-compiler-bug\r\n\r\n### Repro steps\r\n\r\nHi I already raised the issue with `react-native-video` team and they made a workaround for now to use named export.\r\n\r\nhttps:\/\/github.com\/TheWidlarzGroup\/react-native-video\/issues\/4222\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n18","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-10T09:46:18Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31172"},{"issue_number":63,"repository":"facebook\/react","title":"[DevTools Bug]: Profiler fail at createing profile for large pages","description":"### Website or app\n\nMy Project\n\n### Repro steps\n\nIf you have a large enough page the profiler fails to create a profile even for a small time window and the page freezes\r\n\r\nI need a way to profile my pages. I think a file output instead of the visualizer can be helpful.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-07T10:55:00Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31133"},{"issue_number":64,"repository":"facebook\/react","title":"[Compiler Bug]: Performance - `useEffect` without dependencies should be left alone","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEUYCAwgBYCGmA5gmAKIBuCMAngCp4C2CACgCURYAB1iROITA4iAbRbUANgBoiZHADUVAXSIBeEmQDKOajkHDDAPiIBZC5QB0MWgBMIvYUIDcEiSJjBCY0NARcAWsDO3FJIM0dZQFHHBc3TE9vIT9AogBfXMw8mAQcWGIlZX9MfIDMDGx8QmCAdTcABySoBABBMAAlBDRrOKDpTFkiKsNgqloGZjZOHn5hGvGZOVK0WdIEIZGqorz90PDI6Ni8oJ3nOFhSzDkjKo2Ck8lS8phiHZq6pgQPkgA\r\n\r\n### Repro steps\r\n\r\nI was playing around with a small repo I had and noticed something similar to #30782. (Essentially, I was tracking a variable so that the callback identity could be stable to avoid rapid-fire rerenders of the whole page)\r\n\r\nWrapping it in a useEffect works and probably more correct, but it generates redundant memoization:\r\n\r\n```js\r\nfunction useWrapValueAsRef() {\r\n  const $ = _c(2);\r\n  const val = useChangesEveryTime();\r\n  const ref = useRef(val);\r\n  let t0;\r\n  if ($[0] !== val) {\r\n    t0 = () => {\r\n      ref.current = val;\r\n    };\r\n    $[0] = val;\r\n    $[1] = t0;\r\n  } else {\r\n    t0 = $[1];\r\n  }\r\n  useEffect(t0);\r\n  return ref;\r\n}\r\n```\r\n\r\nwhere I would expect it to just leave everything alone.\r\n\r\nIgnoring the contrived source of the variable (in the real app I'm testing with, it probably changes a couple times on page load), it does the check every time, which is redundant because the useEffect will always run the latest closure anyways. I'm not sure if this is because of some sort of optimization in useEffect but I don't see why that would be the case.\r\n\r\nI don't imagine this to be a huge issue, but it's technically less performant as the code size is bigger and it uses 2 array slots.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\nReact Playground (19-RC)","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-10-06T20:43:03Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31130"},{"issue_number":65,"repository":"facebook\/react","title":"[DevTools Bug] Cannot destructure property 'duration' of 'e[g]' as it is undefined.","description":"### Website or app\n\nApp\n\n### Repro steps\n\nClick view other component\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\nreact-devtools-core\n\n### DevTools version (automated)\n\n6.0.0-d66fa02a30\n\n### Error message (automated)\n\nCannot destructure property 'duration' of 'e[g]' as it is undefined.\n\n### Error call stack (automated)\n\n```text\nat vp (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1444134)\r\n    at vi (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:56396)\r\n    at ts (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:76674)\r\n    at gs (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:87585)\r\n    at nc (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:132774)\r\n    at rc (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:132702)\r\n    at ec (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:132550)\r\n    at Bu (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:129172)\r\n    at Hc (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:142218)\r\n    at Immediate.M [as _onImmediate] (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:193522)\n```\n\n\n### Error component stack (automated)\n\n```text\nat vp (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1442947)\r\n    at div (<anonymous>)\r\n    at fa (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1152427)\r\n    at dp (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1442557)\r\n    at div (<anonymous>)\r\n    at mp (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1445963)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at cu (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1235700)\r\n    at C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1453739\r\n    at rc (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1251400)\r\n    at C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1254056\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at div (<anonymous>)\r\n    at nc (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1253890)\r\n    at sv (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1324943)\r\n    at Xd (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1317466)\r\n    at ja (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1170090)\r\n    at gi (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1184521)\r\n    at Td (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1305602)\r\n    at Zp (C:\\Users\\vanta\\AppData\\Local\\npm-cache\\_npx\\8ea6ac5c50576a3b\\node_modules\\react-devtools-core\\dist\\standalone.js:2:1460269)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot destructure property 'duration' of 'e[g]' as it is undefined. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-10-05T08:05:35Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31121"},{"issue_number":66,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"20468\" because a node with that id is already in the Store.","description":"### Website or app\n\nhttps:\/\/demo.ragflow.io\/\n\n### Repro steps\n\nLogin into the site and checkout components at any page. The error will pop up.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.3.1-ccb20cb88b\n\n### Error message (automated)\n\nCannot add node \"20468\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1172435\r\n    at v.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1141877)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1143565\r\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1551564)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-09-27T06:57:03Z","comments":5,"reactions":6,"url":"https:\/\/github.com\/facebook\/react\/issues\/31086"},{"issue_number":67,"repository":"facebook\/react","title":"[Compiler Bug]: setState in useEffect \/ react compiler and eslint hooks plugin","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wApg+TGTBgEhAEql8AXwCU+YAB02+OKzAEA2rjIwA5glwAafONwAVfUdwBdfAF58UcQGU9uBPzpVK81VV8fAB6EPwEMEomOlwAWkImMDIAI0oEOLoMeOis-BgEMkY4jQBbTCZ0mBCCoviyiqqg0PDI3PjE5LSMrPQcmIR8wuKACwgIAGswEIwRii0mADcM4kwwZuk6gDpXBABREhIERn5+RUcAPiVm4KYSfH4RMQlpEi24WALY-ABCR2c9IZjIoVGpgsELNYgbhHqJxFJSO9PghYvIANw3OTNBQYujNDR0LRKcy4TjpMByJwucQABQgfAQMH4gNs6MCagKuFgbAAPIlFiSyZFHMAtEKwLILgAJBCUSgQfAAdRwlEIPJC-IuuNk7Iw2DwRFIFGo+FoDGYrA4PD4ACZBMI4S8ZAprmoCUTdDZjGZIV77FTdh4yF4fH4Ani1GbGCw2FBMIRgwgobYzq7wfg7g8nvDXkiYF8CH8AX6QZiIcZk8ZYc8EW8PvmUbg2WCsWodRHgptGDtxAcjidU5c0+C4wmvJWYc3gjj2cF3QQhGLyZTnLs6QymSzgbjmpzufg+UtBeSRUvIpKZXKFcqYKr1ZrtaoQLIgA\n\n### Repro steps\n\nthe eslint plugin react hook complains about calling setState in a useEffect:\r\nmore discussion here: https:\/\/github.com\/facebook\/react\/issues\/15329\r\n\r\nI'm happy with the eslint error ;- it is potentially dangerous.\r\n\r\nbut the eslint-plugin-react-compiler errors if you disable the react hook rule ;- in this particular case this seems over the top.\r\n\r\nWill it stop the react compiler compiling this file or its just a eslint extra warning?\r\n\r\nIn the 2nd example, I've abstracted the setState to another function and I get no errors. This is fine in the context of the eslint plugin but what about react compiler?\r\n\r\nI was lead to believe a eslint compiler plugin warning means it will *not* be compiled and bail out, but I guess for warnings because of disabling eslint rules, this is not the case?\r\n\r\nIn my opinion:\r\n* The react compiler eslint plugin should not error on disabling the react hooks plugin\r\n* if the react compiler thinks something is a problem for the compiler, it should generate its own warning and as in this case it would need to be more thorough than the eslint plugin hooks plugin\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n0.0.0-experimental-92aaa43-20240924","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-09-26T09:46:43Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31070"},{"issue_number":68,"repository":"facebook\/react","title":"[DevTools Bug]: No way to debug suspense events","description":"### Website or app\n\nn\/a\n\n### Repro steps\n\nThe react dev-tools have not been updated with support for debugging suspense issues.\r\n\r\nFor examples:\r\n- In the profiler, you can see that a suspense even happened and caused a re-render, but you cannot see which component actually caused the suspense (ie. called `use` or similar) to trigger.\r\n- There doesn't appear to be any kind of logging that can be turned on of suspense events (which would tell you which component suspended)\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-09-23T14:21:03Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31025"},{"issue_number":69,"repository":"facebook\/react","title":"[Compiler Bug]: function parameter inside component override outer parameter incorrectly","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhHCA7MAXABASwwBMEAPAfQAZcBeXGBARynwYAoAdEAOgHpIAtgl6ESpLgEoA3BwyyAZlAxxs+TLgBiMfAmIAZfDjbACxMrgC+E3MFm5c6LHnnbdRAAoBDDAgA2YWlwXHWIwbgFPAAc2NmC3ABpTMWsaAD4bO3tcXl5cMARHIlxPGABzXAh5XAjIioA3BBhtElxsAAsECqhsRqSyKmL5HpgHCAFI-F8ETPsGbFgMXAAeUX7KbgBlMYQvH19UmayuOOJkLlwAaiDXYku+0hlFrKWRMwp1raFdvwOnq0fZgh5jBFksiPg6r8sjYTh5vH4wBZMi9wZDZLIkRgQBYgA\n\n### Repro steps\n\nUsing webpack with typescript.\r\n`import { SomePanel } \".\/some\/index\";` may compiled into something like `const index_0 = __importDefault(__webpack_require__(\".\/some\/index.js\"));`\r\n\r\nReact compiler don't recongize it, and compile the `index` arg in `array.map((value, index)=>{})` into `index_0`, which falsy override the imported module and become a number.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc-4c58fce7-20240904","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-09-21T00:14:44Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/31014"},{"issue_number":70,"repository":"facebook\/react","title":"[React 19] [bug] SVG with dangerouslySetInnerHTML content does not trigger first click","description":"## Summary\r\n\r\nHi all,\r\n\r\nHere is the scenario that we found out while testing with both the latest rc and the beta that works correctly with React 18.\r\nWe have an SVG element that does not trigger its first click if it is focusable (or positioned inside a focusable element) that changes some state on focus.\r\n\r\n**Steps to reproduce:** \r\nOpen the Stackblitz example and open its console\r\nClick 1 time on the triangle svg element\r\n**Expected**:\r\n'svg click' message is logged\r\n**Current**: \r\nno message is logged\r\n\r\n(On the second and all next clicks the message is shown as expected - only the first click is not triggered)\r\n**Here are the stackblitz examples where the issue can be observed:**\r\nrc: https:\/\/stackblitz.com\/edit\/react-vsxt51-w3ktmp?file=app%2Fapp.tsx - not working\r\nbeta: https:\/\/stackblitz.com\/edit\/react-vsxt51-ssqptj?file=app%2Fapp.tsx - not working\r\n**And here is how it is working in React 18:**\r\nReact 18: https:\/\/stackblitz.com\/edit\/react-vsxt51-xsg1yu?file=app%2Fapp.tsx - working\r\n\r\n\r\n**Code**:\r\n\r\n```\r\nconst App = () => {\r\n  const [focused, setFocused] = React.useState(false);\r\n  const handleFocus = () => {\r\n    setFocused(true);\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      onFocus={handleFocus}\r\n      tabIndex={1}\r\n      onClick={() => {\r\n        console.log('svg click');\r\n      }}\r\n      viewBox=\"0 0 512 512\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: '<path d=\"M256 352 128 160h256z\" \/>',\r\n      }}\r\n    ><\/svg>\r\n  );\r\n};\r\n```\r\n","labels":["Type: Bug","React 19"],"created_at":"2024-09-18T13:52:05Z","comments":12,"reactions":10,"url":"https:\/\/github.com\/facebook\/react\/issues\/30994"},{"issue_number":71,"repository":"facebook\/react","title":"[DevTools Bug] The \"path\" argument must be of type string. Received undefined","description":"### Website or app\n\nprivate repo\n\n### Repro steps\n\n- Just opening the devtools in a React Native App and inspecting components I got this error: The \"path\" argument must be of type string. Received undefined.\r\n<img width=\"1046\" alt=\"Screenshot 2024-09-06 at 4 54 59\u202fPM\" src=\"https:\/\/github.com\/user-attachments\/assets\/50d942d8-85f4-4bb1-8a1f-039fe302b370\">\r\n\r\n### Development Environment\r\nDevice: MacBook Air M1 (2020)\r\nProcessor: Apple Silicon (M1)\r\nOperating System: macOS Sonoma v.14.6.1\r\nArchitecture: ARM64\r\nPackage Manager: Yarn \r\n\r\n### Dependencies\r\nReact: 18.2.0\r\nReact Native: 0.74.2\r\nReact Navigation:\r\n@react-navigation\/native: 6.1.17\r\n@react-navigation\/stack: 6.3.29\r\n@react-navigation\/drawer: 6.6.15\r\n@react-navigation\/bottom-tabs: 6.5.20\r\n@react-navigation\/native-stack: 6.9.26\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-core\n\n### DevTools version (automated)\n\n4.28.5-ef8a840bd\n\n### Error message (automated)\n\nThe \"path\" argument must be of type string. Received undefined\n\n### Error call stack (automated)\n\n```text\nat __node_internal_captureLargerStackTrace (node:internal\/errors:484:5)\r\n    at new NodeError (node:internal\/errors:393:5)\r\n    at validateString (node:internal\/validators:163:11)\r\n    at isAbsolute (node:path:1157:5)\r\n    at f_ (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1371384)\r\n    at k_ (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1376557)\r\n    at xu (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1212586)\r\n    at an (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:39841)\r\n    at Ns (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:117187)\r\n    at Il (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:101534)\r\n    at Rl (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:101463)\r\n    at Nl (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:101281)\r\n    at Sl (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:98382)\r\n    at pl (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:97812)\r\n    at Immediate.D [as _onImmediate] (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:185245)\r\n    at process.processImmediate (node:internal\/timers:471:21)\n```\n\n\n### Error component stack (automated)\n\n```text\nat xu (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1211637)\r\n    at Fl (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1182513)\r\n    at Suspense\r\n    at ms (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1166739)\r\n    at div\r\n    at Hs (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1172940)\r\n    at cu (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1202150)\r\n    at div\r\n    at div\r\n    at si (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1127258)\r\n    at ko (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1151045)\r\n    at \/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1231603\r\n    at ms (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1166739)\r\n    at \/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1169395\r\n    at div\r\n    at div\r\n    at div\r\n    at Ss (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1169229)\r\n    at ic (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1233344)\r\n    at Wu (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1225803)\r\n    at ut (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1073442)\r\n    at jt (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1100719)\r\n    at Os (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1173613)\r\n    at i_ (\/Users\/cayolegal\/Documents\/BDP\/labarra-app-py\/node_modules\/react-devtools-core\/dist\/standalone.js:2:1367821)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=The \"path\" argument must be of type string. Received undefined in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-09-06T21:05:13Z","comments":1,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/30898"},{"issue_number":72,"repository":"facebook\/react","title":"[Compiler Bug]: eslint-plugin-react-compiler errors when updating initialization of ref.current","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAHRFMCAEcA2AlggHYAuGA3GiTYQLYAOEMZOwOWCASggGY4Avjj4wI9HBhgIAhnAohqtEnAgkwbAKoA5AJJ6AKroCCAGV0AtAKIARHAF4cAZQCe9AEYR8ACgw79ukZmlrYYAJRKNAgAHsyseGoanNgA8iq4jgA8BgA0AHzehCSEZIQy+ABq5VAIyDgGOAA+ON7eYQ559WHt9p3ANDgJ6mzSAo5cvAKZ9U04ZC6MCBAC-oYm5tZ2nd6rgeshNhE0AziEAt6jAHRwsNLkDvaOu0Ebtu39JIODVzcwd2yOeaLZanYqlcpVfA1B6ODB8KAqUpqDA4AD8oJKZUq1QQbRwdSKmIhOKUg0Ex0+OGkZFgnx+t1IZCUgkiJBicTYABN+DIoPg2PDEYQ1DgALIuYyMRh4j7fBA0mCfTKcwgANzyAAkEPh8BAcAB1Fj4TmZAD0KvVzJoIEEQA\n\n### Repro steps\n\n1. Initialize `useRef` with some dummy value (e.g. null, Symbol, undefined, etc.) to be changed after initialization\/during render.\r\n2. Update `ref.current` by checking whether it is equivalent to its initial condition (as per documentation: [useRef#Avoiding recreating the ref contents](https:\/\/react.dev\/reference\/react\/useRef#avoiding-recreating-the-ref-contents))\r\n  - > To solve it, you may initialize the ref like this instead:\r\n  ```\r\n  function Video() {\r\n    const playerRef = useRef(null);\r\n    if (playerRef.current === null) {\r\n      playerRef.current = new VideoPlayer();\r\n    }\r\n    \/\/ ...\r\n  ```\r\n\r\n  - > Normally, writing or reading ref.current during render is not allowed. However, it\u2019s fine in this case because the result is always the same, and the condition only executes during initialization so it\u2019s fully predictable.\r\n  \r\n3. eslint-plugin-react-compiler gives error\r\n\r\n```\r\nInvalidReact: Ref values (the `current` property) may not be accessed during render. (https:\/\/react.dev\/reference\/react\/useRef)\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc-1d989965-20240821","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-08-21T23:52:41Z","comments":9,"reactions":10,"url":"https:\/\/github.com\/facebook\/react\/issues\/30782"},{"issue_number":73,"repository":"facebook\/react","title":"[DevTools Bug]: inspecting pseudo-elements in Firefox gives error `Permission denied to access property \"__reactFiber$sofadm08s2\"`","description":"### Website or app\r\n\r\nhttps:\/\/wk82tp.csb.app\/\r\n\r\n### Repro steps\r\n\r\n1. Go to the Sandbox link in Firefox (129.0.2), with React DevTools (5.3.1)\r\n2. Open the inspector.\r\n3. Select the `::after` pseudo-element next to the `<h1>`.\r\n\r\n### More Info\r\nI add a screenshot of the issue.\r\n<img width=\"1305\" alt=\"Screenshot 2024-08-21 at 09 06 24\" src=\"https:\/\/github.com\/user-attachments\/assets\/d3e869af-80f1-44d5-a9ec-a47ed8472974\">\r\n\r\nThis is happening from a while. Of course, is not a big issue, because if I close the error on the main screen, I can keep working. And until now I wasn't using much of pseudo-elements. \r\n\r\nBut now, I'm working on a new feature in our app, where I'm relying hardly on `::after` en `::before` pseudo elements. And it is quite annoying.\r\n\r\nThis is happening since DevTools 4.28.4. Until v4.27.8 I didn't had problems. On this version (4.27.8) the error is shown only when opening the tab \"(React) Components\" in the inspector... which kind of make sense, right?. \r\n\r\nWhat doesn't make sense (to me) is that I got this error when inspecting the pseudo-element in the basic firefox inspector (trying to apply css properties on it).\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-08-21T07:08:14Z","comments":2,"reactions":8,"url":"https:\/\/github.com\/facebook\/react\/issues\/30772"},{"issue_number":74,"repository":"facebook\/react","title":"[DevTools Bug]: Inconsistent behavior; React dev tools does not recognize a react website; 'service worker(inactive)'","description":"### Website or app\r\n\r\nhttps:\/\/healthbridge-silk.vercel.app\/\r\n\r\n### Repro steps\r\n\r\nI have a two profiles on my chrome browser one personal other work related.\r\n1. Installed dev tool extension about a few months back on work profile.\r\n2. Installed the same extension on my personal profile.\r\n3. Works flawlessly on my work profile but in my personal profile has error \"service worker(inactive)\"\r\n\r\nOn my personal profile it does not recognize any react websites and on clicking the extension gives \"Page does not seem to be using react\". Works flawlessly on my work profile.\r\n\r\nImage from my personal account:\r\n![Screenshot_20240820_223428](https:\/\/github.com\/user-attachments\/assets\/ef86ea22-a0f2-4cbb-80c2-97aab630afe2)\r\n\r\nImage from my work account:\r\n![image](https:\/\/github.com\/user-attachments\/assets\/599160ca-61a5-4b7d-9924-04aed66a6aea)\r\n\r\n\r\nEDIT: I checked the extension errors in my personal account and here is a screen shot of it:\r\nThere are no stack traces for any of the errors.\r\n![image](https:\/\/github.com\/user-attachments\/assets\/0b1805c9-4ce0-4ae6-96a0-e1d2e0ef5b04)\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-08-20T17:22:41Z","comments":0,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/30754"},{"issue_number":75,"repository":"facebook\/react","title":"[React 19] `use()` promise from state causes \"async\/await is not yet supported in Client Components\" error","description":"## Summary\r\n\r\nhttps:\/\/stackblitz.com\/edit\/vitejs-vite-kbccdh?file=src%2FApp.tsx\r\n\r\n```tsx\r\nimport { use, useState } from 'react';\r\n\r\nexport default function App() {\r\n  const [p] = useState(() => new Promise((res) => setTimeout(res, 500)));\r\n\r\n  use(p);\r\n  return 'hello!';\r\n}\r\n```\r\n\r\nNote: I do not have a parent Suspense boundary.\r\n\r\n### Actual behaviour\r\n\r\nAn error is thrown\r\n\r\n> Error: async\/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\r\n\r\n### Expected behaviour\r\n\r\nI think this should render \"hello!\". If I lift the promise out of the state initialiser into the module, there is no error - React holds from rendering the app until the promise resolves.\r\n\r\n```tsx\r\n\/\/ This works fine, even without a parent <Suspense>\r\nconst p = new Promise((res) => setTimeout(res, 500));\r\nexport default function App() {\r\n  use(p);\r\n  return 'hello!';\r\n}\r\n```\r\n\r\nIf it's expected to throw an error in this scenario, then I think the error message should be improved. It should log the error message about the component suspended without a parent suspense boundary. I do think this is inconsistent though, and in original example should just work.","labels":["Type: Bug","React 19"],"created_at":"2024-08-15T10:03:34Z","comments":3,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/30709"},{"issue_number":76,"repository":"facebook\/react","title":"[React 19] No re-render after 'useActionState' action queue finishes","description":"## Summary\r\n\r\nWhen multiple client side actions are scheduled via `useActionState`, the \"Action queue\" promises are processed sequentially as expected. However after the last action promise resolves, the component is not re-rendered. This means, the component is stuck in \"loading\" without access to \"data\".\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the demo here: https:\/\/codesandbox.io\/p\/sandbox\/use-action-state-stuck-xl72xk?file=%2Fsrc%2FApp.js\r\n2. Click the \"Send request\" button two times.\r\n3. After 10 seconds (each request is 5 seconds and processed sequentially), the component still shows \"Loading...\" and not the dummy data (as I would expect).\r\n\r\n\r\n#### Notes\r\n* When only one \"action\" is scheduled (button clicked once), the component re-renders when the action is done, as expected.\r\n* The promise \"delay\" seems to have an effect. When `REQUEST_DELAY` is set lower i.e. 1000ms, this \"issue\" is not present.\r\n* Possibly related: https:\/\/github.com\/facebook\/react\/issues\/27630\r\n\r\nIs this behavior intentional?\r\n\r\n","labels":["Type: Bug","React 19"],"created_at":"2024-08-14T12:04:29Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/30691"},{"issue_number":77,"repository":"facebook\/react","title":"[DevTools Bug]: Cannot view source with remote sourcemap containing absolute `sources`","description":"### Website or app\n\nwww.airbnb.com\n\n### Repro steps\n\n1. Visit www.airbnb.com\r\n2. Use component inspector to inspect a React component\r\n3. Attempt to jump to source and observe that it fails\r\n\r\nYou won't be able to repro this since the sourcemaps aren't publicly accessible, but hopefully my issue description below explains the matter clearly:\r\n\r\nOur sourcemaps contain no `sourceRoot`, but the `sources` are absolute paths (e.g `\/foo\/bar\/baz\/main.js`). The sourcemaps are uploaded to a domain `sourcemaps.d.musta.ch` and our minified JS files contain `sourceMappingURL=https:\/\/sourcemaps.d.musta.ch\/foo\/bar\/baz.js.map` comments pointing to them. \r\n\r\nPer the [spec](https:\/\/sourcemaps.info\/spec.html#h.75yo6yoyk7x5):\r\n> Resolving Sources\r\nIf the sources are not absolute URLs after prepending of the \u201csourceRoot\u201d, the sources are resolved relative to the SourceMap (like resolving script src in a html document).\r\n\r\nChrome follows the spec. `\/foo\/bar\/baz\/main.js` is an absolute *filesystem path*, but it is not an absolute `URL` - it would need to be something like `file:\/\/\/foo\/bar\/baz\/main.js` to be an absolute URL. Therefore, Chrome resolves the path relative to the sourcemap, resulting in `https:\/\/sourcemaps.d.musta.ch\/foo\/bar\/baz\/main.js`. This is the path that shows up in the Sources tab. \r\n\r\nHowever, the React code here does not follow the spec:\r\nhttps:\/\/github.com\/facebook\/react\/blob\/8e60bacd08215bd23f0bf05dde407cd133885aa1\/packages\/react-devtools-shared\/src\/symbolicateSource.js#L101\r\n\r\nAs a result, the sourceURL remains `\/foo\/bar\/baz\/main.js`. The \"View Source\" functionality is broken since that doesn't point to a valid path. \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-08-13T22:22:45Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/30682"},{"issue_number":78,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"1\" because a node with that id is already in the Store.","description":"### Website or app\n\nlocal repo\n\n### Repro steps\n\njust loaded the local  react app\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.3.1-ccb20cb88b\n\n### Error message (automated)\n\nCannot add node \"1\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1172435\r\n    at v.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1141877)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1143565\r\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1551564)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-08-06T09:20:37Z","comments":12,"reactions":8,"url":"https:\/\/github.com\/facebook\/react\/issues\/30607"},{"issue_number":79,"repository":"facebook\/react","title":"[React 19] Controlled `<select>` component is subject to automatic form reset","description":"The controlled component also resets the \"select\" after the action is triggered.\r\nbut the \"input\" component does not.\r\n\r\n```jsx\r\n\"use client\";\r\nimport { useActionState, useState } from \"react\";\r\nfunction add() {\r\n  return Date.now();\r\n}\r\nexport default function Page() {\r\n  const [state, formAction] = useActionState(add, 0);\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"2\");\r\n  return (\r\n    <form action={formAction}>\r\n      <p>{state}<\/p>\r\n      <p>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        \/>\r\n      <\/p>\r\n      <p>\r\n        <select\r\n          name=\"gender\"\r\n          value={type}\r\n          onChange={(e) => setType(e.target.value)}\r\n        >\r\n          <option value=\"1\">1<\/option>\r\n          <option value=\"2\">2<\/option>\r\n          <option value=\"3\">3<\/option>\r\n        <\/select>\r\n      <\/p>\r\n      <button>submit<\/button>\r\n    <\/form>\r\n  );\r\n}\r\n```\r\n\r\n![20240802-193357](https:\/\/github.com\/user-attachments\/assets\/c61f2b1c-a00c-4982-aba3-5061770f719a)\r\n\r\nRepro: https:\/\/codesandbox.io\/p\/sandbox\/stupefied-cohen-n578l6","labels":["Type: Bug","React 19"],"created_at":"2024-08-02T10:01:56Z","comments":20,"reactions":8,"url":"https:\/\/github.com\/facebook\/react\/issues\/30580"},{"issue_number":80,"repository":"facebook\/react","title":"[DevTools Bug] Cannot remove node \"366\" because no matching node was found in the Store.","description":"### Website or app\n\nhttp:\/\/localhost:3000\/welcome\n\n### Repro steps\n\n### I created token for user authentication and pass into context so that user can reuse that token to call an API \r\nwhen i logout or login on my localhost i see this error \r\n\r\n**STEP 1 Create a token** \r\nexport const executeBasicAuthenticationService\r\n    = (token) => apiClient.get(`\/basicauth`,{\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    })\r\n\r\n**STEP-2 Pass into context**\r\n\r\nasync function login(username, password) {\r\n\r\n\r\n\r\n  const baToken = 'Basic ' + window.btoa( username + \":\" + password )\r\n  \r\n  try{\r\n\r\n  \r\n  const response = await executeBasicAuthenticationService(baToken)\r\n  \r\n  if(response.status==200){\r\n        setAuthenticated(true)\r\n        setUsername(username)\r\n        settoken(baToken)\r\n         return true\r\n       \r\n    } else {\r\n       logout()\r\n        return false\r\n      \r\n     }\r\n}  catch(error){\r\n  logout()\r\n  return false\r\n}\r\n\r\n }\r\n\r\nfunction logout(){\r\nsetAuthenticated(false)\r\nsettoken(null)\r\nsetUsername(null)\r\n}\r\n\r\n    return (\r\n  <AuthContext.Provider value={ {isAuthenticated,setAuthenticated,login,logout,username,token} }>\r\n\r\n    {children}\r\n  <\/AuthContext.Provider>\r\n\r\n\r\n    )\r\n}\r\n\r\n    \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.3.1-ccb20cb88b\n\n### Error message (automated)\n\nCannot remove node \"366\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1174132\r\n    at v.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1141877)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1143565\r\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1551564)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-08-02T08:17:10Z","comments":2,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/30577"},{"issue_number":81,"repository":"facebook\/react","title":"[Compiler Bug]: eslint-plugin-react-compiler reports \"Hooks may not be referenced as normal values\" if property begins \"use\"","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEcEAdgGZoDmBZMEGBA5GPAPTHlWMDcAOifwQAPHPgIATBGQCGUADaEyUEnDxpSBALIBPAIJYsACix0sYAJQFg-AkVJhCYABbQ54gKpgEADQIBeO05KADppYKgvbz4SWxgEPFgY51cPSIIAfiYhRgJkJm0efgBffhAioA\n\n### Repro steps\n\nWe have a config object with a property starting \"use\" - its a boolean.\r\n\r\nIt seems very restrictive that we cannot have any properties beginning \"use\".\r\n\r\nI guess we could destructure outside the react component or make a abstracted function to get the boolean - is that the recommended solution? Or should react compiler be less restrictive in detecting hooks? It seems unlikely to be a hook if its a property name thats not on a import?\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n0.0.0-experimental-9ed098e-20240725","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-07-28T07:31:17Z","comments":2,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/30493"},{"issue_number":82,"repository":"facebook\/react","title":"Bug: useFormStatus pending state is reset when component state is updated","description":"If you have a component that relies on the `pending` return value of `useFormStatus`, the `pending` state will incorrectly reset to `false` if the component is updated due to a `useState` update. This does not happen if the `useState` hook is placed in a child component. \r\n\r\nReact version: 19.0.0-rc-512b09b2-20240718\r\n\r\n## Steps To Reproduce\r\n\r\n[codesandbox.io\/p\/sandbox\/react-useformstatus-pending-reset-on-unrelated-state-update-m59zw8](https:\/\/codesandbox.io\/p\/sandbox\/react-useformstatus-pending-reset-on-unrelated-state-update-m59zw8)\r\n\r\n1. Create a react app that uses form actions (this uses NextJS starter code)\r\n2. Have the form action delay for a set period of time before resolving\r\n3. Create a child component that uses `useFormStatus().pending`. Have the component also use a `useState` hook that updates on an interval using `useEffect`. \r\n4. Place this child component as a child of the `<form \/>` element\r\n5. Verify that `useFormStatus().pending` is reset to false as soon as a call to `setState` happns\r\n\r\nExample component\r\n\r\n```\r\n\r\nexport default function SubmissionState() {\r\n  const formStatus = useFormStatus();\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(() => {\r\n    const id = setTimeout(() => {\r\n      if (!formStatus.pending) {\r\n        setCounter(0);\r\n        return;\r\n      }\r\n      setCounter(counter + 1);\r\n    }, 1000);\r\n    return () => clearTimeout(id);\r\n  }, [counter, formStatus.pending]);\r\n  return (\r\n    <div>\r\n      {formStatus.pending ? `Pending for ${counter} seconds` : \"Not pending\"}\r\n    <\/div>\r\n  );\r\n}\r\n```\r\n\r\nthis example works as expected, `useFormStatus().pending` state matches the server actions state\r\n\r\n```\r\nfunction SubmissionStateBody({ pending }: { pending: boolean }) {\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(() => {\r\n    if (!pending) {\r\n      setCounter(0);\r\n      return;\r\n    }\r\n    const id = setTimeout(() => {\r\n      setCounter(counter + 1);\r\n    }, 1000);\r\n    return () => clearTimeout(id);\r\n  }, [counter, pending]);\r\n  return (\r\n    <div>{pending ? `Pending for ${counter} seconds` : \"Not pending\"}<\/div>\r\n  );\r\n}\r\n\r\nexport default function SubmissionStateCorrect() {\r\n  const formStatus = useFormStatus();\r\n  return <SubmissionStateBody pending={formStatus.pending} \/>;\r\n}\r\n``` \r\n\r\nLink to code example:\r\n\r\n[Github repro using nextjs starter template](https:\/\/github.com\/jatwood\/repro-use-form-issue)\r\n\r\n## The current behavior\r\n\r\nThe UI shows the submission as pending for the length of the server action.\r\n\r\n\r\n## The expected behavior\r\n\r\nThe UI shows the submission as not-pending as soon as the counter is updated. \r\n","labels":["Type: Bug","React 19"],"created_at":"2024-07-18T01:59:20Z","comments":8,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/30368"},{"issue_number":83,"repository":"facebook\/react","title":"Independent re-renders from UNSAFE_componentWillReceiveProps cause maximum update depth error","description":"\nIn this added test case, each render causes a second pass render follow up, but it always settles.\n\nRepeating this sufficiently often triggers the \"Maximum update depth exceeded.\" error because the `nestedUpdateCount` in `ReactFiberWorkLoop.js` doesn't reset.\n","labels":["Type: Bug","CLA Signed","React Core Team","React 19"],"created_at":"2024-07-01T19:43:31Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/pull\/30175"},{"issue_number":84,"repository":"facebook\/react","title":"[DevTools Bug] getCommitTree(): Invalid commit \"1\" for root \"445\". There are only \"1\" commits.","description":"### Website or app\n\nhttps:\/\/abhayyportfolio.netlify.app\/\n\n### Repro steps\n\nI am just checking my website performance by the use of profiler \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.2.0-1717ab0171\n\n### Error message (automated)\n\ngetCommitTree(): Invalid commit \"1\" for root \"445\". There are only \"1\" commits.\n\n### Error call stack (automated)\n\n```text\nat getCommitTree (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1150777)\r\n    at fe.getCommitTree (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1154452)\r\n    at CommitFlamegraphAutoSizer (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1396842)\r\n    at renderWithHooks (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:76682)\r\n    at updateFunctionComponent (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:103097)\r\n    at beginWork (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:116771)\r\n    at performUnitOfWork (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:175653)\r\n    at workLoopSync (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:175521)\r\n    at renderRootSync (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:175252)\r\n    at recoverFromConcurrentError (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:171121)\n```\n\n\n### Error component stack (automated)\n\n```text\nat CommitFlamegraphAutoSizer (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1396643)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1291561)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1528595\r\n    at ua (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1309094)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1311805)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1312002\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1311805)\r\n    at TimelineContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1387831)\r\n    at ProfilerContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1379486)\r\n    at TreeContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1203530)\r\n    at SettingsContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1231781)\r\n    at ModalDialogContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1316268)\r\n    at DevTools_DevTools (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1536331)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=getCommitTree(): Invalid commit  for root . There are only  commits. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-06-27T06:27:24Z","comments":0,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/30114"},{"issue_number":85,"repository":"facebook\/react","title":"[Compiler Bug]:  healthcheck do not check next.js StrictMode","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/github.com\/coleea\/bug-report-next15-server-action\n\n### Repro steps\n\njust run command `npx react-compiler-healthcheck@latest`.\r\nthen, react-compiler-healthcheck does not check StrictMode even though Next.js is actually StrictMode.\r\n\r\nNext.js is StrictMode by default under these two conditions are met\r\n\r\n1) Next.js version 13.4+ \r\n2) App router\r\n\r\nYou can check this : https:\/\/rc.nextjs.org\/docs\/app\/api-reference\/next-config-js\/reactStrictMode\r\n\r\nSo, It needs extra three steps to check whether StrictMode or Not.\r\n1) check package.json if Next.js version is over 13.4 or not.\r\n2) If so, Check if `reactStrictMode: false` is not set.\r\n3) check if project is App-Router-based.\r\n\r\nIf three conditions are met, this project is based on StrictMode even though `reactStrictMode: true` is not set on `next.config.mjs` file.\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc.0","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-06-23T02:21:47Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/30049"},{"issue_number":86,"repository":"facebook\/react","title":"[React 19] requestFormReset reports TypeError Cannot read properties of null (reading 'queue') on repeated form submissions","description":"## Summary\r\n\r\nHi, React team,\r\n\r\nI've recently been trying the new form actions in React 19, I'm trying to reproduce a race condition with multiple form submissions in a short time. However, I occasionally get the error `TypeError\r\nCannot read properties of null (reading 'queue')` after a few consecutive submissions.\r\n\r\nAfter some investigations, I'm able to create the minimal reproducing steps below:\r\n\r\n1. Open [codesandbox.io\/p\/sandbox\/confident-sky-8vr69k](https:\/\/codesandbox.io\/p\/sandbox\/confident-sky-8vr69k)\r\n```jsx\r\nfunction App() {\r\n  const formAction = async () => {\r\n    await new Promise((resolve) => setTimeout(resolve, 3000));\r\n  };\r\n\r\n  return (\r\n    <form action={formAction}>\r\n      <input type=\"text\" name=\"name\" \/>\r\n      <input type=\"submit\" \/>\r\n    <\/form>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n2. Input \"1\" in the text field\r\n3. Submit form\r\n4. Within 3 seconds (before the Client Action resolved), submit the form again\r\n\r\nExpected behavior:\r\nForm fields resetted.\r\n\r\nActual behavior:\r\nThe page breaks reporting a TypeError below:\r\n```\r\nTypeError: Cannot read properties of null (reading 'queue')\r\nrequestFormReset$1\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:7001:74\r\neval\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:6956:15\r\nstartTransition\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:6908:27\r\nstartHostTransition\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:6948:7\r\nlistener\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:16008:21\r\nprocessDispatchQueue\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:16066:17\r\neval\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:16665:9\r\nbatchedUpdates$1\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:2689:40\r\ndispatchEventForPluginEventSystem\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:16221:7\r\ndispatchEvent\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:20127:11\r\ndispatchDiscreteEvent\r\nhttps:\/\/gwprwq.csb.app\/node_modules\/react-dom\/cjs\/react-dom-client.development.js:20095:11\r\n```\r\n\r\nAm I missing anything? Thanks.","labels":["Type: Bug","React 19"],"created_at":"2024-06-22T11:14:36Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/30041"},{"issue_number":87,"repository":"facebook\/react","title":"[React 19] useEffect does not re-fire on hot reload with React 19 and vite","description":"In prior versions of react, saving a file will trigger the components `useEffect` hooks to run. This does not work for react 19.\nThis applies to both [@vitejs\/plugin-react-swc](https:\/\/github.com\/vitejs\/vite-plugin-react-swc) and [@vitejs\/plugin-react](https:\/\/github.com\/vitejs\/vite-plugin-react)\n\nRepo: https:\/\/github.com\/gkiely\/swc-issue\n\nSteps to reproduce:\n- npm i\n- npm run dev\n- open repo and press save in App.tsx\n- console.log will not fire after pressing save\n- npm i react@18 react-dom@18\n- npm run dev\n- press save in App.tsx\n- console.log will fire\n\nVideo reproduction:\nhttps:\/\/www.loom.com\/share\/b493602e3f7244d2948c5bb871531881?sid=c9bdec15-5b87-4375-a659-6c63804cb032\n\n\nNotes:\nI previously opened a ticket here but it is perhaps an issue with react 19: https:\/\/github.com\/vitejs\/vite-plugin-react\/issues\/335 ","labels":["Type: Bug","React 19"],"created_at":"2024-06-16T17:05:39Z","comments":6,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/29915"},{"issue_number":88,"repository":"facebook\/react","title":"[Compiler Bug]: Constants or properties named `use*` trigger compiler errors re: hooks","description":"### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhHCA7MAXABFMBAYQENCxcBeXAbQB0NdcByAcQgEsMBzXbCPgAsEuHBBgJmAGgZNmABQ5wA1l15QADkJGqAJmGmyWAdRLY4gtbgAqANWYMAugwbosebJbABJMAGUSADMEACEoPGpgIwJiMgQwZFojOQAjcKEOCkzcDAhsB0ZcZwwAXxcMBAAPDXE8XQRAkigAGzxAqAw4bA5MXABZAE8AQQ0NAAoASlwowolsWEYAHgA+ZOmY0nIAOgBbEnGNuKpl3DG1pkXdDgA3XGUEAcpgQ8IS1cKmT-XCTYQyj8+iwA9Fdru8vhMJv81sBPJlfAFgmFsFsXvFdvsxmjjqdzrhLjc7g8nmi3nimM8fnF-l8LiCbuDPpCafige9-iASkA\r\n\r\n### Repro steps\r\n\r\nTry to reference an object or property with a name starting with `use*`. Seems it could at least narrow its scope to functions named `use*`?\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n^19.0.0-rc-f994737d14-20240522","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-06-14T18:39:33Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29900"},{"issue_number":89,"repository":"facebook\/react","title":"[DevTools Bug]: Open in editor , Path not found error ","description":"### Website or app\n\nI am using a local app\n\n### Repro steps\n\n1. Open devtools\r\n2. Select a component\r\n3. Click open in editor\r\n4. \r\n```\r\nThe path '\/data:application\/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBa0VNLG1CQVFRLGNBUlI7MkJBbEVOO0FBQWUsTUFBUSxjQUFpQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN4QyxTQUFTQSxZQUFZO0FBRXJCLFNBQVNDLG1CQUFtQjtBQUU1QixTQUFTQyxPQUFPQyxNQUFNQyxtQkFBbUI7QUFFekMsU0FBU0Msa0JBQWtCQyxzQkFBc0I7QUFDakQsU0FBU0Qsa0JBQWtCRSxlQUFlO0FBQzFDLFNBQVNGLGtCQUFrQkcscUJBQXFCO0FBVWhELE1BQU1DLHNCQUFzQkMsT0FBT1AsTUFBTTtBQUFBLEVBQ3ZDUSxRQUFRO0FBQUEsRUFFUkMsU0FBUztBQUFBLEVBQ1RDLFlBQVk7QUFBQSxFQUVaQyxRQUFRO0FBQUEsRUFFUkMsVUFBVTtBQUFBLElBQ1JDLE9BQU87QUFBQSxNQUNMQyxTQUFTO0FBQUEsUUFDUEgsUUFBUTtBQUFBLE1BQ1Y7QUFBQSxNQUNBSSxVQUFVO0FBQUEsUUFDUkosUUFBUTtBQUFBLE1BQ1Y7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGLENBQUM7QUFBRUssS0FsQkdWO0FBb0JDLGFBQU1XLGFBQXFDQyxHQUFHckI7QUFBQUEsRUFBSXNCLE1BQUFEO0FBQUFBLElBQ3ZELENBQUMsRUFBRUUsTUFBTUwsVUFBVU0sY0FBY0MsWUFBNkIsTUFBTTtBQUFBSixTQUFBO0FBQ2xFLFlBQU1LLGtCQUFrQkEsTUFBTTtBQUM1QixZQUFJUixVQUFVO0FBQ1o7QUFBQSxRQUNGO0FBRUFPLHNCQUFjO0FBQUEsTUFDaEI7QUFFQSxZQUFNRSxzQkFBc0JBLENBQzFCQyxVQUNHO0FBQ0hBLGNBQU1DLGVBQWU7QUFDckIsWUFBSVgsVUFBVTtBQUNaO0FBQUEsUUFDRjtBQUNBLFlBQUlVLE1BQU1FLFdBQVdGLE1BQU1HLFdBQVcsR0FBRztBQUN2Q0MsaUJBQU9DLEtBQUssS0FBSyxRQUFRO0FBQUEsUUFDM0I7QUFBQSxNQUNGO0FBRUEsWUFBTUMsV0FBV2pDLFlBQVk7QUFFN0IsWUFBTWtDLGtCQUFrQkgsT0FBT0ksY0FBYztBQUU3QyxhQUNFLG1DQUNFO0FBQUEsUUFBQztBQUFBO0FBQUEsVUFDQyxTQUFTVjtBQUFBQSxVQUNULGFBQWFDO0FBQUFBLFVBQ2IsT0FBT1QsV0FBVyxhQUFhO0FBQUEsVUFFL0IsaUNBQUMsZUFDRU0seUJBQ0MsdUJBQUMsV0FBUSxPQUFNLFFBQU8sUUFBTyxVQUE3QjtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUFtQyxJQUNqQ1UsV0FDRix1QkFBQyxpQkFBYyxRQUFPLFVBQXRCO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQTRCLElBQzFCQyxrQkFDRjtBQUFBLFlBQUM7QUFBQTtBQUFBLGNBQ0MsS0FBSztBQUFBLGdCQUNIdkIsU0FBUztBQUFBLGdCQUNUeUIsZ0JBQWdCO0FBQUEsZ0JBQ2hCeEIsWUFBWTtBQUFBLGdCQUNaeUIsS0FBSztBQUFBLGNBQ1A7QUFBQSxjQUVBO0FBQUEsdUNBQUMsV0FBUSxRQUFRLElBQUksT0FBTyxNQUE1QjtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUErQjtBQUFBLGdCQUMvQjtBQUFBLGtCQUFDO0FBQUE7QUFBQSxvQkFDQyxLQUFLO0FBQUEsc0JBQ0hDLE9BQU87QUFBQSxzQkFDUEMsWUFBWTtBQUFBLHNCQUNaQyxVQUFVO0FBQUEsc0JBQ1ZDLFlBQVk7QUFBQSxzQkFDWkMsWUFBWTtBQUFBLHNCQUVaQyxVQUFVO0FBQUEsb0JBQ1o7QUFBQSxvQkFBRTtBQUFBO0FBQUEsa0JBVEo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQVlBO0FBQUE7QUFBQTtBQUFBLFlBckJGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQXNCQSxJQUVBLHVCQUFDLGtCQUFlLFFBQU8sVUFBdkI7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFBNkIsS0E5QmpDO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBZ0NBO0FBQUE7QUFBQSxRQXJDRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFzQ0EsS0F2Q0Y7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQXdDQTtBQUFBLElBRUo7QUFBQSxJQUFDO0FBQUE7QUFBQTtBQUFBLGNBL0NrQjNDLFdBQVc7QUFBQTtBQUFBO0FBZ0RoQyxHQUFDO0FBQUEsVUFoRG9CQSxXQUFXO0FBQUE7QUFnRDlCNEMsTUF0RVd6QjtBQXdFYixlQUFlQTtBQUFXLElBQUFELElBQUFHLEtBQUF1QjtBQUFBQyxhQUFBM0IsSUFBQTtBQUFBMkIsYUFBQXhCLEtBQUE7QUFBQXdCLGFBQUFELEtBQUEiLCJuYW1lcyI6WyJtZW1vIiwidXNlSXNNb2JpbGUiLCJUZXh0UyIsIlZpZXciLCJWaWV3VkNlbnRlciIsIlJlYWN0Q29tcG9uZW50IiwiRGVza3RvcExvZ29TVkciLCJMb2dvU1ZHIiwiTW9iaWxlTG9nb1NWRyIsIkhlYWRlckxvZ29Db250YWluZXIiLCJzdHlsZWQiLCJoZWlnaHQiLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImN1cnNvciIsInZhcmlhbnRzIiwic3RhdGUiLCJlbmFibGVkIiwiZGlzYWJsZWQiLCJfYyIsIkhlYWRlckxvZ28iLCJfcyIsIl9jMiIsInR5cGUiLCJzaG93SWNvbk9ubHkiLCJvbkxvZ29DbGljayIsImhhbmRsZUxvZ29DbGljayIsImhhbmRsZUxvZ29Nb3VzZURvd24iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwibWV0YUtleSIsImJ1dHRvbiIsIndpbmRvdyIsIm9wZW4iLCJpc01vYmlsZSIsImlzVjIwUHJvbXB0UGFnZSIsImlubmVyV2lkdGgiLCJqdXN0aWZ5Q29udGVudCIsImdhcCIsImNvbG9yIiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImxpbmVIZWlnaHQiLCJ0ZXh0V3JhcCIsIl9jMyIsIiRSZWZyZXNoUmVnJCJdLCJzb3VyY2VzIjpbIkhlYWRlckxvZ28udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAc3RpdGNoZXMvcmVhY3RcIjtcbmltcG9ydCB7IG1lbW8gfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgdXNlSXNNb2JpbGUgfSBmcm9tIFwiaG9va3MvdXNlSXNNb2JpbGVcIjtcblxuaW1wb3J0IHsgVGV4dFMsIFZpZXcsIFZpZXdWQ2VudGVyIH0gZnJvbSBcImNvbXBvbmVudHMvQ29yZVwiO1xuXG5pbXBvcnQgeyBSZWFjdENvbXBvbmVudCBhcyBEZXNrdG9wTG9nb1NWRyB9IGZyb20gXCJpY29ucy9kZXNrdG9wLWxvZ28uc3ZnXCI7XG5pbXBvcnQgeyBSZWFjdENvbXBvbmVudCBhcyBMb2dvU1ZHIH0gZnJvbSBcImljb25zL2xvZ28uc3ZnXCI7XG5pbXBvcnQgeyBSZWFjdENvbXBvbmVudCBhcyBNb2JpbGVMb2dvU1ZHIH0gZnJvbSBcImljb25zL21vYmlsZS1sb2dvLnN2Z1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEhlYWRlckxvZ29Qcm9wcyB7XG4gIHR5cGU6IFwiYmx1ZVwiIHwgXCJwdXJwbGVcIjtcbiAgb25Mb2dvQ2xpY2s\/OiAoKSA9PiB2b2lkO1xuICBvbkxvZ29Db21tYW5kQ2xpY2s\/OiAoKSA9PiB2b2lkO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIHNob3dJY29uT25seT86IGJvb2xlYW47XG59XG5cbmNvbnN0IEhlYWRlckxvZ29Db250YWluZXIgPSBzdHlsZWQoVmlldywge1xuICBoZWlnaHQ6IFwiMTAwJVwiLFxuXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuXG4gIGN1cnNvcjogXCJwb2ludGVyXCIsXG5cbiAgdmFyaWFudHM6IHtcbiAgICBzdGF0ZToge1xuICAgICAgZW5hYmxlZDoge1xuICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgICAgfSxcbiAgICAgIGRpc2FibGVkOiB7XG4gICAgICAgIGN1cnNvcjogXCJub3QtYWxsb3dlZFwiLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBIZWFkZXJMb2dvOiBSZWFjdC5GQzxIZWFkZXJMb2dvUHJvcHM+ID0gbWVtbyhcbiAgKHsgdHlwZSwgZGlzYWJsZWQsIHNob3dJY29uT25seSwgb25Mb2dvQ2xpY2sgfTogSGVhZGVyTG9nb1Byb3BzKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlTG9nb0NsaWNrID0gKCkgPT4ge1xuICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgb25Mb2dvQ2xpY2s\/LigpO1xuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVMb2dvTW91c2VEb3duID0gKFxuICAgICAgZXZlbnQ6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTERpdkVsZW1lbnQsIE1vdXNlRXZlbnQ+LFxuICAgICkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoZXZlbnQubWV0YUtleSB8fCBldmVudC5idXR0b24gPT09IDEpIHtcbiAgICAgICAgd2luZG93Lm9wZW4oXCIvXCIsIFwiX2JsYW5rXCIpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBpc01vYmlsZSA9IHVzZUlzTW9iaWxlKCk7XG5cbiAgICBjb25zdCBpc1YyMFByb21wdFBhZ2UgPSB3aW5kb3cuaW5uZXJXaWR0aCA+PSA2NDA7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPEhlYWRlckxvZ29Db250YWluZXJcbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVMb2dvQ2xpY2t9XG4gICAgICAgICAgb25Nb3VzZURvd249e2hhbmRsZUxvZ29Nb3VzZURvd259XG4gICAgICAgICAgc3RhdGU9e2Rpc2FibGVkID8gXCJkaXNhYmxlZFwiIDogXCJlbmFibGVkXCJ9XG4gICAgICAgID5cbiAgICAgICAgICA8Vmlld1ZDZW50ZXI+XG4gICAgICAgICAgICB7c2hvd0ljb25Pbmx5ID8gKFxuICAgICAgICAgICAgICA8TG9nb1NWRyB3aWR0aD1cIjI1cHhcIiBoZWlnaHQ9XCIyNXB4XCIgLz5cbiAgICAgICAgICAgICkgOiBpc01vYmlsZSA\/IChcbiAgICAgICAgICAgICAgPE1vYmlsZUxvZ29TVkcgaGVpZ2h0PVwiMjdweFwiIC8+XG4gICAgICAgICAgICApIDogaXNWMjBQcm9tcHRQYWdlID8gKFxuICAgICAgICAgICAgICA8Vmlld1xuICAgICAgICAgICAgICAgIGNzcz17e1xuICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICBnYXA6IDgsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxMb2dvU1ZHIGhlaWdodD17MjB9IHdpZHRoPXsyMH0gLz5cbiAgICAgICAgICAgICAgICA8VGV4dFNcbiAgICAgICAgICAgICAgICAgIGNzcz17e1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCIkd2hpdGVcIixcbiAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJJbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTgsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDcwMCxcbiAgICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogXCIyNHB4XCIsXG5cbiAgICAgICAgICAgICAgICAgICAgdGV4dFdyYXA6IFwibm93cmFwXCIsXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIGludmlkZW8gQUlcbiAgICAgICAgICAgICAgICA8L1RleHRTPlxuICAgICAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8RGVza3RvcExvZ29TVkcgaGVpZ2h0PVwiMzdweFwiIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvVmlld1ZDZW50ZXI+XG4gICAgICAgIDwvSGVhZGVyTG9nb0NvbnRhaW5lcj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXJMb2dvO1xuIl0sImZpbGUiOiIvVXNlcnMvYS1jLXNyZWVkaGFyLXJlZGR5L2ludmlkZW8vaXYtcHJvL2l2LXByby13ZWIvd2ViL3NyYy9jb21wb25lbnRzL0hlYWRlci9IZWFkZXJMb2dvLnRzeCJ9\/HeaderLogo.tsx:41' does not exist on this computer.\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-06-14T09:22:54Z","comments":3,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/29895"},{"issue_number":90,"repository":"facebook\/react","title":"[Compiler Bug]: Compiler incorrectly removes memoization of an expensive operation in useMemo","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEUYCAsgJ4ASEEA1gBQCGAlEcADrFFyFg4iaOkQC8JMuQQBbCI0btRAPg7ci63v0GRpCHAAs8mAOZiiCAB4AHBJjB4AbghasA3Go0w9sYsyIBqIh09QxN3HgBfABoiAG1mAF1WDy8cHyE6cIiQCKA\r\n\r\n### Repro steps\r\n\r\nThe compiler seems to incorrectly erase memoization of possibly expensive operations using `useMemo` in some cases.\r\n\r\nCompare the compiler output of the two similar examples, in the first all memoization will be replaced, in the 2nd it will be correctly added in\r\n\r\n```\r\n\/\/ all memoization is removed, incorrectly\r\nfunction useMyHook(a) {\r\n  const foo = useMemo(() => {\r\n    const something = expensive(a);\r\n    return a + something;\r\n  }, [a])\r\n  return foo;\r\n}\r\n\r\n```\r\n\r\n```\r\n\/\/ memoization is preserved\/added, correctly\r\nfunction useMyHook(a) {\r\n  const foo = useMemo(() => {\r\n    const something = expensive(a);\r\n    return something;\r\n  }, [a])\r\n  return foo;\r\n}\r\n\r\n```\r\n\r\nI believe this is a byproduct of how memoization is dependent on the `return` value.\r\n\r\nAnother side effect of that decision (although already a rule break) is that someone incorrectly using `useMemo` instead of `useEffect` would likely force that effect to run every render (regardless of their deps array that would normally prevent it)\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\nv17.0.2","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-06-13T20:40:41Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29892"},{"issue_number":91,"repository":"facebook\/react","title":"Bug: onPointerDown not called when rendered in 'display: contents' root","description":"`onPointerDown` listeners are not called in iOS Safari when a React application is rendered within an element that has the `display: contents` CSS rule. This issue seems to be specific to iOS, as it works fine on macOS and Windows.\r\n\r\nThis bug was discovered through a report in the Astro framework. A user noted that a React component became unclickable after a View Transition, which Astro emulates using JavaScript. Upon investigation, I traced the issue to elements with the `display: contents` rule.\r\n\r\nThe issue may be related to the `trapClickOnNonInteractiveElement` hack. When a fake `pointerdown` listener is added, the bug disappears and everything works correctly. However, I haven't found any documentation on this behavior, so this is just a hypothesis.\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\nRender React component with <button onPointerDown={() => console.log('called')}>Click me<\/button> in an element with `display: contents` applied. Try clicking the button in iOS Safari.\r\n\r\nSee [this page](https:\/\/v3ron.github.io\/react-pointer-down-ios-bug\/) for reproduction.\r\nSee [this repository](https:\/\/github.com\/V3RON\/react-pointer-down-ios-bug) for source code.\r\n\r\n## The current behavior\r\n\r\n`onPointerDown` listener is not called\r\n\r\n## The expected behavior\r\n\r\n`onPointerDown` listener should be called\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2024-06-13T17:45:37Z","comments":5,"reactions":8,"url":"https:\/\/github.com\/facebook\/react\/issues\/29890"},{"issue_number":92,"repository":"facebook\/react","title":"[React 19] Controlled number input does not update defaultValue when value prop has changed","description":"## Summary\r\n\r\nControlled inputs with the `type=number` are not setting the `defaultValue` when the value state is altered. This causes the state and value to become out of sync when a form is reset (for instance after a form action is sent).\r\n\r\n<img width=\"313\" alt=\"Screenshot 2024-06-11 at 1 12 08\u202fPM\" src=\"https:\/\/github.com\/facebook\/react\/assets\/1565184\/636f1974-1e36-4742-9075-58ee35a87882\">\r\n\r\n\r\nhttps:\/\/codesandbox.io\/p\/github\/BrendonSled\/react-19-controlled-input-number-bug\/","labels":["Type: Bug","React 19"],"created_at":"2024-06-11T19:15:35Z","comments":6,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/29862"},{"issue_number":93,"repository":"facebook\/react","title":"[Compiler Bug]: Runtime error with Higher Order Components","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/codesandbox.io\/p\/devbox\/vite-react-forked-w7lfc7?file=%2Fsrc%2FApp.tsx&workspaceId=5309445f-fc83-4685-b2a0-3050725a1482\n\n### Repro steps\n\nWe're just going through our codebase and fixing issues that we're getting when enabling the compiler.\r\n\r\nNot sure if this is something we are doing wrong, or a compiler issue.\r\n\r\nWe get 'TypeError: Cannot read properties of null (reading 'useMemoCache')' when running something similar to the following code in NextJS (minimal repro):\r\n\r\nPassing in a string as ElementType seems to be something that's fairly commonly recommended (https:\/\/www.aleksandrhovhannisyan.com\/blog\/dynamic-tag-name-props-in-react\/ is the first result on Google for me).\r\n\r\n```\r\nimport React, { ElementType, FC } from \"react\";\r\n\r\nfunction TagChangingHOC(Tag: ElementType): FC<{text: string}> {\r\n    return function({text}) {\r\n        return <Tag>{text}<\/Tag>\r\n    }\r\n}\r\n\r\nconst DivTag = TagChangingHOC('div');\r\nconst SpanTag = TagChangingHOC('span');\r\n\r\nexport default function MyApp() {\r\n    return (<> <DivTag text=\"foo\"\/> <SpanTag text=\"bar\"\/> <\/>)\r\n}\r\n```\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAHQHaYGZQ3AFwEsIMACAFQEMBzAYQAsqMaiWAJAeToApqaAlGWCYyZGAgKxyufMVJkewMgQQAPAmQC+QkeTHjJ0sgB5+APmCqNWkwHoLo7Zi2ZMcUmE0ARIgDd+MgBeSlpGZlYObh4AcgATfxiBAG53T00AZQAHZkCQ-nCWNhouXhiwHIwk1KwMdSyIGE04hGwqKAAbTVlCEnIAWQBPAEEsrJ5dJwkpGHIeE3NTXwDaFXUCILQQbAgILbtFk2zc1esNrYAjKhh9w4OBF0wQLSA\r\n\r\n\r\nI'm very happy to accept an alternative solution if this is too much of an edge case.\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc.0","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-06-04T14:19:13Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29755"},{"issue_number":94,"repository":"facebook\/react","title":"[Compiler Bug]: healthcheck vs eslint","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nn\/a\n\n### Repro steps\n\nI've ran the healthcheck against my app which states that 72 out of 80 components have been compiled. The documentation states the higher the better. I don't have any eslint violations (there were 2 but those have been fixed). The app is working with some good improvements, so thanks!\r\n\r\n```\r\n% npx react-compiler-healthcheck@latest\r\n\r\nSuccessfully compiled 72 out of 80 components.\r\nStrictMode usage found.\r\nFound no usage of incompatible libraries.\r\n```\r\n\r\nSo how do i find the remaining components? Should there not be a minimum of 8 eslint violations or is that not how it works? What's the recommended approach to getting all 80 optimised?\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc-38e3b23483-20240529","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-05-31T05:32:01Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29677"},{"issue_number":95,"repository":"facebook\/react","title":"[DevTools Bug]: Unable to edit props","description":"### Website or app\n\nhttps:\/\/react.dev\/\n\n### Repro steps\n\n## Steps to reproduce\r\n1. Navigate to the website (i.e. [React Dev](https:\/\/react.dev\/))\r\n2. Open React Developer Tools\r\n3. Select an element in the page to inspect the component\r\n4. Try to edit the props, they appear to be read-only\r\n\r\n## Demo\r\n\r\n> attempt to edit props not working\r\n\r\n![Kapture 2024-05-29 at 12 59 10](https:\/\/github.com\/facebook\/react\/assets\/25286675\/dbd8aca8-0cd4-470d-b5ab-75437f857418)\r\n\r\n## Extension info\r\n\r\n<img width=\"418\" alt=\"image\" src=\"https:\/\/github.com\/facebook\/react\/assets\/25286675\/fdee9f6a-feb3-480f-ac03-038ca403f1ea\">\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-05-29T17:03:30Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29651"},{"issue_number":96,"repository":"facebook\/react","title":"[DevTools Bug]: devtools does not works on null origin(sandbox)","description":"### Website or app\n\nnone\n\n### Repro steps\n\n## How to reproduce?\r\nUsing the development version of React on a local server with sandbox specified in the Content-Security-Policy header reproduces this problem.\r\nFor example, in webpack-dev-server, apply the following configuration: \r\n```ts\r\n  devServer: {\r\n    headers: {\r\n      \"Content-Security-Policy\": \"sandbox allow-scripts\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  },\r\n```\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-05-29T12:44:16Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29647"},{"issue_number":97,"repository":"facebook\/react","title":"[Compiler Bug]: react native reanimated shared value mutation","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/github.com\/AlirezaHadjar\/react-compiler-shared-value-bug\n\n### Repro steps\n\nHi, \r\nI'm using polyfill in react native to get the compiler working and noticing that the compiler is complaining about reanimated shared value mutations which is a very common pattern in [react native](https:\/\/docs.swmansion.com\/react-native-reanimated\/docs\/fundamentals\/your-first-animation\/#using-a-shared-value).\r\n\r\n```tsx\r\n  const onPress = () => {\r\n    translateX.value = withTiming((Math.random() - 0.5) * 100);\r\n  };\r\n```\r\n![Screenshot 2024-05-29 at 12 40 14\u202fPM](https:\/\/github.com\/facebook\/react\/assets\/57192409\/dc33fd69-0637-4575-801d-5b31977f350a)\r\n\r\nAnd the health-check command also confirms that `App.tsx` is not compiled.\r\n\r\n![Screenshot 2024-05-29 at 12 42 33\u202fPM](https:\/\/github.com\/facebook\/react\/assets\/57192409\/c4d685ba-b775-4e12-a5ce-c68f1ed68fc1)\r\n\r\nSteps to build the project:\r\n1. yarn install\r\n2. yarn ios\r\n\r\n@josephsavona this is the issue that we discussed on [Twitter](https:\/\/x.com\/alireza_hadjar\/status\/1795575101670519124?s=46&t=HIMTmQZ1qNgFDe3f7YV9kQ)\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.2","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-05-29T09:16:03Z","comments":6,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/29640"},{"issue_number":98,"repository":"facebook\/react","title":"[Compiler Bug]: Health check --src option only works with one file (so a glob needs to be quoted)","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nAny project with several component files (e.g. https:\/\/github.com\/guillaumebrunerie\/LD55)\n\n### Repro steps\n\nRunning the compiler health check with a normal glob only checks the first file it finds:\r\n```\r\n> npx react-compiler-healthcheck --src src\/**\/*.{tsx,ts}\r\nSuccessfully compiled 1 out of 1 components.\r\n```\r\nThis is a bit surprising as most command line utilities handle multiple input files, here we need to quote the glob to have it work as intended:\r\n```\r\n> npx react-compiler-healthcheck --src \"src\/**\/*.{tsx,ts}\"\r\nSuccessfully compiled 379 out of 399 components.\r\n```\r\n\r\nI would suggest making the first one work as well, that is the `--src` argument should accept an arbitrary number of files and process all of them.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n-","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-05-29T08:57:33Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29639"},{"issue_number":99,"repository":"facebook\/react","title":"[DevTools Bug]: version 5.2.0  icon opien in editor cannot click , color is gray","description":"### Website or app\n\nhttps:\/\/github.com\/YingchenWang999\/react-demo\n\n### Repro steps\n\ncd  react-demo   \r\nnpm run dev \r\n open in chrome \r\nopen reactdevtools \r\nset open in editor url  is vscode \r\nchoose seletor component \r\n\r\nsee \r\n\r\n<img width=\"1509\" alt=\"image\" src=\"https:\/\/github.com\/facebook\/react\/assets\/56105589\/07538d58-2fb1-4745-a4a6-969fbd22b7b4\">\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-05-25T03:47:26Z","comments":0,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/29588"},{"issue_number":100,"repository":"facebook\/react","title":"[React 19] React 19 runs extra effects when elements are reordered","description":"## Summary\r\n\r\nWhen React elements with stable keys are reordered with no other prop changes, React 19 re-runs their effects even though dependencies have not changed. This did not occur in React 18. In addition, this only happens for some of the elements, and not others. As far as we can tell, when reordering an earlier element to be later, the earlier element's effects are run, and the later element's are not. When reordering a later element to be earlier, no effects are run. In React 18, no effects are run in either case.\r\n\r\nThe below code sandboxes swap the keys of two elements to simulate re-ordering. When the keys are swapped, the first element's effects run but the second's do not. In React 18, no effects are run.\r\n\r\nWe think React 18's behavior is correct: since no dependencies have changed and the component is not being unmounted and remounted, it should not call any effects.\r\n\r\nNote that this only happens in strict mode. Without strict mode, no effects are run.\r\n\r\n**Steps:**\r\n* Open sandbox and open console.\r\n* After initial load, clear the js console.\r\n* Click the swap button.\r\n\r\nNote that the effects run for the first element, but not the second.\r\n\r\n* [React 19 Sandbox](https:\/\/codesandbox.io\/p\/sandbox\/rough-worker-xfptmg?file=%2Fsrc%2FApp.js%3A1%2C1-24%2C1)\r\n* [React 18 Sandbox](https:\/\/codesandbox.io\/p\/sandbox\/rough-worker-forked-y6jht6?file=%2Fsrc%2FApp.js%3A24%2C1)\r\n\r\nIt appears this changed between the last 18.3 canary, and the first 19 canary:\r\n* Not working - [19.0.0-canary-2b036d3f1-20240327](https:\/\/www.npmjs.com\/package\/react\/v\/19.0.0-canary-2b036d3f1-20240327)\r\n* Working - [18.3.0-canary-c3048aab4-20240326](https:\/\/www.npmjs.com\/package\/react\/v\/18.3.0-canary-c3048aab4-20240326)\r\n\r\n## Context\r\n\r\nWe noticed this in our tests while upgrading React Aria to React 19. However, it does not only occur in tests, it also occurs in development builds in browser. Specifically, we are seeing this in our drag and drop implementation, where users can drag to reorder elements in a list. The extra effects are causing our code to emit additional events compared with React 18.\r\n\r\ncc. @LFDanLu @snowystinger","labels":["Type: Bug","React 19"],"created_at":"2024-05-25T00:28:02Z","comments":1,"reactions":8,"url":"https:\/\/github.com\/facebook\/react\/issues\/29585"},{"issue_number":101,"repository":"facebook\/react","title":"[Compiler Bug]: Usage of `in` operator is reported as a syntax error","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhHCA7MAXABAQ1wF5dgBfAHQwDMoM5sBLTXAZQgFsFsALRjAOYAKAJSkquXI2q4hAcnxypGAmOATJuGN1gqFcjZRVadMPQCMDGMiDJA\n\n### Repro steps\n\nAny code with an `in` is reported as a syntax error\r\n\r\n```js\r\nconst a = {}\r\nfunction Something() {\r\n  if ('a' in a) {\r\n    return 'a'\r\n  }\r\n  return 'b'\r\n}\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n0.0.0-experimental-592953e-20240517","labels":["Type: Bug","Component: Optimizing Compiler"],"created_at":"2024-05-23T06:00:51Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29227"},{"issue_number":102,"repository":"facebook\/react","title":"[Compiler Bug]: Can't handle identifiers that refer to both type and value ","description":"### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBAwhBhggHZ4BKCAhnHmhFQQL4EBmM5BAHRAA6APR4AnlgRghAbgFVFaGghjcmCAgAU+WMEUUECMRs1ZVkpcpRr0mLNgqodFi7lCrm21itTpmjlQAFMSmDhacVroQ+gCUhuwmCHiw7FRQADaZzq5UIBxAA\n\n### Repro steps\n\nApply React Compiler to \r\n```tsx\r\nimport { CommentReaction } from \".\/types\";\r\n\r\ninterface Props {\r\n  reaction: CommentReaction;\r\n}\r\n\r\nfunction CommentReaction({ reaction }: Props) {\r\n  return null;\r\n}\r\n```\r\n\r\nresulting JS issues `TypeError: Duplicate declaration \"CommentReaction\"` when passed through `babel-plugin-react-compiler`. The playground produces a build error.\r\n\r\nThis is easily fixable by changing the code to \r\n```diff\r\n-import { CommentReaction } from \".\/types\";\r\n+import { type CommentReaction } from \".\/types\";\r\n```\r\n\r\nThe original code is actually valid TypeScript (though I would not recommend authoring it this way). Despite `CommentReaction` being both a type and value, TypeScript is able to distinguish when it's used as a value vs type.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-beta-04b058868c-20240508","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-05-22T22:28:15Z","comments":3,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/29224"},{"issue_number":103,"repository":"facebook\/react","title":"[Compiler Bug]: A bug with i18n translation after react compiler","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/github.com\/YYGod0120\/yyblog\n\n### Repro steps\n\n1. Change the var in `app\/[language]\/components\/Typewrite.tsx` to const (use var to skip the compiler and fix the bug)\r\n2. use `pnpm dev` to start project\r\n3. Click twice on the `lanswitcher`  and find that the `Banner` is not translated after the second click.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nv19.0.0-rc-3f1436cca1-20240516","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-05-21T11:57:09Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29195"},{"issue_number":104,"repository":"facebook\/react","title":"[DevTools Bug]: Icon bug in Edge DevTools","description":"### Website or app\r\n\r\nhttps:\/\/www.facebook.com\/\r\n\r\n### Repro steps\r\n\r\n1. Have React DevTools extension installed (Version `5.2.0 from revision 1717ab0171 on 5\/8\/2024`)\r\n2. Open page with React in Edge (Version `125.0.2535.51 (Official build) (64-bit)`)\r\n3. Open Edge DevTools\r\n4. See these weird gray blobs next to the actual tab icon:\r\n\r\n![image](https:\/\/github.com\/facebook\/react\/assets\/142162\/909705d4-ccc8-42d4-9b06-5a9a94233b38)\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-05-21T09:38:19Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29191"},{"issue_number":105,"repository":"facebook\/react","title":"[Compiler Bug]: Values used as indexes are not memoized","description":"### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAwhALYAOhCmOAFMEQG4CGANlAkQL4CURYAB1iROITA4ieTABMEADyIBeIosq0weZggBiWXAUz02nBHxFEi7BFOg5KUKatNcwAbRnyFAXQDclkQA9EH2js7ScooBojC2sMQAPLLaAHzAYU48iUEpzKkxPDEgPEA\r\n\r\n### Repro steps\r\n\r\nIn the code below, the call to `expensiveFunction(value)` does not appear to be memoized (it is preserved as is at the top level in the JS output).\r\n\r\nThis seems to be due to it being used as an index in `let output = values[index]`, because when setting `output` to be `index` itself instead, it gets memoized properly.\r\n\r\nCode:\r\n```js\r\nfunction Component({ value }) {\r\n  const index = expensiveFunction(value)\r\n  let output = values[index];\r\n  \/\/output = index;\r\n  return <div>{output}<\/div>;\r\n};\r\n```\r\n\r\n**_Edit:_** \r\nAdditionally, if `index` was manually memoized with `useMemo`, the compiler will remove the manual memoization, resulting in potentially much slower code than the original code.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-05-20T10:21:44Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29172"},{"issue_number":106,"repository":"facebook\/react","title":"[Compiler Bug]: false positive when using hooks in a nested component","description":"### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvjiswBANoBbaHVwJCAGnxgEudkpWEAuvgC8+KFoDKuMiv7lKWwePyTpBAJJ06CGAGEI8tjeyiZmWr5klJQARmRwANZ29IwsbJ7efgFBCMpCIs4uYQgAoiQkCIz8ecYAfPkShZrauvT6-LgwUAiCANwFLgC+GrIGveL9+DDasGwAPIRMAG41TF4+swD0C8t9EkP4I2N0BVO4M-izAGIQEK6BrDm4xsDpPv73wbgD+Bs1uwPjOi0BjMVj4a4QfiYGAQTBgYRiCSnc6zaGwsAAOikH0ePxq4gGIAGQA\r\n\r\n### Repro steps\r\n\r\nThe ESLint plugin for React Compiler seems to not recognise inner function components as components, so it reports an error when you try to use hooks inside such nested components. `eslint-plugin-react-hooks` does recognise this pattern and doesn\u2019t warn about it.\r\n\r\n> Hooks must be called at the top level in the body of a function component or custom hook, and may not be called within function expressions. See the Rules of Hooks (https:\/\/react.dev\/warnings\/invalid-hook-call-warning).\r\n\r\nI understand that defining a component like this isn\u2019t ideal because `useMemo` \/ `useCallback` don\u2019t have strong guarantees or can get invalidated due to dependencies changing, leading to remounts so would be good to know if code should be rewritten away from this pattern or whether this is a false positive that will eventually get resolved. \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19.0.0-rc-3f1436cca1-20240516","labels":["Type: Bug","Component: Optimizing Compiler"],"created_at":"2024-05-19T03:57:44Z","comments":8,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/29165"},{"issue_number":107,"repository":"facebook\/react","title":"[DevTools Bug]: Version 5.2 shows incorrect source for all the components","description":"### Website or app\n\nhttps:\/\/github.com\/codedthemes\/mantis-free-react-admin-template\/\n\n### Repro steps\n\n1. npm install\r\n2. npm run start\r\n\r\nPoint to any component in the page (for example the text \"Hi, Welcome back \ud83d\udc4b\") , you will see the the source is wrong\r\nit points to the build tool output chunk file and not to the source of the file in the project.\r\nThis is how it displays it now\r\n<img width=\"266\" alt=\"image\" src=\"https:\/\/github.com\/facebook\/react\/assets\/18378585\/4599adf5-42ef-416b-837c-67da92584acc\">\r\nThis should point to the source in the project, the `fileName` should point to the file inside the `src` directory, as pointing to the output chunk is pointless for debug reasons.\r\nThank you\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-05-19T02:48:48Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29164"},{"issue_number":108,"repository":"facebook\/react","title":"[Compiler Bug]: Compiler disagrees with `exhaustive-deps` linter on whether `React.Ref<T>.current` must be in a deps array","description":"### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps:\/\/playground.react.dev\/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEUYCA6hDANYIwAUAlEcADrFFyFg5EDuVWjABKCNEQC8JMqLT1MUADaLGAbnbsi0hAFE0aBLnpNJAPhaat-QXVkA6OLBgJMvKZgR8ilGnXqsQOwB6AV8YOwArMAC1Sy1QoTtCAFsEMDAAQwBzBEkiegRmCXM2DitObghFBDtFCCz-EABZNMycojQYCGTrMLt+gIAaIkL1MqIAXzHy5xxYYhNii3H4mxExAH47HDpkvEwMnaZp8t6he0cYZ1c8hWUTrSnLCdjMS1n5s9sxMYmNTAw2HwhCITQytAAgj4hCZSlouJgeF91uIpKQKGtjv8tEEAFS4uK4ogASXEAE9oJwABYZTDtAAGCW+aHpRBwECIjLWFycLhw9OGOCpCEJFWSAAc8NUYPwpYoxZLqmyqXgwBUACa5LhXQw4RRkuyi0UAISgvCFuQg+jwcDwGXlCAAHjTSPgAG4IAC0mvFasU+x2Mr4cuVXS8QtVor4GRgmH2WSIhyIFKgyCNZSJogyuCIAAkIBBqEQs7g7OiAML2xQAI2zRZpatpJEwHkQ6RjZKIPpcmuwZLTGaIAHImSiHLzXEO7EQdHgLTKnXBFFBNUQ50QqERnMkIB7lSLB93ML24J2YzAMgbQWaMtWlW77VA0kR-bRh6OeTrJ6KYy4h7wH39dUuwQcUexcW1n2rQwMnRIhkhvfA6X3Hp1QgNJMH-UVnE9a5NRlC0FUIPk7DSf1XGcbMcE9KkC2oMAgidF0eDwD1vVA6JB1FMiA0o3AaLohimNgli2J9TirFxIJLARJEaWPapy39OAizRMhK2UWsVOMIoSjiZFP2uHAtnFCAeBadscnoIclxtWhgJBQjqzNdlMNeR5hgAbX0j8xEGfSgiCAyxHHL8cH8jgAF1XneBA5ljfJ9IAHmcnBXI3TAlLsiRgHk9VFOU6gJiIIJTEsV4JhACYgA\n\n### Repro steps\n\nI have a hook called `useWorker()` which creates and configures a WebWorker, returning it as a `React.RefObject<Worker>`, while careful to never perform a side effect during a render.\r\n\r\nThe compiler fails to compile my code as written, but succeeds if I specify `workerRef.current` as a dependency. But you're not supposed to express `Ref.current` as a dependency, per the `react-hooks\/exhaustive-deps` linter:\r\n\r\n> React Hook `React.useCallback` has an unnecessary dependency: `'workerRef.current'`. Either exclude it or remove the dependency array. Mutable values like `'workerRef.current'` aren't valid dependencies because mutating them doesn't re-render the component. eslint[react-hooks\/exhaustive-deps](https:\/\/github.com\/facebook\/react\/issues\/14920)\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nReact Playground on 2024-05-17","labels":["Type: Bug","Status: Unconfirmed","Component: Optimizing Compiler"],"created_at":"2024-05-18T01:22:31Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29160"},{"issue_number":109,"repository":"facebook\/react","title":"Bug: Incorrect form data when using an image submit button","description":"<!--\n  Please provide a clear and concise description of what the bug is. Include\n  screenshots if needed. Please test using the latest version of the relevant\n  React packages to make sure your issue has not already been fixed.\n-->\n\nReact version: canary\n\n## Steps To Reproduce\n\n1. Render the following:\n    ```jsx\n    <>\n      <form action={(formData) => console.log(new URLSearchParams(formData).toString())}>\n        <button name=\"submitter\" value=\"vanilla\">Vanilla<\/button>\n        <input type=\"image\" name=\"submitter\" href=\"\/some\/image.png\" alt=\"Image\" \/>\n      <\/form>\n   <\/>\n    ```\n2. Click on the image submit button\n\n[Link to code example](https:\/\/codesandbox.io\/p\/sandbox\/admiring-yalow-77vwdy?file=%2Fsrc%2FApp.js)\n\n## The current behavior\n`submitter=` is logged\n\n## The expected behavior\nSomething like `submitter.x=5&submitter.y=10` should be logged\n\nWhen an image submit button is activated, the form data set should include entries for the X and Y coordinates, indicating the relative position where the user clicked. This will keep the behavior consistent with a vanilla form submission ([MDN explainer](https:\/\/developer.mozilla.org\/en-US\/docs\/Glossary\/Submit_button#form_data_entries), relevant [section](https:\/\/html.spec.whatwg.org\/#constructing-form-data-set) of the HTML spec)\n\n## Additional commentary\nWe could probably just simplify all of [this code](https:\/\/github.com\/facebook\/react\/blob\/e7d213dfb0760dc9f6506fca6d6cfbac708a40e2\/packages\/react-dom-bindings\/src\/events\/plugins\/FormActionEventPlugin.js#L82-L103) to just `const formData = new FormData(form, submitter);` ... the submitter parameter is [widely available](https:\/\/caniuse.com\/mdn-api_formdata_formdata_submitter) (91.52%); if we're concerned about browsers that don't support it, note that:\n1. Many of them also [don't support `SubmitEvent.submitter`](https:\/\/caniuse.com\/?search=SubmitEvent.submitter), which means the existing approach won't work for them either\n2. FormData submitter can easily be [polyfilled](https:\/\/www.npmjs.com\/package\/formdata-submitter-polyfill) for developers that care about named submit buttons working correctly in old browsers\n\nIMO React doesn't need to maintain its own hacky partial polyfill for an increasingly diminishing edge case :)\n\nSee some previous discussion on the topic [here](https:\/\/github.com\/facebook\/react\/pull\/26674\/files\/5a7629ddb4f22072e37ba1ae581977ce03bdf288#r1178495317).","labels":["Type: Bug","React 19"],"created_at":"2024-05-08T00:40:11Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/29018"},{"issue_number":110,"repository":"facebook\/react","title":"[DevTools Bug]: TypeError: ie.handlePostCommitFiberRoot is not a function","description":"### Website or app\r\n\r\nhttps:\/\/codesandbox.io\/s\/goofy-bas-n5djr8\r\n\r\n### Repro steps\r\n\r\nI believe this is a bug when using React DevTools v4.x.x (not 5.x.x) with `react-dom@19.0.0-canary-xxx`. It currently errors in embeded code sandbox (which embeds v4 of DevTools) but not when you open in a new tab (I have DevTools 5.xx installed).\r\n\r\nTo repo, create an error boundary, and throw an error inside it using the 19 canary and v4 of DevTools.\r\n\r\nOr, see the sandbox link above and:\r\n\r\n1. View sandbox\r\n2. Click \"throw error\"\r\n3. Observe \"handlePostCommitFiberRoot is not a function\" in console\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\nembeded code sandbox version\r\n\r\n### DevTools version (automated)\r\n\r\n4.4.0-f749045a5\r\n\r\n### Error message (automated)\r\n\r\nhandlePostCommitFiberRoot is not a function\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Component: Developer Tools","React 19"],"created_at":"2024-04-09T01:55:40Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/28787"},{"issue_number":111,"repository":"facebook\/react","title":"[DevTools Bug] Children cannot be added or removed during a reorder operation.","description":"### Website or app\n\nhttps:\/\/redeemerllc.com\n\n### Repro steps\n\nwhen searching the products\r\n\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.0.2-47cf347e4\n\n### Error message (automated)\n\nChildren cannot be added or removed during a reorder operation.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1134857\r\n    at A.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1101500)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1103188\r\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1509150)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Children cannot be added or removed during a reorder operation. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-04-07T08:30:58Z","comments":6,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/28777"},{"issue_number":112,"repository":"facebook\/react","title":"[DevTools Bug]: Can\u2019t import chrome trace into react devtools","description":"### Website or app\r\n\r\nhttps:\/\/tsk9sq.csb.app\/\r\n\r\n### Repro steps\r\n\r\n1. Go to the page and open devtools\r\n2. Go to performance tab and start recording\r\n3. Interact with the application\r\n4. Stop recording\r\n5. Download trace\r\n6. Upload to react devtools\r\n7. Expected - React timeline tab should display trace\r\n8. Actual - React devtools fails to import the trace and shows an error - \"e.sort is not a function. Try importing another Chrome performance profile.\"\r\n![image](https:\/\/github.com\/facebook\/react\/assets\/5317985\/a292d82b-36d0-4924-9e9d-1681b60fe17a)\r\n\r\nI think its is an issue with how we are parsing the chrome trace [here](https:\/\/github.com\/facebook\/react\/blob\/e3ebcd54b98a4f8f5a9f7e63982fa75578b648ed\/packages\/react-devtools-timeline\/src\/import-worker\/importFile.js#L22C1-L23C1).\r\nChrome outputs the trace file in the following format:\r\n```json\r\n{\r\n  \"traceEvents\": [\r\n    {\"name\": \"Asub\", \"cat\": \"PERF\", \"ph\": \"B\", \"pid\": 22630, \"tid\": 22630, \"ts\": 829},\r\n    {\"name\": \"Asub\", \"cat\": \"PERF\", \"ph\": \"E\", \"pid\": 22630, \"tid\": 22630, \"ts\": 833}\r\n  ],\r\n  \"displayTimeUnit\": \"ns\",\r\n  \"systemTraceEvents\": \"SystemTraceData\",\r\n  \"otherData\": {\r\n    \"version\": \"My Application v1.0\"\r\n  },\r\n  \"stackFrames\": {...}\r\n  \"samples\": [...],\r\n}\r\n```\r\n \r\n but react devtools expects the file to contain only `traceEvents` array. \r\nReact DevTools should be able to handle both formats because they are valid according to this document: https:\/\/docs.google.com\/document\/d\/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\/preview\r\n \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-04-05T15:34:48Z","comments":2,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/28767"},{"issue_number":113,"repository":"facebook\/react","title":"[DevTools Bug]: React Profiler reports higher hook numbers than shown in Components","description":"### Website or app\r\n\r\nhttps:\/\/github.com\/3perf\/react-workshop-fwdays-mar24\r\n\r\n### Repro steps\r\n\r\n- Clone the https:\/\/github.com\/3perf\/react-workshop-fwdays-mar24 repository\r\n- Switch to the branch called `day5`\r\n- `cd widgets-editor && yarn && yarn start`\r\n- An app will open. Reproduce the following interaction & record a Profiler trace:\r\n   \r\n   https:\/\/github.com\/facebook\/react\/assets\/2953267\/fe0eb272-d136-44a6-bfe0-4f1b20ff27de\r\n- Find the first render of the `ResizableComponent` component in the trace\r\n- Observe React Profiler reporting \u201chook 32 changed\u201d whereas the Components pane reporting only 30 hooks in the component (as in the video)\r\n\r\nSorry for not having a minimal repro! I was only able to reproduce this in big apps like the one attached. However, it reproduces reliably.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2024-03-19T00:40:07Z","comments":6,"reactions":13,"url":"https:\/\/github.com\/facebook\/react\/issues\/28584"},{"issue_number":114,"repository":"facebook\/react","title":"Bug: Class component with `defaultProps` not merging props correctly in `componentDidMount`","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: `18.2.0`\r\n\r\n## Steps To Reproduce\r\n\r\n1. Have a `lazy`-wrapped, class-component with `defaultProps`, `componentDidMount` and `componentWillUnmount`.\r\n2. Using `StrictMode`, on initial call to `componentDidMount`, `this.props` contains `defaultProps` correctly.\r\n3. On 2nd mount - `this.props` isn't merged with `defaultProps` correctly.\r\n\r\n```tsx\r\nconst LazyComponent = lazy(\r\n  async () =>\r\n    class SomeComponent extends Component {\r\n      static defaultProps = { someProp: true };\r\n      componentDidMount() {\r\n        \/\/ 1st mount - `true`\r\n        \/\/ 2nd mount - `undefined`\r\n        console.log(this.props.someProp);\r\n      }\r\n      componentWillUnmount() {}\r\n      render() { \/* ... *\/ }\r\n    },\r\n);\r\n\r\n<StrictMode>\r\n  <LazyComponent \/>\r\n<\/StrictMode>\r\n```\r\n\r\n\r\nLink to code example:\r\nhttps:\/\/stackblitz.com\/edit\/vitejs-vite-1ptuah?file=src%2Fmain.jsx\r\n\r\n## The current behavior\r\nThe `StrictMode`-triggered 2nd mount doesn't correctly merge `defaultProps` into `this.props`.\r\n\r\n## The expected behavior\r\n`this.props` contains the specified `defaultProps`.\r\n\r\n## More context\r\n\r\nI noticed each of the following works-around the issue:\r\n- Wrapping the class-component in a function-component (before wrapping with `lazy`)\r\n- Not using `lazy`\r\n- Not defining a `componentWillUnmount`\r\n\r\nSince this is happening in a 3rd-party which we wrap with `lazy`, the 1st option is a solid workaround for now.\r\n\r\n## Possibly related issues\r\n- #13960\r\n","labels":["Type: Bug"],"created_at":"2024-03-06T09:45:18Z","comments":4,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/28505"},{"issue_number":115,"repository":"facebook\/react","title":"[DevTools Bug]: Error: Should have a queue. This is likely a bug in React. Please file an issue.","description":"### Website or app\n\nprivate repo, cannot disclose the full repo because NDA\n\n### Repro steps\n\nI got this error a few times when working in a react native app, It only showed a few times but the error instructed me to file it as issue, so I am posting here. the error said : \r\n\r\n> Error: Should have a queue. This is likely a bug in React. Please file an issue.\r\n\r\nI am not sure how it is happening, but it is happening when I added  a new prop \"deleted={deletedItem}\"  in the header Item :\r\n\r\n```\r\n\r\n<PageHeaderItemDetails\r\n          id={id}\r\n          watchlisted={isLiked || false}\r\n          deleted={deletedItem}\r\n        \/>\r\n```\r\n\r\n\r\nHere is the full screen's code: \r\n```import {useHeaderHeight} from '@react-navigation\/elements';\r\nimport {NativeStackNavigationProp} from '@react-navigation\/native-stack';\r\nimport React, {useEffect, useLayoutEffect, useState} from 'react';\r\nimport {ActivityIndicator, StyleSheet, View} from 'react-native';\r\n\r\nimport ScreenContainer from '..\/..\/components\/elements\/ScreenContainer';\r\n\r\nimport ImageCarousel from '..\/..\/components\/ImageCarousel\/ImageCarousel';\r\n\r\nimport AlreadySubmittedDetails from '..\/..\/components\/itemDetailsComponents\/AlreadySubmittedDetails';\r\n\r\nimport LikeAndSubmittionButtons from '..\/..\/components\/itemDetailsComponents\/LikeAndSubmittionButtons';\r\nimport SubmissionForm from '..\/..\/components\/itemDetailsComponents\/SubmissionForm';\r\n\r\nimport {useAuth} from '..\/..\/contexts\/AuthContext';\r\n\r\nimport Typography from '..\/..\/components\/common\/Typography';\r\nimport ItemInfoDetails from '..\/..\/components\/elements\/ItemInfoDetails';\r\nimport PageHeaderItemDetails from '..\/..\/components\/pageheader\/PageHeaderItemDetails';\r\nimport {useSubmission} from '..\/..\/contexts\/SubmissionContext';\r\nimport {useTreasuresData} from '..\/..\/contexts\/TreasuresDataContext';\r\nimport {useUserData} from '..\/..\/contexts\/UserDataContext';\r\n\r\ninterface ItemDetailsScreenProps {\r\n  navigation: NativeStackNavigationProp<any>;\r\n  route: any;\r\n}\r\n\r\nconst ItemDetailsScreen = ({navigation, route}: ItemDetailsScreenProps) => {\r\n  const {id, isLiked} = route?.params;\r\n  const [deletedItem, setDeletedItem] = useState(false);\r\n  useLayoutEffect(() => {\r\n    console.log(navigation);\r\n    navigation.setOptions({\r\n      headerShown: true,\r\n      header: () => (\r\n        <PageHeaderItemDetails\r\n          id={id}\r\n          watchlisted={isLiked || false}\r\n          deleted={deletedItem}\r\n        \/>\r\n      ),\r\n    });\r\n  }, [navigation, id, isLiked, deletedItem]);\r\n  const headerHeight = useHeaderHeight();\r\n\r\n  const {getTreasureById} = useTreasuresData();\r\n  const [itemData, setItemData] = useState<any>({});\r\n  const {user} = useAuth();\r\n  const {userData} = useUserData();\r\n  const {getSubmittedItemInfo} = useSubmission();\r\n  const isAlreadySubmittedItem =\r\n    userData && userData.mysubmissions && userData?.mysubmissions.includes(id);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingPage, setLoadingPage] = useState(false);\r\n  const [submittedInfo, setSubmittedInfo] = useState({});\r\n  useEffect(() => {\r\n    const getSubmissionData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        console.log('getting submission data');\r\n        const submissionData = await getSubmittedItemInfo(id);\r\n        setSubmittedInfo(submissionData);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (isAlreadySubmittedItem) {\r\n      getSubmissionData();\r\n    }\r\n    console.log('isAlreadySubmittedItem:', isAlreadySubmittedItem);\r\n  }, [isAlreadySubmittedItem, id]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        setLoadingPage(true);\r\n        const data = await getTreasureById(id);\r\n        setItemData(data);\r\n        setLoadingPage(false);\r\n      } catch (error) {\r\n        \/\/ Handle the error if needed\r\n        console.log('Error fetching data:', error);\r\n\r\n        setLoadingPage(false);\r\n        if (error.message === 'Treasure does not exist') {\r\n          setDeletedItem(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, [id, getTreasureById]);\r\n  useEffect(() => {\r\n    console.log('ITem data -- ', itemData, 'ID ->', itemData.id);\r\n  }, [itemData]);\r\n  return (\r\n    <ScreenContainer style={styles.container} keyboardSafe nestedScrollEnabled>\r\n      {itemData && itemData.id ? (\r\n        <>\r\n          <ImageCarousel data={itemData} \/>\r\n          <LikeAndSubmittionButtons\r\n            id={id}\r\n            numOfLikes={itemData.likesCount}\r\n            numOfSubmittions={itemData.submissionsCount}\r\n          \/>\r\n          <ItemInfoDetails data={itemData} \/>\r\n          {isAlreadySubmittedItem ? (\r\n            <AlreadySubmittedDetails data={submittedInfo} loading={loading} \/>\r\n          ) : (\r\n            <SubmissionForm data={itemData} \/>\r\n          )}\r\n        <\/>\r\n      ) : null}\r\n      {!loadingPage && (!itemData || !itemData.id) ? (\r\n        <View style={{flex: 1, justifyContent: 'center'}}>\r\n          <Typography centered small>\r\n            {deletedItem ? 'Item has been deleted' : 'No Data'}\r\n          <\/Typography>\r\n        <\/View>\r\n      ) : null}\r\n      {loadingPage ? (\r\n        <View style={{flex: 1, justifyContent: 'center'}}>\r\n          <ActivityIndicator size=\"large\" color=\"#818181\" \/>\r\n        <\/View>\r\n      ) : null}\r\n    <\/ScreenContainer>\r\n  );\r\n};\r\n\r\nexport default ItemDetailsScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    minHeight: '100%',\r\n    width: '100%',\r\n    paddingBottom: 20,\r\n    paddingTop: 20,\r\n  },\r\n  headerTitleStyle: {\r\n    fontSize: 16,\r\n    color: '#2C2C2C',\r\n    fontWeight: '600',\r\n    fontFamily: 'Poppins-SemiBold',\r\n  },\r\n});\r\n```\r\n\r\n\r\nthis is the Pageheader component:\r\n```import {useNavigation} from '@react-navigation\/native';\r\n\r\nimport React from 'react';\r\nimport {StyleSheet, TouchableOpacity} from 'react-native';\r\n\r\nimport WatchlistEyeIconButton from '..\/buttons\/WatchlistEyeIconButton';\r\nimport Typography from '..\/common\/Typography';\r\nimport BackButton from '.\/BackButton';\r\nimport PageHeaderContainer from '.\/PageHeaderContainer';\r\n\r\ninterface PageHeaderItemDetailsProps {\r\n  id: string;\r\n  watchlisted: boolean;\r\n  itemOwner?: boolean;\r\n  deleted?: boolean;\r\n}\r\nconst PageHeaderItemDetails = ({\r\n  id,\r\n  watchlisted,\r\n  itemOwner,\r\n  deleted = true,\r\n}: PageHeaderItemDetailsProps) => {\r\n  const navigation = useNavigation();\r\n  const goToEdit = () => {\r\n    navigation.navigate('MyItemsStack', {\r\n      screen: 'EditAnItem',\r\n      params: {\r\n        id: id,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <PageHeaderContainer>\r\n      <BackButton \/>\r\n      <Typography style={styles.headerTitleStyle}>Item details<\/Typography>\r\n      {deleted ? null : (\r\n        <>\r\n          {itemOwner ? (\r\n            <TouchableOpacity activeOpacity={0.8} onPress={goToEdit}>\r\n              <Typography style={styles.editText}>Edit<\/Typography>\r\n            <\/TouchableOpacity>\r\n          ) : (\r\n            <WatchlistEyeIconButton\r\n              itemDetailsPage\r\n              id={id}\r\n              watchlisted={watchlisted}\r\n            \/>\r\n          )}\r\n        <\/>\r\n      )}\r\n    <\/PageHeaderContainer>\r\n  );\r\n};\r\n\r\nexport default PageHeaderItemDetails;\r\n\r\nconst styles = StyleSheet.create({\r\n  headerTitleStyle: {\r\n    fontSize: 16,\r\n    color: '#2C2C2C',\r\n    fontWeight: '700',\r\n    fontFamily: 'Poppins-Bold',\r\n    flex: 1,\r\n    textAlign: 'center',\r\n  },\r\n  editText: {\r\n    color: '#E8BD70',\r\n    fontWeight: '600',\r\n    fontFamily: 'Poppins-SemiBold',\r\n    fontSize: 14,\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\n```\n\n### How often does this bug happen?\n\nSometimes\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed"],"created_at":"2024-02-26T13:36:59Z","comments":6,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/28443"},{"issue_number":116,"repository":"facebook\/react","title":"[DevTools Bug]: react-devtools depends on vulnerable versions of electron and got","description":"### Website or app\n\nhttps:\/\/github.com\/facebook\/react\/blob\/main\/packages\/react-devtools\/package.json\n\n### Repro steps\n\nelectron 23.3.13 has a vulnarability, should be updated to 24+, see links below\r\n\r\n```\r\n# npm audit report\r\n\r\nelectron  23.0.0-alpha.1 - 23.3.13\r\nSeverity: moderate\r\nASAR Integrity bypass via filetype confusion in electron - https:\/\/github.com\/advisories\/GHSA-7m48-wc93-9g85\r\nfix available via `npm audit fix --force`\r\nWill install react-devtools@4.27.2, which is a breaking change\r\nnode_modules\/electron\r\n  react-devtools  >=2.1.8\r\n  Depends on vulnerable versions of electron\r\n  Depends on vulnerable versions of update-notifier\r\n  node_modules\/react-devtools\r\n```\r\n\r\nAlso the used update-notifier relies on a version of got that has vulnerabilities\r\n```\r\ngot  <11.8.5\r\nSeverity: moderate\r\nGot allows a redirect to a UNIX socket - https:\/\/github.com\/advisories\/GHSA-pfrx-2q88-qq97\r\nfix available via `npm audit fix --force`\r\nWill install react-devtools@4.27.2, which is a breaking change\r\nnode_modules\/package-json\/node_modules\/got\r\n  package-json  <=6.5.0\r\n  Depends on vulnerable versions of got\r\n  node_modules\/package-json\r\n    latest-version  0.2.0 - 5.1.0\r\n    Depends on vulnerable versions of package-json\r\n    node_modules\/latest-version\r\n      update-notifier  0.2.0 - 5.1.0\r\n      Depends on vulnerable versions of latest-version\r\n      node_modules\/update-notifier\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-01-23T12:56:37Z","comments":3,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/28058"},{"issue_number":117,"repository":"facebook\/react","title":"[DevTools Bug]: `sayHelloToBackendManager` continuously and pointlessly polls on every page","description":"### Website or app\r\n\r\n(all sites)\r\n\r\n### Repro steps\r\n\r\nFrom any page:\r\n\r\n```js\r\nconst printMessage = (event) => {console.log(event)};\r\nwindow.addEventListener('message', printMessage);\r\n```\r\n\r\nSince there isn't a place to actually describe the bug, i'll put it here:\r\n`sayHelloToBackendManager` is set to poll here until `backendInitialized` is `true`: https:\/\/github.com\/facebook\/react\/blob\/b3003047101b4c7a643788a8faf576f7e370fb45\/packages\/react-devtools-extensions\/src\/contentScripts\/proxy.js#L17-L23\r\n\r\nThe polling message has a source `react-devtools-content-script`: https:\/\/github.com\/facebook\/react\/blob\/b3003047101b4c7a643788a8faf576f7e370fb45\/packages\/react-devtools-extensions\/src\/contentScripts\/proxy.js#L41\r\n\r\nThe switch to set `backendInitialized = true` checks for the message source `react-devtools-bridge`: https:\/\/github.com\/facebook\/react\/blob\/b3003047101b4c7a643788a8faf576f7e370fb45\/packages\/react-devtools-extensions\/src\/contentScripts\/proxy.js#L65-L66\r\n\r\nthe `react-devtools-bridge` sourced message is sent from the backend by whatever invokes this: https:\/\/github.com\/facebook\/react\/blob\/b3003047101b4c7a643788a8faf576f7e370fb45\/packages\/react-devtools-extensions\/src\/contentScripts\/backendManager.js#L127\r\n\r\nbut the `handleMessageFromPage` function returns if the `event.source` isn't the `window` object of the page. Presumably the backend does not have the same window object as the page, or else using `postMessage()` would be pointless: https:\/\/github.com\/facebook\/react\/blob\/b3003047101b4c7a643788a8faf576f7e370fb45\/packages\/react-devtools-extensions\/src\/contentScripts\/proxy.js#L59\r\n\r\nThe `'react-devtools-bridge'` message never flips `backendInitialized = true`, so the polling never terminates.\r\n\r\nThis is causing the bitwarden ppl to get a decent amount of heat, and it's actually devtools causing the problem - https:\/\/github.com\/bitwarden\/clients\/issues\/7575\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-01-18T21:41:56Z","comments":4,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/27992"},{"issue_number":118,"repository":"facebook\/react","title":"[DevTools Bug]: Source map error: URL: react_devtools_backend_compact.js.map","description":"### Website or app\r\n\r\nhttps:\/\/github.com\/avenida714\/alec-synth\/blob\/dccf984d89ae44558c70ff93dfa03b1227d5df5b\/src\/App.jsx#L63-L64C17\r\n\r\nLink found on the vite getting started page: https:\/\/stackblitz.com\/edit\/vitejs-vite-zff6zx?file=src%2FApp.jsx&terminal=dev\r\n\r\n### Repro steps\r\n\r\n\u26a0\ufe0f This is not my code (not public) \u26a0\ufe0f. While I searched for this error I stumble upon this repo. I had this issue when adding the plugin for first time.\r\n\r\n1. Open the website\r\n2. Open console\r\n3. See the error\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2024-01-15T13:25:29Z","comments":6,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/27938"},{"issue_number":119,"repository":"facebook\/react","title":"Bug: [React Refresh] Unexpected behavior when adding\/removing elements prior to uncontrolled inputs","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n\r\nhttps:\/\/github.com\/facebook\/react\/assets\/54008264\/94e69206-48a1-4064-a89c-583aadcd8269\r\n\r\n\r\n\r\n1. https:\/\/stackblitz.com\/edit\/vitejs-vite-cswk6t?file=src%2FApp.tsx\r\n2. Enter 1, 2, 3, and 4 respectively in each textbox\r\n3. Comment and uncomment the `<br \/>` and save\r\n\r\n\r\n```tsx\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div>\r\n        {\/* COMMENT AND UNCOMMENT THIS BR AND SAVE *\/}\r\n        <br \/>\r\n        <input type=\"text\" \/>\r\n        <input type=\"text\" \/>\r\n        <input type=\"text\" \/>\r\n        <input type=\"text\" \/>\r\n      <\/div>\r\n    <\/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\nhttps:\/\/stackblitz.com\/edit\/vitejs-vite-cswk6t?file=src%2FApp.tsx\r\n\r\n## The current behavior\r\n\r\nUncontrolled inputs' values are not synced correctly. (I tested with controlled inputs, and it worked properly.)\r\nI verified that this bug exists in Safari (Version 17.1 (19616.2.9.11.7)) and Chrome (120.0.6099.199).\r\nTried in both Vite and Next.js, so I'm fairly certain it's a react refresh issue.\r\n\r\n```\r\n\"@vitejs\/plugin-react\": \"^4.2.1\",\r\n\"next\": \"^14.0.3\",\r\n```\r\n\r\n## The expected behavior\r\n\r\nEach input should keep its own value.","labels":["Type: Bug","Component: Fast Refresh"],"created_at":"2024-01-13T07:36:53Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27933"},{"issue_number":120,"repository":"facebook\/react","title":"Bug: `undefined` within props is not faithfully deserialized from RSC payload","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: `18.3.0-canary-0cdfef19b-20231211`\r\n\r\nRelated issues: https:\/\/github.com\/facebook\/react\/issues\/25687\r\n\r\n## Steps To Reproduce\r\n\r\nObject variant: \r\n1. Pass a `prop={{ x: undefined }}`  from a server component to a client component\r\n\r\nArray variant: \r\n1. Pass a `prop={[0, undefined, 2]}`  from a server component to a client component\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\nhttps:\/\/codesandbox.io\/p\/devbox\/compassionate-benz-rj9dct\r\n\r\n## The current behavior\r\n\r\nObject properties that are `undefined` aren't present in the deserialized object, and arrays end up with empty slots instead:\r\n```\r\n{ x: undefined }     ->  {}\r\n[ 0, undefined, 2 ]  ->  [ 0, <1 empty item>, 2 ]\r\n```\r\n\r\n## The expected behavior\r\n\r\nIf a property or array item is `undefined`, it should be deserialized as such. Object keys should remain present (with a value of `undefined`), and arrays shouldn't have empty slots.\r\n\r\nObject properties aren't _that_ big of a deal, although a key being present (but undefined) may have some semantic meaning in the user's data model, so it's still not ideal. But empty slots behave in very surprising ways with e.g. `.map()`:\r\n\r\n```js\r\n> [0,,2].map((x) => x ?? 'default')\r\n[ 0, <1 empty item>, 2 ]\r\n\r\n> [0,undefined,2].map((x) => x ?? 'default')\r\n[ 0, 'default', 2 ]\r\n```\r\n\r\nthis is likely to bite anyone who maps over an array in order to display something, which is common in react.","labels":["Type: Bug","Component: Flight"],"created_at":"2024-01-02T20:13:02Z","comments":8,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/27872"},{"issue_number":121,"repository":"facebook\/react","title":"[DevTools Bug]: Excessive CPU Usage","description":"### Website or app\n\nHappens even after all tabs are closed\n\n### Repro steps\n\nI don't have clear repro steps yet. Occasionally I will notice that Chrome is using 170%-200% CPU. I close *all* my tabs, and it continues. Then I open the extensions management page and disable react devtools. This immediately fixes the problem. Re-enabling the extension does not re-engage the high cpu issue.\n\n### How often does this bug happen?\n\nSometimes\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-12-04T21:26:04Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27791"},{"issue_number":122,"repository":"facebook\/react","title":"[DevTools Bug]: Extension breaks PRTG web interface","description":"### Website or app\r\n\r\npresumably any PRTG installation\r\n\r\n### Repro steps\r\n\r\nTry to load PRTG in Firefox. Note many tabs won't load properly, browser console network panel will show NS_BINDING_ABORTED errors coming from jQuery.\r\n\r\nNot sure what the actual problem is, but disabling React Developer Tools lets all those pages load successfully with no errors reported in the console.\r\n\r\nIt would be cool if I could tell React Developer Tools to NEVER load on certain pages, but it doesn't look like that's an option.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-11-30T14:48:38Z","comments":2,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/27764"},{"issue_number":123,"repository":"facebook\/react","title":"[DevTools Bug]: Cannot read properties of undefined (reading 'toLowerCase')","description":"### Website or app\n\nReact app in development phase\n\n### Repro steps\n\n<img width=\"1067\" alt=\"image\" src=\"https:\/\/github.com\/facebook\/react\/assets\/57346455\/7b4b06c1-37f8-4edb-b67e-c816e983c441\">\r\n\r\nOccurs when you click on a component on the Component tab.\r\nRecently, I worked on replacing it with react-hot-loader -> react-refresh.\r\nThe above error has occurred since the react-refresh application.\r\nNo error occurs when react-refresh is removed from the webpack.\r\nThe react-refresh is set the same as the official document.\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n4.28.5\n\n### Error message (automated)\n\nCannot read properties of undefined (reading 'toLowerCase')\n\n### Error call stack (automated)\n\n```text\nutils.js:626 Uncaught TypeError: Cannot read properties of undefined (reading 'toLowerCase')\r\n    at formatDataForPreview (utils.js:626:1)\r\n    at dehydrate (hydration.js:83:1)\r\n    at cleanForBridge (utils.js:26:1)\r\n    at Object.inspectElement (renderer.js:3356:1)\r\n    at agent.js:175:1\r\n    at Bridge.emit (events.js:37:1)\r\n    at bridge.js:136:1\r\n    at listener (backendManager.js:1:25284)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-11-30T05:56:38Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27762"},{"issue_number":124,"repository":"facebook\/react","title":"[DevTools Feature Request]: Full support for RSC server elements (component tree, props, inspect)","description":"### Website or app\r\n\r\nAll Next.js 13\/14 Apps\r\n\r\n### Repro steps\r\n\r\nRSC elements created on the server and sent over the network are not supported by React DevTools. Both `_debugOwner` and `_debugSource` are `null`, which breaks the component tree, props view, and the inspect feature.\r\n\r\nAccording to this thread, https:\/\/twitter.com\/alvarlagerlof\/status\/1716927277295120429, it's been considered, but no concrete plans yet.\r\n\r\nFrom the official [server components RFC](https:\/\/github.com\/reactjs\/rfcs\/blob\/main\/text\/0188-server-components.md#open-areas-of-research):\r\n\r\n![image](https:\/\/github.com\/facebook\/react\/assets\/15837712\/62cd61f3-38b8-481d-b47c-308ff2a82bc5)\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-11-29T09:17:59Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27758"},{"issue_number":125,"repository":"facebook\/react","title":"[DevTools Bug]: Extension not loading for local files in Electron since 4.27.5","description":"### Website or app\n\nlocal file (index.html)\n\n### Repro steps\n\nTry to load the React Devtools in an Electron app (latest 27.1.2) which uses a local file to load.\r\n\r\nElectron now properly supports loading manifest V3 extension, but there is a problem when loading a local file to the main window.\r\nContext: https:\/\/github.com\/electron\/electron\/issues\/36545#issuecomment-1825481015\r\n\r\nOnly workaround is to programatically close the application and re-create the window.\r\nOn some systems (Windows?) it seems plenty to just load the extension twice, but on my macOS, this does not work..\r\n\r\nI traced the commit breaking this is: https:\/\/github.com\/facebook\/react\/pull\/26492\r\nSo v4.27.4 works fine, but the next release (and onwards) 4.27.5 suffer from this issue.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-11-27T09:33:31Z","comments":4,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/27749"},{"issue_number":126,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"1590\" because a node with that id is already in the Store.","description":"### Website or app\n\nhttps:\/\/editor.wix.com\/html\/editor\/web\/renderer\/edit\/1e14587f-a72d-4b5f-866d-f00b1ede1959?metaSiteId=e0eb6e2b-eb02-4e61-8c27-b28c38ce72f9\n\n### Repro steps\n\nJust open web and error show\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.28.5-ef8a840bd\n\n### Error message (automated)\n\nCannot add node \"1590\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1125187\r\n    at A.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1095954)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1097642\r\n    at bridgeListener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:1:1495532)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-11-20T07:58:56Z","comments":15,"reactions":10,"url":"https:\/\/github.com\/facebook\/react\/issues\/27728"},{"issue_number":127,"repository":"facebook\/react","title":"[DevTools Bug]: hook parsing fails while using functional component + redux or alternative","description":"### Website or app\n\nhttps:\/\/github.com\/reduxjs\/redux-templates\/tree\/master\/packages\/cra-template-redux-typescript\n\n### Repro steps\n\nBefore the step-by-step approach, please note, this is not specific to the cra-template-redux-typescript repo mentioned above, nor to redux itself, as it can be easily reproduced by integrating redux (or even other alternative, like zustand) to any react-based project where you use functional components together with hooks.\r\n\r\n1. set up a bare template repo: `npx create-react-app my-app --template redux-typescript`\r\n2. cd my-app\r\n3. npm start\r\n4. Observe the `Counter` component in devtools -> notice hook parsing failed.\r\n5. go to `src\/features\/counter\/Counter.tsx` and stub out the two lines which wire redux into the component (easier to stub out than to delete them and all reference in the JSX):\r\n```typescript\r\n\/\/ const count = useAppSelector(selectCount);  \/\/ stubbed out\r\n\/\/ const dispatch = useAppDispatch();          \/\/ stubbed out\r\nconst count = 1;\r\nconst dispatch = (x:any) => null;\r\n```\r\n6. save & reload (or let HMR do it)\r\n7. Observe the `Counter` component in devtools -> notice hook parsing works properly.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-11-17T19:44:51Z","comments":1,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/27724"},{"issue_number":128,"repository":"facebook\/react","title":"[DevTools Bug]: Hide logs during second render in Strict Mode not working","description":"### Website or app\n\nhttps:\/\/codesandbox.io\/p\/sandbox\/sharp-cache-627m6x?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clozd8em0000a356itqsl0kki%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clozd8elz0003356ivqwmdxyv%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clozd8elz0007356ijh3woekp%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clozd8elz0009356ielu54js9%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clozd8elz0003356ivqwmdxyv%2522%253A%257B%2522id%2522%253A%2522clozd8elz0003356ivqwmdxyv%2522%252C%2522activeTabId%2522%253A%2522clozd92m7006s356idh5hwnfk%2522%252C%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clozd8ely0002356ikf2d5bsz%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252FREADME.md%2522%257D%252C%257B%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252Fsrc%252FApp.tsx%2522%252C%2522id%2522%253A%2522clozd92m7006s356idh5hwnfk%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522state%2522%253A%2522IDLE%2522%257D%255D%257D%252C%2522clozd8elz0009356ielu54js9%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clozd8elz0008356i67rphcjv%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A5173%252C%2522path%2522%253A%2522%252F%2522%257D%255D%252C%2522id%2522%253A%2522clozd8elz0009356ielu54js9%2522%252C%2522activeTabId%2522%253A%2522clozd8elz0008356i67rphcjv%2522%257D%252C%2522clozd8elz0007356ijh3woekp%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clozd8elz0004356ilbgf4wub%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%252C%257B%2522id%2522%253A%2522clozd8elz0005356inhy8tftq%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522build%2522%257D%252C%257B%2522id%2522%253A%2522clozd8elz0006356iz11synx2%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522preview%2522%257D%255D%252C%2522id%2522%253A%2522clozd8elz0007356ijh3woekp%2522%252C%2522activeTabId%2522%253A%2522clozd8elz0004356ilbgf4wub%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D\n\n### Repro steps\n\ncheck console logs while turning on the 'hide logs during the second render in Strict Mode' in react dev tools. it's console logging 'rendering' twice\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-11-15T06:18:55Z","comments":11,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/27705"},{"issue_number":129,"repository":"facebook\/react","title":"Bug: useSyncExternalStore does not schedule update after mutation","description":"Here is a Replay recording with comments:\r\nhttps:\/\/app.replay.io\/recording\/318114a4-3102-4732-ad1b-cb63b9c0ac22\r\n\r\nI think the comments I've added show the following scenario:\r\n1. A React component (`Subscriber`) uses `useSyncExternalStore` to read from a mutable store.\r\n2. The Activity subtree containing `Subscriber` is hidden, and React unsubscribes from the store.\r\n3. An update is scheduled to show the hidden subtree again and the `Subscriber` component re-renders (with memoized state).\r\n4. A parent component mutates the store in a layout effect. (The `Subscriber` component is not yet listening and so it does not re-render to reflect the updated store value.)\r\n6. React re-subscribes the `Subscriber` component (`useSyncExternalStore`) but it has already missed the mutation **and React does not check for a changed snapshot value**.\r\n\r\nWe originally observed this behavior in Replay itself but I was able to reduce it to the following simplified case:\r\nhttps:\/\/codesandbox.io\/s\/inspiring-bird-m4wv5l\r\n\r\nI've added comments to the Replay, including ones that bracket the problematic `commitRoot`. Here's a short Loom as well talking through the bug:\r\nhttps:\/\/www.loom.com\/share\/2584cad5b4c44e6bba396ff8cf79db1d\r\n\r\nI _think_ an application could work around this issue in a couple of ways:\r\n* Only mutate stores in passive effects. (This may cause visible layout shift though so it seems bad.)\r\n* Mutable store users should avoid memoized `getSnapshot` and `subscribe` functions. (This would schedule some unnecessary effects work which is probably nice to avoid but maybe acceptable.)\r\n* **Store subscribe methods should always invoke the `callback` React passes.** (This would cause a lot of unnecessary `Object.is` comparisons but that's probably an acceptable cost.)\r\n\r\nI think the third option above seems best, but needing to do that feels like a foot gun for the API. Thoughts?\r\n\r\ncc @acdlite, @sebmarkbage in case you find this interesting.","labels":["Type: Bug"],"created_at":"2023-11-08T15:52:50Z","comments":14,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/27670"},{"issue_number":130,"repository":"facebook\/react","title":"Bug: eslint-plugin-react-hooks: Incorrect dependency requirement when using `typeof` on nested data structures","description":"This issue seems related to #18828, but it's not identical. Using `typeof` on a primitive value seems to work as expected, but it fails for nested property access.\r\n\r\nVersion: `eslint-plugin-react-hooks@4.6.0`\r\n\r\n\r\n## Steps To Reproduce\r\n\r\n```tsx\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Dummy = () => {\r\n    const [foo, setFoo] = useState<{ bar: number }>({ bar: 42 });\r\n\r\n    useEffect(() => {\r\n        const square = (x: typeof foo.bar) => x * x;\r\n        setFoo((previous) => ({ ...previous, bar: square(previous.bar) }));\r\n    }, []);\r\n};\r\n```\r\n\r\n\r\n## The current behavior\r\n\r\nThis effect clearly doesn't have external (value) dependencies, but I get this:\r\n\r\n> ESLint: React Hook useEffect has a missing dependency: 'foo'. Either include it or remove the dependency array. (react-hooks\/exhaustive-deps)\r\n\r\n\r\n## The expected behavior\r\n\r\nUsing `typeof` never leads to a dependency requirement, just like in this example doesn't:\r\n\r\n```tsx\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Dummy = () => {\r\n    const [bar, setBar] = useState<number>(42);\r\n\r\n    useEffect(() => {\r\n        const square = (x: typeof bar) => x * x;\r\n        setBar(square);\r\n    }, []);\r\n};\r\n```","labels":["Type: Bug","Component: ESLint Rules"],"created_at":"2023-09-05T12:53:45Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27335"},{"issue_number":131,"repository":"facebook\/react","title":"[DevTools Bug]: react-hooks\/rules-of-hooks does not report error for function starting with _","description":"### Website or app\n\nhttps:\/\/codesandbox.io\/p\/sandbox\/quizzical-shirley-9y2txs\n\n### Repro steps\n\nUsing ESLint rule `react-hooks\/rules-of-hooks` with the following code, I would expect it to report errors for invalid usage of hooks. It does not report anything though unless I change `_isEnabled` to `isEnabled`.\r\n\r\n```js\r\nconst useFeatureEnabled = () => {\r\n  const enabled = useEnabled();\r\n  const isEnabled = enabled && _isEnabled();\r\n  return { featureEnabled: isEnabled };\r\n};\r\n\r\nconst _isEnabled = () => {\r\n  const { settingEnabled } = useSettings();\r\n  return settingEnabled;\r\n};\r\n\r\n\r\n\/\/ From https:\/\/github.com\/facebook\/react\/blob\/a20eea25197df0da80104917df414747eeab1ac9\/packages\/eslint-plugin-react-hooks\/__tests__\/ESLintRulesOfHooks-test.js#L716\r\n\/\/ These are neither functions nor hooks.\r\nfunction _normalFunctionWithHook() {\r\n  useHookInsideNormalFunction();\r\n}\r\nfunction _useNotAHook() {\r\n  useHookInsideNormalFunction();\r\n}\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-08-10T21:49:58Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27211"},{"issue_number":132,"repository":"facebook\/react","title":"[DevTools Bug] Node \"24\" was removed before its children.","description":"### Website or app\n\nhttps:\/\/super-visa-insurance.netlify.app\/\n\n### Repro steps\n\nI'm Facing an Issue in my Nextjs 13.4.12  project, main tag is automatically removed in from the page. \r\nBefore this I changed my zustand store with react-query for caching results, but I reverted these changes because I was facing this issue, but after reverting I still face this issue\r\n\n\n### How often does this bug happen?\n\nSometimes\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.28.0-035a41c4e\n\n### Error message (automated)\n\nNode \"24\" was removed before its children.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:28315:43\r\n    at Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24827:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24996:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:57406:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Node  was removed before its children. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-08-04T06:23:24Z","comments":2,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/27186"},{"issue_number":133,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"1\" because a node with that id is already in the Store.","description":"### Website or app\n\nrunning react app\n\n### Repro steps\n\ni just made a basic portfolio app on react app and suddenly this bug showed up, and i cant seem to access the localhost link in any browser beside Firefox\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.27.8-2468a8735\n\n### Error message (automated)\n\nCannot add node \"1\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nemit@moz-extension:\/\/961fb755-5a59-4c1c-943c-029f7cf6279b\/build\/main.js:27059:22\r\nbridge_Bridge\/this._wallUnlisten<@moz-extension:\/\/961fb755-5a59-4c1c-943c-029f7cf6279b\/build\/main.js:27228:14\r\nlistener@moz-extension:\/\/961fb755-5a59-4c1c-943c-029f7cf6279b\/build\/main.js:57497:41\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-08-03T20:36:23Z","comments":13,"reactions":18,"url":"https:\/\/github.com\/facebook\/react\/issues\/27185"},{"issue_number":134,"repository":"facebook\/react","title":"[DevTools Bug]: shows \"This page doesn't appear to be using React\" for every react website on Firefox 115.0.2","description":"### Website or app\n\nall of them and also localhost. https:\/\/react.dev\/ for example\n\n### Repro steps\n\n1. open any website made with React\r\n2. Click on the extension icon\r\n\r\nOS:\r\nWindows 10\r\n\r\nBrowser:\r\nFirefox 115.0.2 (64-bit)\r\n\r\nDevTools:\r\n4.27.8\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Resolution: Needs More Information","Component: Developer Tools"],"created_at":"2023-07-27T06:49:02Z","comments":17,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27158"},{"issue_number":135,"repository":"facebook\/react","title":"Bug: undefined behavior with input checkbox onChange not triggered","description":"Hello,\r\n\r\nI have also discovered a bug where when we do `e.preventDefault()` on an `onClick()` function, inputs will not be updated correctly\r\n\r\nLink to code example:\r\n\r\n\r\nHere is a demo https:\/\/codesandbox.io\/s\/vigorous-albattani-g3hv29\r\n\r\nHas you can see in the demo, when the state is `true` the checkbox is not checked\r\n\r\n\r\n## The current behavior\r\n\r\nThe checkbox is not checked when we have a  `e.preventDefault()` even if the state is `true`\r\n\r\n## The expected behavior\r\n\r\nThe checkbox should have the value of the checked props\r\n\r\n## Notes\r\n\r\n- I've also created some unit test for checkbox in #27127 \r\n- Related to #27016","labels":["Type: Bug","Component: DOM"],"created_at":"2023-07-19T12:10:45Z","comments":5,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/27128"},{"issue_number":136,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"1\" because a node with that id is already in the Store.","description":"### Website or app\n\nreact-devtools with expo\n\n### Repro steps\n\nOnce react-devtools run this happen there \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-core\n\n### DevTools version (automated)\n\n4.13.5-0ae5290b54\n\n### Error message (automated)\n\nCannot add node \"1\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nat \/Users\/amr\/.config\/yarn\/global\/node_modules\/react-devtools-core\/dist\/standalone.js:48:139060\r\n    at c.emit (\/Users\/amr\/.config\/yarn\/global\/node_modules\/react-devtools-core\/dist\/standalone.js:48:88052)\r\n    at \/Users\/amr\/.config\/yarn\/global\/node_modules\/react-devtools-core\/dist\/standalone.js:48:89523\r\n    at \/Users\/amr\/.config\/yarn\/global\/node_modules\/react-devtools-core\/dist\/standalone.js:48:341120\r\n    at Array.forEach (<anonymous>)\r\n    at S.Vc.e.onmessage (\/Users\/amr\/.config\/yarn\/global\/node_modules\/react-devtools-core\/dist\/standalone.js:48:341104)\r\n    at S.n (\/Users\/amr\/.config\/yarn\/global\/node_modules\/react-devtools-core\/dist\/standalone.js:40:2971)\r\n    at S.emit (events.js:315:20)\r\n    at e.exports.P (\/Users\/amr\/.config\/yarn\/global\/node_modules\/react-devtools-core\/dist\/standalone.js:8:9318)\r\n    at e.exports.emit (events.js:315:20)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-07-18T13:14:35Z","comments":4,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/27121"},{"issue_number":137,"repository":"facebook\/react","title":"[DevTools Bug]: Excessive memory usage, even when not in use (Firefox)","description":"### Website or app\n\nThe issue happens on the browser, not on a specific site\n\n### Repro steps\n\n1. Use Firefox\r\n2. open a couple of tabs not even using react (for example for me, I have my mail client, youtube etc open).\r\n3. check about:performance\r\n4. confirm that the memory usage of the extension is around 200mb, which is a lot considering the extension isn't even in use.\r\n\r\nWhat I would do is I would add a config option about the domains the extension is supposed to run on, and only start up everything the extension does when the user is on one of those domains, because I really don't want an extension I'm not even using at the moment to be a memory hog.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-06-29T23:13:56Z","comments":4,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/27025"},{"issue_number":138,"repository":"facebook\/react","title":"[DevTools Bug]: Update highlights crash often","description":"### Website or app\n\nhttp:\/\/everywhereiusetheextension.io\n\n### Repro steps\n\n- Open React devtools\r\n- Enable \" Highlight updates when components render.\"\r\n- Use your React app\r\n- Highlight stops working again and again. The only way to make it work is to close and open devtools...\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-06-28T08:04:02Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/27021"},{"issue_number":139,"repository":"facebook\/react","title":"[DevTools Bug]: Timeline UI isn't being rendered (black screen)","description":"### Website or app\n\nhttps:\/\/fxbh5x.csb.app\/\n\n### Repro steps\n\nI cannot get the timeline view to render properly on my machine in Chrome. Super weird.\r\n\r\n1. Open codesandbox\r\n2. Reload and profile\r\n3. Click button\r\n\r\n## Chrome\r\n\r\nRenders black area and only highlights Ui elements when I hover over (but nothing ever shows below).\r\n\r\n![image](https:\/\/github.com\/facebook\/react\/assets\/563819\/85f5e2df-9a04-420f-b9a3-6a1ef1d2b4d4)\r\n\r\n## Edge\r\n\r\nDoesn't show timeline tab, must not be supported?\r\n\r\n## Firefox\r\n\r\nCan't profile at all?\r\n\r\n![image](https:\/\/github.com\/facebook\/react\/assets\/563819\/0c7a49c2-d691-44fe-8d3b-3aa0a20704d3)\r\n\r\n\r\nUsing latest dev tools for all 3 browsers\r\n\r\n![image](https:\/\/github.com\/facebook\/react\/assets\/563819\/33f2d4b0-74b1-4daf-b01c-8bfa94ea71db)\r\n\r\nVersion: 4.27.8-2468a8735\r\nChrome: Version 114.0.5735.110 (Official Build) (64-bit)\r\nWindows: Version\t10.0.19045 Build 19045\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-06-12T15:59:02Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/26928"},{"issue_number":140,"repository":"facebook\/react","title":"[DevTools Bug]: Flame graph entries overlapping","description":"### Website or app\r\n\r\nhttps:\/\/web-enable-react-profil-1na9tm.herokuapp.com\/\r\n\r\n### Repro steps\r\n\r\n1. Go to https:\/\/web-enable-react-profil-1na9tm.herokuapp.com\/\r\n2. Open profiler\r\n3. Click \"reload and start profiling\"\r\n4. After the reload completes, stop profiling\r\n5. Step through the commits until you see this:\r\n   <img width=\"1840\" alt=\"image\" src=\"https:\/\/github.com\/facebook\/react\/assets\/921609\/7162b403-d940-4028-a20f-27d73d48e55c\">\r\n\r\nThe flame graph entries are overlapping other entries.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n4.27.8 (5\/19\/2023)\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-06-05T15:18:44Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/26903"},{"issue_number":141,"repository":"facebook\/react","title":"Bug: Inconsistent behavior with Promises near the root","description":"Just jotting down some cases I found confusing.\r\nIdeally for each case, it should either work, or should fail in some obvious way.\r\n\r\n## Working: startTransition + 1000ms Promise root\r\n\r\n```js\r\nimport { startTransition } from \"react\";\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nlet promise = new Promise((resolve) => {\r\n  setTimeout(() => {\r\n    resolve(<h1>hi<\/h1>);\r\n  }, 1000);\r\n});\r\n\r\nstartTransition(() => {\r\n  root.render(promise);\r\n});\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/goofy-rui-8g6sxh?file=\/src\/index.js\r\n\r\n## Working: startTransition + root component + 5000ms Promise child\r\n\r\n```js\r\nimport { startTransition } from \"react\";\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nlet promise = new Promise((resolve) => {\r\n  setTimeout(() => {\r\n    resolve(<h1>hi<\/h1>);\r\n  }, 5000);\r\n});\r\n\r\nfunction Foo() {\r\n  return promise;\r\n}\r\n\r\nstartTransition(() => {\r\n  root.render(<Foo \/>);\r\n});\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/epic-cookies-v94rk2?file=\/src\/index.js\r\n\r\n## Working: No startTransition + root component + 5000ms Promise child\r\n\r\n```js\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nlet promise = new Promise((resolve) => {\r\n  setTimeout(() => {\r\n    resolve(<h1>hi<\/h1>);\r\n  }, 5000);\r\n});\r\n\r\nfunction Foo() {\r\n  return promise;\r\n}\r\n\r\nroot.render(<Foo \/>);\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/zen-allen-2u1nr7?file=\/src\/index.js\r\n\r\n## Working: startTransition + root component + 1000ms Promise in state\r\n\r\n```js\r\nimport { useState, startTransition } from \"react\";\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nfunction Foo() {\r\n  const [promise, setPromise] = useState(\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(<h1>hi<\/h1>);\r\n      }, 1000);\r\n    })\r\n  );\r\n  return promise;\r\n}\r\n\r\nstartTransition(() => {\r\n  root.render(<Foo \/>);\r\n});\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/immutable-moon-2h3dqz?file=\/src\/index.js\r\n\r\n## Working: startTransition + root component + 1000ms Promise in state + use\r\n\r\n```js\r\nimport { use, useState, startTransition } from \"react\";\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nfunction Foo() {\r\n  const [promise, setPromise] = useState(\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(<h1>hi<\/h1>);\r\n      }, 1000);\r\n    })\r\n  );\r\n  return use(promise);\r\n}\r\n\r\nstartTransition(() => {\r\n  root.render(<Foo \/>);\r\n});\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/hungry-carlos-1n8hqu?file=\/src\/index.js\r\n\r\n## Crashes: startTransition + 5000ms Promise root\r\n\r\nThis doesn't work (with a confusing crash):\r\n\r\n```js\r\nimport { startTransition } from \"react\";\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nlet promise = new Promise((resolve) => {\r\n  setTimeout(() => {\r\n    resolve(<h1>hi<\/h1>);\r\n  }, 5000); \/\/ <--- I increased the delay\r\n});\r\n\r\nstartTransition(() => {\r\n  root.render(promise);\r\n});\r\n\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/busy-torvalds-xgbcgh?file=\/src\/index.js\r\n\r\n## Crashes: No startTransition + 1000ms Promise root\r\n\r\nThis doesn't work (with a confusing crash):\r\n\r\n```js\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nlet promise = new Promise((resolve) => {\r\n  setTimeout(() => {\r\n    resolve(<h1>hi<\/h1>);\r\n  }, 1000);\r\n});\r\n\r\nroot.render(promise); \/\/ No startTransition\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/serene-payne-677ghp?file=\/src\/index.js\r\n\r\n## Never resolves: No startTransition + root component + 1000ms Promise in state\r\n\r\n```js\r\nimport { useState } from \"react\";\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nfunction Foo() {\r\n  const [promise, setPromise] = useState(\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(<h1>hi<\/h1>);\r\n      }, 1000);\r\n    })\r\n  );\r\n  return promise;\r\n}\r\n\r\nroot.render(<Foo \/>);\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/musing-chaplygin-2udvbx?file=\/src\/index.js\r\n\r\n## Never resolves: No startTransition + root component + 1000ms Promise in state + use\r\n\r\n```js\r\nimport { use, useState } from \"react\";\r\nimport { createRoot } from \"react-dom\/client\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nfunction Foo() {\r\n  const [promise, setPromise] = useState(\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(<h1>hi<\/h1>);\r\n      }, 1000);\r\n    })\r\n  );\r\n  return use(promise);\r\n}\r\n\r\nroot.render(<Foo \/>);\r\n```\r\n\r\nhttps:\/\/codesandbox.io\/s\/blue-butterfly-3xywp2?file=\/src\/index.js:0-400","labels":["Type: Bug"],"created_at":"2023-06-01T15:25:07Z","comments":1,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/26886"},{"issue_number":142,"repository":"facebook\/react","title":"[DevTools Bug] Commit tree already contains fiber \"3289\". This is a bug in React DevTools.","description":"### Website or app\n\nno-url.com\n\n### Repro steps\n\nTrying to navigate between the graphs.\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.27.6-7f8c501f6\n\n### Error message (automated)\n\nCommit tree already contains fiber \"3289\". This is a bug in React DevTools.\n\n### Error call stack (automated)\n\n```text\nat updateTree (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:27498:19)\r\n    at getCommitTree (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:27430:20)\r\n    at ProfilingCache_ProfilingCache.getCommitTree (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:27959:11)\r\n    at CommitFlamegraphAutoSizer (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:46157:33)\r\n    at Bf (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:13715:7)\r\n    at dh (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:14781:7)\r\n    at uk (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:18235:86)\r\n    at qk (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:17769:11)\r\n    at pk (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:17658:23)\r\n    at Ze (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:17638:5)\n```\n\n\n### Error component stack (automated)\n\n```text\nat CommitFlamegraphAutoSizer (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:46140:34)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:38425:3)\r\n    at Profiler_Profiler (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56259:34)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39958:5)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:40130:3)\r\n    at PortaledContent (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:40160:5)\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:40130:3)\r\n    at TimelineContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:45411:3)\r\n    at ProfilerContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:44839:3)\r\n    at TreeContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:32649:3)\r\n    at SettingsContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:33298:3)\r\n    at ModalDialogContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:40555:3)\r\n    at DevTools_DevTools (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56766:3)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Commit tree already contains fiber . This is a bug in React DevTools. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-05-02T12:21:37Z","comments":6,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/26758"},{"issue_number":143,"repository":"facebook\/react","title":"Bug: Suspense should hide Portals deeper in the tree","description":"When Portal is a direct child of Suspense, suspending hides the portal: https:\/\/codesandbox.io\/s\/cocky-boyd-mlq2ko?file=\/src\/App.js\r\n\r\nBut when a Portal is deeper in the tree, suspending fails to hide the portal nodes: https:\/\/codesandbox.io\/s\/nostalgic-fog-udyhuz?file=\/src\/App.js\r\n\r\nWe need to fix this to recursively hide portals. There's a question of which traversal to use, and how it combines with existing traversal. E.g. does \"hiding\" happen before layout effects run?\r\n\r\nWe would also need to decide what to do with legacy mode. One option is to \"fix\" it there too. But that might be difficult to roll out. It might also be tricky to implement. Another option is to leave it as is (the current behavior is leaving a \"hole\" in place of the suspended component: https:\/\/codesandbox.io\/s\/elastic-ptolemy-2u6qel?file=\/src\/App.js). Then we'd need to make sure we at least keep that buggy behavior.\r\n\r\nWe might want to add an internal-only warning (to be muted but logged on devservers) to track _newly hidden_ nodes portals that wouldn't have been hidden with the previous algorithm. Then maybe this would let us know where to fix the UI and avoid the UI regression caused by modals disappearing.\r\n\r\nSummary of work that needs to be done:\r\n\r\n- [ ] Port sandboxes to failing tests\r\n- [ ] Implement new behavior behind a flag\r\n  - [ ] Figure out where hiding\/showing happens during the commit phase\r\n  - [ ] Add new behavior (all direct children of portals, no matter how deep, get auto-shown\/hidden)\r\n  - [ ] Decide what legacy renderer should do, write tests for that too\r\n  - [ ] (Maybe) add internal-only muted logging for content that would be hidden with new behavior","labels":["Type: Bug","Component: Suspense"],"created_at":"2023-04-12T17:25:07Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/26612"},{"issue_number":144,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add child \"1161\" to parent \"942\" because parent node was not found in the Store.","description":"### Website or app\n\nchrome on local host\n\n### Repro steps\n\nit happen with every component that i mount \r\n<img width=\"1470\" alt=\"Screenshot 2023-03-23 at 1 04 00 PM\" src=\"https:\/\/user-images.githubusercontent.com\/110327079\/227134701-d665feca-3326-401e-b957-007c41318be6.png\">\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.27.2-1a88fbb67\n\n### Error message (automated)\n\nCannot add child \"1161\" to parent \"942\" because parent node was not found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:27939:43\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:25892:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26061:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56323:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add child  to parent  because parent node was not found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Resolution: Needs More Information","Component: Developer Tools"],"created_at":"2023-03-23T07:36:11Z","comments":7,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/26465"},{"issue_number":145,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"621\" because a node with that id is already in the Store.","description":"### Website or app\n\nhttps:\/\/github.com\/iprinceroyy\/crwn-clothing\n\n### Repro steps\n\nBug report:\r\n1. Clone & run in the local environment.\r\n2. Sign in.\r\n3. Head over to the shop.\r\n4. Add some items to cart.\r\n5. Click on the cart icon.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.27.2-1a88fbb67\n\n### Error message (automated)\n\nCannot add node \"621\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:27863:41\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:25892:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26061:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56323:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-03-08T13:15:00Z","comments":15,"reactions":12,"url":"https:\/\/github.com\/facebook\/react\/issues\/26340"},{"issue_number":146,"repository":"facebook\/react","title":"Bug: Memory leak in react while focusing input elements","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nI 've noticed that having an `input` element focused and unmounting its owner component doesn't actually free up this component from the js heap  , I 've created this simple blnkr to demonstarate this which add a dummy `X` to a ref inside a component that has an input element\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Go to this [plnkr](https:\/\/plnkr.co\/edit\/IiqhT2JEvZcAJBMu?open=index.js&deferRun=1&preview)  \r\n2. Click Tab Two\r\n3. Click the `Grow button` a few times \r\n4. Take a heap snapshot \r\n5. Click the Grow button a few more times \r\n6. **IMPORTANT** Focus the input element by clicking into it\r\n7. Click Tab One ( This unmount the component that own the ref to the list ) \r\n8. Take another heap snapshot ( after running the GC)  \r\n9. Compare between the two snapshots \r\n10. The added string `X` will be found within the `concat check the screenshot \r\n<img width=\"1507\" alt=\"Screenshot 2023-01-28 at 1 13 12 AM\" src=\"https:\/\/user-images.githubusercontent.com\/28496859\/215225175-f64cf1ee-f6b9-4dff-93d0-4fdebc3747e9.png\">\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: can be found above\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThe current component that own the input element is still being there in the memory and doesn't free up its own resources afer being unmounted.\r\n\r\n## The expected behavior\r\nThe current component shloud free up its resources whenever being unmounted \r\n","labels":["Type: Bug"],"created_at":"2023-01-27T23:38:32Z","comments":15,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/26069"},{"issue_number":147,"repository":"facebook\/react","title":"[DevTools Bug]: event.metaKey + f to focus SearchInput doesn't work on Windows","description":"### Website or app\r\n\r\nhttps:\/\/beta.reactjs.org\/\r\n\r\n### Repro steps\r\n\r\n1. Open React Dev Tools -> Components\r\n2. Try hitting (Windows Key) + f\r\n\r\nOn Windows 10\/11, the Feedback Hub opens up. It will not focus on the search input.\r\n\r\nI understand this probably works fine on Mac, but on Windows it'd be great to use a key that won't be intercepted by Windows. Like `Shift + f`. or `Ctrl + Alt + f`. Or, perhaps as soon as I start typing (unless I'm typing in another focused input). Or, if I press `\/`. Something!\r\n\r\nI thought at first DevTools didn't have a keyboard shortcut but then I looked at the source code and saw it uses [`metaKey`](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/KeyboardEvent\/metaKey) which _totally_ doesn't work on Firefox in Windows.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-01-26T04:46:27Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/26052"},{"issue_number":148,"repository":"facebook\/react","title":"[DevTools Bug]: Cannot read properties of undefined (reading 'displayName') at getWrappedDisplayName","description":"### Website or app\n\nhttps:\/\/pda.ritis.org\/suite\/download\/\n\n### Repro steps\n\nI noticed this when using React DevTools in my DEV environment with both Chrome and Firefox which is https:\/\/pda-dev.ritis.org\/suite\/download\/ but I also see it in the production URL.\r\n1.  Logged in URL with React Developer Tools 4.27.1 installed and enabled (in Chrome or Firefox)\r\n2.  Navigate to a the Download tool\r\n3. Almost immediate the below error displays\r\n`\r\nTypeError: Cannot read properties of undefined (reading 'displayName')\r\n    at getWrappedDisplayName (react_devtools_backend.js:247:33)\r\n    at getDisplayNameForFiber (react_devtools_backend.js:6384:62)\r\n`\r\n![outerType_undefined](https:\/\/user-images.githubusercontent.com\/3752154\/213483566-c6f2c74f-8e79-4d36-bb8a-2d55a103782c.png)\r\n![getWrappedDisplayName](https:\/\/user-images.githubusercontent.com\/3752154\/213483568-af17e1d2-f713-45f3-9c82-f66369bf77f6.png)\r\n![forwardRef](https:\/\/user-images.githubusercontent.com\/3752154\/213483572-1418cbc1-b0ca-4934-bbe9-cddd09ce2091.png)\r\n\r\nI'm unable to downgrade React DevTools in Chrome, but can in Firefox and notice that this started occuring with Version 4.27.0.\r\n- \"4.27.1 Relased December 6, 2022\" produces this error\r\n- \"4.27.0 Released November 28, 2022\" produces this error\r\n- \"4.25.0 Released July 14, 2022\" does not produce this error\r\n\r\nSince I only use the browser version of react dev-tools, is there any way to install 4.25.0 in Chrome browser?\r\n\r\nOther environment information:\r\nChrome \"Version 109.0.5414.75 (Official Build) (64-bit)\"\r\nFirefox  \"Version 109.0 (64-bit)\r\nWindows 10 Pro build 19044.2486\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-01-19T15:35:41Z","comments":6,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/26022"},{"issue_number":149,"repository":"facebook\/react","title":"[DevTools Bug] Commit tree does not contain fiber \"4543\". This is a bug in React DevTools.","description":"### Website or app\r\n\r\nhttps:\/\/kai.dev.dxos.org\/\r\n\r\n\r\n\r\n### Repro steps\r\n\r\n1. Open devtools components panel and trigger a re-render in the app.\r\n2. In my case sometimes the component tree doesnt appear at first, but pressing the devtools extension action button in the browser navbar makes it load.\r\n\r\n### More info\r\n\r\nApp built with react `18.2.0` and vite\r\n\r\nTo repro with Vite running in dev mode:\r\n\r\n```\r\n# checkout https:\/\/github.com\/dxos\/dxos\/tree\/main\/packages\/experimental\/kai\r\n\r\npnpm install\r\npnpm -w nx serve kai\r\n```\r\n\r\nOpen devtools component view and trigger a re-render in the app.\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\nreact-devtools-extensions\r\n\r\n### DevTools version (automated)\r\n\r\n4.27.1-47f63dc54\r\n\r\n### Error message (automated)\r\n\r\nCommit tree does not contain fiber \"4543\". This is a bug in React DevTools.\r\n\r\n### Error call stack (automated)\r\n\r\n```text\r\nat updateTree (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26856:21)\r\n    at getCommitTree (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26716:20)\r\n    at SidebarCommitInfo_SidebarCommitInfo (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:55240:42)\r\n    at Ri (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:16122:7)\r\n    at tk (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:17190:7)\r\n    at kn (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:20548:86)\r\n    at gn (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:20091:11)\r\n    at fn (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:20011:23)\r\n    at Um (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:19991:5)\r\n    at Wm (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:19795:7)\r\n```\r\n\r\n\r\n### Error component stack (automated)\r\n\r\n```text\r\nat SidebarCommitInfo_SidebarCommitInfo (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:55220:34)\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:37690:3)\r\n    at Profiler_Profiler (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:55516:34)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39222:5)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39394:3)\r\n    at PortaledContent (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39424:5)\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39394:3)\r\n    at TimelineContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:44671:3)\r\n    at ProfilerContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:44100:3)\r\n    at TreeContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:31925:3)\r\n    at SettingsContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:32569:3)\r\n    at ModalDialogContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39819:3)\r\n    at DevTools_DevTools (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56024:3)\r\n```\r\n\r\n\r\n### GitHub query string (automated)\r\n\r\n```text\r\nhttps:\/\/api.github.com\/search\/issues?q=Commit tree does not contain fiber . This is a bug in React DevTools. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\r\n```\r\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2023-01-17T12:36:08Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/26009"},{"issue_number":150,"repository":"facebook\/react","title":"Bug: SSR of malformed? `meta` renders nothing(working in 18.2)","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n\r\n## Steps To Reproduce\r\n\r\n1. SSR `<meta name=\"test\" \/>` (`renderToString` and `renderToReadableStream`)\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: \r\n- Working in 18.2: https:\/\/codesandbox.io\/s\/18-2-ssr-meta-only-working-t6lxvw\r\n- render nothing in 18.3-5fcf1a4b4c2150a1b9fe0de0144a82a053c63966: https:\/\/codesandbox.io\/s\/18-3-5fcf1a4b4c2150a1b9fe0de0144a82a053c63966-ssr-meta-only-bug-woguy0?file=\/src\/index.js\r\n\r\n\r\n## The current behavior\r\n\r\nRenders empty string\r\n\r\n\r\n## The expected behavior\r\n\r\nRenders `<meta name=\"test\" \/>`\r\nDon't know if that's a valid use case but it should at least warn that the meta tag is malformed?\r\n\r\nThis broke the attribute fixture (originally reported in https:\/\/github.com\/facebook\/react\/pull\/25927).\r\n\r\nAlso:\r\n1. `<meta name=\"description\" content={content} \/>` renders nothing unless `content` is a string.\r\n1. `<meta http-equiv \/>` i.e. any `http-equiv` usage no longer renders anything. It used to warn at least.","labels":["Type: Bug","Component: Server Rendering"],"created_at":"2022-12-23T10:05:15Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25928"},{"issue_number":151,"repository":"facebook\/react","title":"Bug: Rendering <Suspense> outside <body> should error","description":"Expected: it should error\r\nActual: it doesn't\r\n\r\nPossibly related: https:\/\/github.com\/facebook\/react\/issues\/25710#issuecomment-1352456042. In a standalone project, I've only managed to repro `<!--$-->` before doctype, but not between doctype and html as in the repro from that issue. I haven't confirmed that this is the actual cause of #25710, but at the very least we should have errored there as well.","labels":["Type: Bug","Component: Server Rendering"],"created_at":"2022-12-15T02:09:43Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25886"},{"issue_number":152,"repository":"facebook\/react","title":"[DevTools Bug] Cannot remove node \"XX\" because no matching node was found in the Store.","description":"### Website or app\n\nhttps:\/\/ideaflow.app\n\n### Repro steps\n\nUsing next 12.3 and windows 10 chrome 108.0.5359.99 (Official Build) (64-bit)\r\n- Open the inspector\r\n- Navigate to the components tab. Open it a few times until it displays something. (blank screen issue already logged #22034 )\r\n- eventually it will display the component tree, but after one scroll, it fails with this error:\r\n![image](https:\/\/user-images.githubusercontent.com\/5444992\/207644741-c870e4bd-8514-4f4f-850a-8713217e41e9.png)\r\n\r\nUncaught Error: Cannot remove node \"1946\" because no matching node was found in the Store.\r\nDismiss\r\nThe error was thrown at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:27994:43\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:25895:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26064:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56299:39)\r\n\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.27.1-47f63dc54\n\n### Error message (automated)\n\nCannot remove node \"1946\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:27994:43\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:25895:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26064:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56299:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-12-14T15:57:37Z","comments":19,"reactions":35,"url":"https:\/\/github.com\/facebook\/react\/issues\/25884"},{"issue_number":153,"repository":"facebook\/react","title":"[DevTools Bug]: Labels are cut off on Firefox on Ubuntu 22.04","description":"### Website or app\n\nhttps:\/\/github.com\/iprotoni\/react-skill-assessments\n\n### Repro steps\n\n the key labels on the right hand pane are cut off whenever using React DevTools on Firefox latest version on Ubuntu 22.04\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-12-13T21:44:57Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25882"},{"issue_number":154,"repository":"facebook\/react","title":"[DevTools Bug]: Electron support broken in 4.27","description":"### Website or app\r\n\r\n[Electron.js](https:\/\/electronjs.org)\r\n\r\n### Repro steps\r\n\r\nReact devtools 4.27 no longer works in Electron[1] because `chrome.scripting` isn't implemented, which it started using due to the manifest v3 upgrade: https:\/\/github.com\/facebook\/react\/pull\/25145\r\n\r\nWhen opening React devtools 4.27 in any Electron project (installed with [`electron-devtools-installer](https:\/\/github.com\/MarshallOfSound\/electron-devtools-installer\/) for example) you'll see that the devtools panel is shown but no React components are ever found. Earlier versions worked well with Electron\r\n\r\n[1] https:\/\/github.com\/electron\/electron\/issues\/36545 and https:\/\/github.com\/MarshallOfSound\/electron-devtools-installer\/issues\/232\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2022-12-07T13:16:17Z","comments":29,"reactions":25,"url":"https:\/\/github.com\/facebook\/react\/issues\/25843"},{"issue_number":155,"repository":"facebook\/react","title":"[DevTools Bug] Element \"15\" not found","description":"### Website or app\n\nhttps:\/\/github.com\/sfmarco\/Task.git\n\n### Repro steps\n\nSolo queria ver los estados de mi componente y aparecio el error\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.27.0-bd2ad89a4\n\n### Error message (automated)\n\nElement \"15\" not found\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39558:15\n```\n\n\n### Error component stack (automated)\n\n```text\nat InspectedElementContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:40933:3)\r\n    at Suspense\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39237:5)\r\n    at div\r\n    at InspectedElementErrorBoundaryWrapper (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39771:3)\r\n    at NativeStyleContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:42429:3)\r\n    at div\r\n    at div\r\n    at OwnersListContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:35080:3)\r\n    at SettingsModalContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:37705:3)\r\n    at Components_Components (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:44505:52)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39237:5)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39409:3)\r\n    at PortaledContent (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39439:5)\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39409:3)\r\n    at TimelineContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:44686:3)\r\n    at ProfilerContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:44115:3)\r\n    at TreeContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:31940:3)\r\n    at SettingsContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:32584:3)\r\n    at ModalDialogContextController (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:39834:3)\r\n    at DevTools_DevTools (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:56039:3)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Element  not found in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\r\n\r\nError\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-12-06T22:06:00Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25833"},{"issue_number":156,"repository":"facebook\/react","title":"[DevTools Bug]: configure by add webpack entry in document doesn't work","description":"### Website or app\r\n\r\nhttps:\/\/github.com\/tjx666\/awesome-chrome-extension-boilerplate\/tree\/vue3\r\n\r\n### Repro steps\r\n\r\n![](https:\/\/user-images.githubusercontent.com\/41773861\/203625364-e3865fa3-fc84-4498-bdea-1375d519a78e.png)\r\n\r\n<img width=\"1440\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/41773861\/203153962-4f47996d-be2c-438a-b72f-d8a32cbc198c.png\">\r\n\r\n<img width=\"1440\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/41773861\/203154053-a672c033-5299-449a-a3a9-21d1468b655f.png\">\r\n\r\nrelated https:\/\/github.com\/facebook\/react\/issues\/24844#issuecomment-1325511675\r\n\r\nI load react-devtools by put in most front of webpack entry: https:\/\/github.com\/tjx666\/awesome-chrome-extension-boilerplate\/blob\/aad9001069cb19cfc5583615b864740b322b7923\/server\/utils\/entry.ts#L29\r\n\r\n1. git clone https:\/\/github.com\/tjx666\/awesome-chrome-extension-boilerplate.git\r\n2. git checkout manifest-v3\r\n3. git reset --hard aad9001069cb19cfc5583615b864740b322b7923\r\n4. pnpm install\r\n5. run pnpm devtools\r\n6. chrome open chrome:\/\/extensions\/\r\n7. enable chrome extension develop mode\r\n8. load unpack extension folder under project root\r\n9. open options page of this extension\r\n10. then you will see the error in above screenshot.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n```\"react-devtools\": \"4.26.1\"```\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-11-23T19:42:45Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25733"},{"issue_number":157,"repository":"facebook\/react","title":"Adding useEffect in HMR causes \"Expected static flag was missing\"","description":"```\r\nWarning: Internal React error: Expected static flag was missing. Please notify the React team.\r\n```\r\n\r\nhttps:\/\/twitter.com\/dan_abramov\/status\/1593609862830759936\r\n\r\nThis was also repro:ed in Next.js by @sokra:\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/63648\/203103593-3136632a-b226-4acb-9d93-09b809ada779.png)\r\n","labels":["Type: Bug","Component: Fast Refresh","React Core Team"],"created_at":"2022-11-21T16:13:39Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25719"},{"issue_number":158,"repository":"facebook\/react","title":"[DevTools Bug]: Not seeing source \/ file path","description":"### Website or app\r\n\r\n[Any](https:\/\/reactjs.org\/)\r\n\r\n### Repro steps\r\n\r\nOpen react dev tools in browser\r\nSelect a react component from the tree\r\nNotice that no Source (file path) is printed in the bottom right panel (see description screenshot in https:\/\/github.com\/facebook\/react\/pull\/17567)\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-10-25T19:39:07Z","comments":4,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/25564"},{"issue_number":159,"repository":"facebook\/react","title":"[DevTools Bug]: Warnings are too \"loud\", mislabeled and make console difficult to use","description":"### Website or app\r\n\r\nhttps:\/\/codesandbox.io\/s\/purple-moon-ts7xzs?file=\/src\/App.js\r\n\r\n### Repro steps\r\n\r\nIt's not causing this in the codesandbox probably due to some flag missing, but locally in dev I've been getting the following when a stray prop is passed to a dom elem as an attribute (_NB this output is **truncated**, this isn't even the whole message_):\r\n\r\n![Screen Shot 2022-10-07 at 10 39 51 AM](https:\/\/user-images.githubusercontent.com\/317498\/194645730-159ea8cf-7d7c-49f3-b5b3-7caaf5384b44.png)\r\n\r\n## Problems with the current logging approach\r\n\r\n1. **This floods the console and pushes all other messages out of screen, making debugging difficult.** This is the main issue.\r\n2. The severity\/\"loudness\" of this log message is out of proportion to the issue. This is a fairly minor issue as it typically does not actually break anything, yet this log drowns out actual issues that I need to see more urgently\r\n3. This issue's importance is being misclassified & the wrong logging API used: `console.error` is being misused to log a warning. The purpose of different log levels is to allow the consumer (developer) to enable or disable logging of less important messages depending on their needs. Putting warnings in the \"error\" stream **takes this control away from developers**. When I am cleaning up upgrade issues, minor bugs etc. I will turn on warnings and see this, but when I'm trying to figure out why my GQL endpoints are erroring, I should be able to turn this off.\r\n\r\n## Ask\r\n\r\nMy goal is to stop this effectively \"breaking\" the error console, i.e. making it unusable by flooding it with messages. Possible approaches:\r\n\r\n1. move these warnings to console.warn, putting control back in the developer\/consumer's hands\r\n2. flag to disable the stack traces so messages aren't so enormous\r\n3. use [console.groupCollapsed](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/console\/groupCollapsed) to collapse these, so the stack is there but doesn't flood the console\r\n\r\n## FAQ\r\n\r\n### Why don't you just fix the errors? If you fix the errors, this isn't an issue. The solution is fix the errors.\r\n\r\nI don't mean to brag, but I work on applications with *lots* of errors. I truly wish I could fix every single one, but I must pick my battles and this often means letting smaller issues slide in order to focus on bigger ones. Furthermore, when working on a shared application, it can be out of your power to fix all the errors. There are several reasonable reasons why someone would want to work on their application and ignore certain errors, at least temporarily.\r\n\r\nIn any event, \"this is a valid error message so why should it be quieter\" doesn't address the question of *proportionality*. Should a warning like this overtake the whole console? Should it use `window.alert`? Should it bail out and crash the whole application? It's clear that these approaches to alerting the developer\/consumer to an issue are not proportional with the severity of the issue itself, and these more drastic approaches would be inappropriate, even if they \"draw the developer\/user's attention to the issue\" as this clearly does.  **Not every issue is p0** which is why we have log levels, and in this context different log streams (info, warning, and error).\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed"],"created_at":"2022-10-07T20:28:41Z","comments":17,"reactions":15,"url":"https:\/\/github.com\/facebook\/react\/issues\/25447"},{"issue_number":160,"repository":"facebook\/react","title":"[DevTools Bug]: Hook parsing failed for default Next.js configuration","description":"### Website or app\r\n\r\nhttps:\/\/github.com\/vercel\/next.js\/tree\/canary\/examples\/blog-starter\r\n\r\n### Repro steps\r\n\r\n1. Create an instance of the official Next.js blog starter template, e.g. `yarn create next-app --example blog-starter blog-starter`\r\n2. Run `yarn dev` (or equivalent) inside the created project.\r\n3. Go to the webpage (normally `http:\/\/localhost:3000`) and open the React devtools\r\n4. Enable 'Always parse hook names from source' in the devtool options\r\n5. Observe the error 'Hook parsing failed':\r\n    <img width=\"669\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/565371\/194022450-1b32305a-b2bc-42bc-ac4d-ed389e9fdc74.png\">\r\n\r\nNote: Next.js does not allow you to change the source map format (`devtool`) setting so it's rather difficult to work around this issue.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-10-05T09:00:01Z","comments":10,"reactions":19,"url":"https:\/\/github.com\/facebook\/react\/issues\/25427"},{"issue_number":161,"repository":"facebook\/react","title":"[DevTools Bug]: \"Message length exceeded maximum allowed length\" when profiling a complex application","description":"### Website or app\n\nN\/A\n\n### Repro steps\n\nWhen profiling a complex, proprietary app, I regularly get an error message, \"Message length exceeded maximum allowed length.\"\r\n\r\nSteps to reproduce:\r\n\r\n1. Within the Dev Tools, go to the Profiler tab.\r\n2. Click the \"Start Profiling\" button.\r\n3. Let the app run for a bit. Do some things in the app.\r\n4. Click the \"Stop Profiling\" (\"record\") button.\r\n\r\nAt this point, the Chrome Dev Tools console logs an error:\r\n\r\n```\r\ncontentScript.js:116 Uncaught Error: Message length exceeded maximum allowed length.\r\n    at handleMessageFromPage (contentScript.js:116:10)\r\n```\r\n\r\nAnd the Profiler tab is stuck with the message, \"Processing data... This should only take a minute.\"\r\n\r\nThe error is thrown from https:\/\/github.com\/facebook\/react\/blob\/64fe791be84ad04a4a1d005376ba5cf5701db9b7\/packages\/react-devtools-extensions\/src\/contentScript.js#L36\r\n\r\nThe last time this occurred, when breaking on exceptions at that line, `JSON.stringify(event.data.payload).length` reports 92074565. I can provide further information on the contents of the problematic `event.data.payload` if that would be helpful.\r\n\r\nI apologize for the lack of a reproducible test case - it's a complex app (which is why I was looking into profiling), and I don't think I could simplify it down to a public test case while triggering the error.\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-10-04T15:31:21Z","comments":21,"reactions":26,"url":"https:\/\/github.com\/facebook\/react\/issues\/25415"},{"issue_number":162,"repository":"facebook\/react","title":"[DevTools Bug]: DevTools causes hook callback behavior inconstency","description":"### Website or app\n\nhttps:\/\/gist.github.com\/nhusher\/33981014bb69318ead012c11a73eff52\n\n### Repro steps\n\nEither clone the gist and run with static-server, or check out [this equivalent codesandbox link](https:\/\/5lu8ks.csb.app\/) (Full sandbox IDE [here](https:\/\/codesandbox.io\/s\/new-snowflake-5lu8ks?file=\/src\/index.tsx))\r\n\r\n1. Have React devtools installed \r\n2. Visit the URL indicated by static-server\r\n3. Click both increment buttons, ensuring that they work\r\n4. Open the developer tools\r\n5. Navigate to the DevTools Component tree and highlight `<App \/>`\r\n6. Click both the increment buttons\r\n7. Observe that the normal in-React increment button works\r\n8. Observe that the \"increment (outside react)\" button no longer works\r\n\r\nVerification of the issue:\r\n\r\n1. Open an incognito window\r\n2. Visit the URL indicated by static-server\r\n3. Click the two buttons and verify that both work\r\n4. Open the developer tools (no React Devtools available)\r\n5. Verify the two buttons continue to work\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-09-30T15:42:26Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25367"},{"issue_number":163,"repository":"facebook\/react","title":"[DevTools Bug]: Labels are cut off on Firefox on Linux (Fedora 36)","description":"### Website or app\r\n\r\nhttps:\/\/codesandbox.io\/s\/hopeful-fog-nxqwgw\r\n\r\n### Repro steps\r\n\r\nWhen using React DevTools on **Firefox 104.0.1 (64-bit)** on **Linux (Fedora 36 with Gnome Desktop 42)** the key labels on the right hand pane are cut off. See screenshot. I'm guessing this is likely because of fonts being used on Linux are different from Windows and macOS. I haven't noticed this problem in Chrome at all, and I don't think it happens on Windows and macOS.\r\n\r\nThis only happens to editable orange\/keys in the props panel, when the keys are black\/read only, they render just fine.\r\n\r\nI also noticed that React devtools doesn't honor the Firefox advanced font settings like the rest of devtools does. Having the ability to select a different browser monospace font will allow for a workaround to this issue.\r\n\r\n![Screenshot from 2022-09-14 09-33-08](https:\/\/user-images.githubusercontent.com\/612695\/190090608-602bd0d8-3557-492e-a2d9-59b16372f522.png)\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-09-14T07:38:20Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/25262"},{"issue_number":164,"repository":"facebook\/react","title":"[DevTools Bug]: useSyncExternalStore adds 1 to subsequent hook's number in Profiler","description":"### Website or app\n\nhttps:\/\/codesandbox.io\/s\/sweet-fast-huvy9e?file=\/src\/App.tsx\n\n### Repro steps\n\n1. Open the sandbox in Google Chrome. Notice that the App component in App.tsx calls useSyncExternalStore, followed by useState. Lastly, it has an effect that simply toggles the state value every second so that it's easy to profile state changes without interacting with the UI.\r\n2. Open the rendered page in a new window and inspect it in Chrome DevTools.\r\n3. Open Components tab, select the App component, and notice that useState hook is `#2`. ![image](https:\/\/user-images.githubusercontent.com\/1012600\/188234380-2d4a5dee-3aa5-46ae-b919-f3cbe276d741.png)\r\n4. Switch to Profiler tab and profile the page for a couple of seconds.\r\n5. Notice that \"Why did this render?\" section says \"Hook **3** changed\". The number should be 2. ![image](https:\/\/user-images.githubusercontent.com\/1012600\/188236070-103563ca-ae0c-45b1-af58-c397fced98c4.png)\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-09-02T21:14:12Z","comments":6,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/25178"},{"issue_number":165,"repository":"facebook\/react","title":"Bug: react-hooks\/exhaustive-deps false positive when use function with generic type variable in useEffect","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. use function with generic type in useEffect\r\n\r\ncode example:\r\n```ts\r\nfunction useBug<T>(val: T) {\r\n  const ref = useRef<T>(val)\r\n\r\n  const fn = () => {\r\n    const temp: T = ref.current \/\/ <-- if remove the generic type will be ok\r\n  }\r\n\r\n  useEffect(() => {\r\n    fn()\r\n  }, []) \/\/ <-- ESLint error: React Hook useEffect has a missing dependency: 'fn'.\r\n}\r\n```\r\n\r\npackage version:\r\n```\r\nnpmPackages:\r\n    @typescript-eslint\/eslint-plugin: ^5.35.1 => 5.35.1 \r\n    @typescript-eslint\/parser: ^5.35.1 => 5.35.1 \r\n    @typescript-eslint\/scope-manager:  5.35.1 \r\n    @typescript-eslint\/type-utils:  5.35.1 \r\n    @typescript-eslint\/types:  5.35.1 \r\n    @typescript-eslint\/typescript-estree:  5.35.1 \r\n    @typescript-eslint\/utils:  5.35.1 \r\n    @typescript-eslint\/visitor-keys:  5.35.1 \r\n    eslint: ^8.23.0 => 8.23.0 \r\n    eslint-plugin-react-hooks: ^4.6.0 => 4.6.0 \r\n```\r\n\r\nrelevant: [#20395](https:\/\/github.com\/facebook\/react\/issues\/20395)\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\n\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n```\r\nReact Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array.\r\n```\r\n\r\n## The expected behavior\r\n\r\nNo missing dependencies reported.\r\n","labels":["Type: Bug","Status: Unconfirmed","Component: ESLint Rules"],"created_at":"2022-08-27T04:07:01Z","comments":4,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/25149"},{"issue_number":166,"repository":"facebook\/react","title":"Bug: hydration mismatch in top component does not cause client-render fallback","description":"We render some markup on the server, but on the client (due to the bug in our app's code) we have a different state and we render nothing (instead of our markup).\r\n\r\nIn this case React should fallback to client render, so it is expected that the server-rendered markup is removed, but it's not. \r\n\r\nNotice, how the server-rendered placeholders are still visible though the `console.log` inside the component states that the visible state is false:\r\n<img width=\"1440\" alt=\"Screenshot 2022-08-03 at 15 19 51\" src=\"https:\/\/user-images.githubusercontent.com\/1089670\/182778644-d5ded261-86cc-4f55-8b6a-43d712e82335.png\">\r\n\r\nThe problem exists only if this branch happens to be at the very top of the components tree. React doesn't even see the mismatch.\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. render some markup on the server\r\n2. on client side render it as null\r\n\r\nLink to code example:\r\n\r\nhttps:\/\/stackblitz.com\/edit\/react-kpphvo?file=src\/App.js\r\n\r\n## The current behavior\r\n\r\nMismatch is ignored, client's render result is not applied\r\n\r\n## The expected behavior\r\n\r\nFallback to client's render result, mismatch warning is reported, server rendered markup is removed","labels":["Type: Bug","Status: Unconfirmed"],"created_at":"2022-08-04T06:35:26Z","comments":3,"reactions":5,"url":"https:\/\/github.com\/facebook\/react\/issues\/25038"},{"issue_number":167,"repository":"facebook\/react","title":"ReactDevTools extension doesn't work in private Firefox windows [DevTools Bug]: ","description":"### Website or app\r\n\r\nreactjs.org\r\n\r\n### Repro steps\r\n\r\n1. Install the ReactDev tools extension for Firefox ( I am running Firefox Dev edition Version 104.0b5 on Debian-Linux)\r\n2. Allow the extension to run in private WIndows by going to Add-ons and themes (Ctrl + Shift + A)\r\n3.  Visit any website running a  development or production of React in Firefox(I have tested Firefox dev Edition and FirefoxESR) \r\n4. Open Firefoxdevtools and visit the components tab added by the Reactdevtools extenstion\r\n5. I have tested a local dev build and a production build of React, and weirdly it works in non-private windows. But in Private windows, it doesn't see that the page uses React.\r\n6. Below is a screenshot of what I see on both websites\r\n7. ![reactdevtoolsbug](https:\/\/user-images.githubusercontent.com\/97474001\/182564648-ea35b0cf-0395-48b4-9c07-0220044d5422.png)\r\n\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-08-03T08:42:51Z","comments":3,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/25033"},{"issue_number":168,"repository":"facebook\/react","title":"[DevTools Bug] Children cannot be added or removed during a reorder operation.","description":"### Website or app\n\nhttps:\/\/github.com\/HamaydaGabsi\/Color-Project\n\n### Repro steps\n\n1. Select a palette\r\n2. Select to color to view shades\r\n3. Go back to the colors with the navigation arrow\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.25.0-336ac8ceb\n\n### Error message (automated)\n\nChildren cannot be added or removed during a reorder operation.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26848:41\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24626:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24795:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:54959:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Children cannot be added or removed during a reorder operation. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-07-29T12:33:34Z","comments":11,"reactions":6,"url":"https:\/\/github.com\/facebook\/react\/issues\/25007"},{"issue_number":169,"repository":"facebook\/react","title":"Bug: eslint-plugin-react-hooks false positive conditional call after foreach","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n```\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\"\r\n\r\n    \"eslint\": \"^8.18.0\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n```\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open https:\/\/stackblitz.com\/edit\/vitejs-vite-tpaumc?file=src%2FApp.tsx&terminal=dev\r\n2. Run `npx eslint src`\r\n3. Get the following error:\r\n\r\n```\r\nerror  React Hook \"React.useState\" is called in function \"App.View\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\"  react-hooks\/rules-of-hooks\r\n```\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/stackblitz.com\/edit\/vitejs-vite-tpaumc?file=src%2FApp.tsx&terminal=dev\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nGiven the following pattern:\r\n\r\n```tsx\r\nconst MyComponent = () => {\r\n  return <MyComponent.Ready \/>;\r\n}\r\n\r\nMyComponent.Ready = () => {\r\n  const [...] = useX();\r\n\r\n  return (...);\r\n}\r\n```\r\n\r\nI get the following error:\r\n\r\nerror  React Hook \"React.useState\" is called in function \"MyComponent.Ready\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\"  react-hooks\/rules-of-hooks\r\n\r\n\r\n## The expected behavior\r\n\r\nSince MyComponent.Ready is an actual component, I shouldn't get this error.\r\n","labels":["Type: Bug","Status: Unconfirmed","Component: ESLint Rules"],"created_at":"2022-06-26T11:54:31Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/24791"},{"issue_number":170,"repository":"facebook\/react","title":"Bug: `hidden` attribute does not accept string values","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: \r\n\r\n```\r\n \"react\": \"18.3.0-next-522f47345-20220614\",\r\n \"react-dom\": \"18.3.0-next-522f47345-20220614\",\r\n```  \r\n\r\n## Steps To Reproduce\r\n\r\n```jsx\r\n<span hidden=\"until-found\">Hello React<span>\r\n```\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\nhttps:\/\/codesandbox.io\/s\/headless-violet-ygn593\r\n\r\n## The current behavior\r\n\r\nReact will turn hidden into a boolean attribute and removes \"until-found\":\r\n\r\n![preview of the dom after react-dom rendered until-found](https:\/\/user-images.githubusercontent.com\/4113649\/174130287-c07a5d53-e31c-43b4-8925-84a1c3dbf18d.jpg)\r\n\r\n## The expected behavior\r\n\r\nReact does not strip \"until-found\" to allow using [hidden-until-found in Chrome 102+](https:\/\/developer.chrome.com\/articles\/hidden-until-found\/) for better SEO and accessibility.","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2022-06-16T17:25:12Z","comments":2,"reactions":34,"url":"https:\/\/github.com\/facebook\/react\/issues\/24740"},{"issue_number":171,"repository":"facebook\/react","title":"[DevTools Bug]: Open in editor does not work on Firefox","description":"### Website or app\r\n\r\nhttps:\/\/github.com\/lwkchan\/test-app\r\n\r\n### Repro steps\r\n\r\nThis happens for any local React App, but I've provided a small CRA in case any automation is done. \r\n\r\n1. Visit the locally run app on Firefox Browser. In my case, v101.0.1 (64-bit)\r\n2. Set up open in editor URL in settings, set up open in Editor URL. I used `\"vscode:\/\/file\/{path}\"`\r\n3. On the Components pane, select any element in the page\r\n4. Click on \"Open in Editor\" button\r\n\r\nActual result:\r\nNothing happens. The link does not open in my editor\r\n\r\nDesired result:\r\nThe link should open in my VSCode editor\r\n\r\nI think the reason why this is happening is because of a Firefox bug where `window.open` does not work in extensions. It is used in [InspectedElement.js](https:\/\/github.com\/facebook\/react\/blob\/a4ead704ba1df8718d4866a23ac25e78f8ea901a\/packages\/react-devtools-shared\/src\/devtools\/views\/Components\/InspectedElement.js#L228) to open the source url. According to https:\/\/bugzilla.mozilla.org\/show_bug.cgi?id=1282021, the extension should use `browser.windows.create` for Firefox\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2022-06-15T16:17:24Z","comments":10,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/24731"},{"issue_number":172,"repository":"facebook\/react","title":"[DevTools Bug] Commit tree already contains fiber \"15\". This is a bug in React DevTools.","description":"### Website or app\n\nhttps:\/\/github.com\/msanmaz\/prisma-exp or development link https:\/\/crud-prisma.vercel.app\/\n\n### Repro steps\n\nhttps:\/\/github.com\/msanmaz\/prisma-exp or development link https:\/\/crud-prisma.vercel.app\/\r\n\r\n-git clone above repo\r\n- npm run dev locally\r\n- go to http:\/\/localhost:3000\/signup\r\n- create dummy account with email and pass\r\n- login to the account\r\n- start profiler\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.24.6.0-2c8a1452b\n\n### Error message (automated)\n\nCommit tree already contains fiber \"15\". This is a bug in React DevTools.\n\n### Error call stack (automated)\n\n```text\nat updateTree (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:25307:19)\r\n    at getCommitTree (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:25240:20)\r\n    at ProfilingCache_ProfilingCache.getCommitTree (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:25768:11)\r\n    at CommitRankedAutoSizer (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:44121:33)\r\n    at ii (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:15307:7)\r\n    at yj (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:16179:7)\r\n    at wl (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:19178:86)\r\n    at vl (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:18728:11)\r\n    at ul (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:18720:23)\r\n    at jl (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:18704:5)\n```\n\n\n### Error component stack (automated)\n\n```text\nat CommitRankedAutoSizer (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:44104:34)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:36191:3)\r\n    at Profiler_Profiler (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:53818:34)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:37712:5)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:37884:3)\r\n    at PortaledContent (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:37914:5)\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:37884:3)\r\n    at TimelineContextController (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:43126:3)\r\n    at ProfilerContextController (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:42571:3)\r\n    at TreeContextController (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:30468:3)\r\n    at SettingsContextController (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:31094:3)\r\n    at ModalDialogContextController (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:38309:3)\r\n    at DevTools_DevTools (chrome-extension:\/\/dnjnjgbfilfphmojnmhliehogmojhclc\/build\/main.js:54320:3)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Commit tree already contains fiber . This is a bug in React DevTools. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-06-01T23:32:17Z","comments":8,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/24655"},{"issue_number":173,"repository":"facebook\/react","title":"Bug: Potential infinite loop with Suspense (and Error boundaries not triggered)","description":"React version: latest stable (and experimental)\r\n\r\n## Steps To Reproduce\r\n1. Checkout the following repo: https:\/\/github.com\/bvaughn\/react-suspense-error-boundary-bug\r\n2. Run `npm install && npm run dev`\r\n3. Load the browser and observe an infinite loop of components re-rendering (rather than the error boundary catching the error).\r\n\r\nI've added a lot of inline comments about things that are necessary to trigger this bug in this file:\r\nhttps:\/\/github.com\/bvaughn\/react-suspense-error-boundary-bug\/blob\/main\/pages\/index.js\r\n\r\nNote that I was unable to reproduce this bug with Code Sandbox or Create React App. It only reproduces when running with Next JS (and only in DEV mode). Maybe it has something to do with Next's custom error logging behavior? Unfortunately there's no way to disable this (see [vercel\/next.js\/discussions\/13387](https:\/\/github.com\/vercel\/next.js\/discussions\/13387)) so I'm not sure.","labels":["Type: Bug","Status: Unconfirmed"],"created_at":"2022-05-28T19:25:52Z","comments":4,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/24634"},{"issue_number":174,"repository":"facebook\/react","title":"[DevTools Bug] Cannot remove node \"276\" because no matching node was found in the Store.","description":"### Website or app\n\nhttps:\/\/github.com\/Fast-Pace-Transfer\/analytics-dashboard-ui\n\n### Repro steps\n\nI am trying save a randomly generated set of colors with matching countries as an object in the local storage\r\nfrom a context\r\nSo it doesn't change colors after a manual refresh\n\n### How often does this bug happen?\n\nOnly once\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.24.6-ca7a38ae4\n\n### Error message (automated)\n\nCannot remove node \"276\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26518:43\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24436:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24605:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:54547:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-05-24T10:54:44Z","comments":10,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/24608"},{"issue_number":175,"repository":"facebook\/react","title":"[DevTools Bug]: Overlapping flamecharts in Profiler","description":"### Website or app\n\nhttps:\/\/github.com\/reactjs\/reactjs.org\n\n### Repro steps\n\n1. Check out https:\/\/github.com\/reactjs\/reactjs.org\/commit\/9cee632619065ade1e84c0470900e3634661d0d2\r\n2. Open the beta website (https:\/\/github.com\/reactjs\/reactjs.org\/tree\/main\/beta), `yarn dev`\r\n3. Use Profiler -> \"refresh and profile\"\r\n\r\nSome (but not all) commits appear a bit borked.\r\n\r\n<img width=\"825\" alt=\"Screenshot 2022-05-23 at 19 41 25\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/169885681-95c41ea1-b5fd-4b19-a850-f90bc725f9ce.png\">\r\n\r\n\r\n<img width=\"795\" alt=\"Screenshot 2022-05-23 at 19 41 20\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/169885677-dcf922d9-70f6-40df-84bf-a940ac5c5c7e.png\">\r\n  \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2022-05-23T18:43:13Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/24600"},{"issue_number":176,"repository":"facebook\/react","title":"Bug: renderToPipeableStream and renderToStaticNodeStream render inconsistency","description":"the output html file include unexpected `<!-- --> ` in the `<title>` element when there are both variable and plain text together in `Html.js` react component.\r\nThe step is about `renderToPipeableStream` function, and in my project,  i notice similar inconsistent behavior in `renderToStaticNodeStream` as well.\r\n\r\n**altho following steps is using v18.0. v18.1 have same results**\r\n\r\nReact version: 18.1.0\r\n\r\n## Steps To Reproduce\r\n\r\nIf you find this steps too much, **I've already created a fork and attached link to the folk**, ***error is in html title element***\r\n\r\n1. go to [ssr example sandbox](https:\/\/codesandbox.io\/s\/kind-sammet-j56ro?file=\/server\/render.js:1054-1614), i got this link from here https:\/\/github.com\/reactwg\/react-18\/discussions\/22\r\n2. after entering codesandbox page, go to `src\/Html.js` file\r\n3. in line 17, replace `<title>{title}<\/title>` with `<title>{title} 321<\/title>`\r\n4. save the file. (you may automatically fork this project after saving)\r\n5. after rebuild, in the browser window on the right hand side, there are three buttons on the right side of url box. click `Open In New Window`\r\n6. check new Window title\r\n\r\nLink to code example:\r\n\r\nhttps:\/\/codesandbox.io\/s\/agitated-night-oowlsi?file=\/src\/Html.js\r\n\r\n## The current behavior\r\n\r\nthe page title and text in html <title> element are both `Hello<!-- --> 321<!-- -->`\r\n\r\n## The expected behavior\r\n\r\nthe page title and value in html <title> element are supposed to be `Hello 321`\r\n\r\n![Screen Shot 2022-05-21 at 11 03 26 PM](https:\/\/user-images.githubusercontent.com\/5487482\/169676832-7fba3617-de41-443b-af41-697fa4c067ee.png)\r\n\r\n","labels":["Type: Bug","Component: Server Rendering","React 18"],"created_at":"2022-05-22T03:31:38Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/24592"},{"issue_number":177,"repository":"facebook\/react","title":"Bug:  When hydrate <Suspense>, it shows loading forever.","description":"After calling `hydrateRoot`, the import() function was not called. It keeps showing loading.\r\n\r\nReact version: 18.1.0\r\n\r\nLink to code example: https:\/\/codesandbox.io\/embed\/gracious-lederberg-nomtf0\r\n(For mocking server side rendering, I write content in `public\/index.html`)\r\n\r\n## The current behavior\r\nAlways showing loading\r\n\r\n## The expected behavior\r\nThe component should be rendered after finishing loading.","labels":["Type: Bug","Status: Unconfirmed","Component: Server Rendering"],"created_at":"2022-05-15T03:32:07Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/24560"},{"issue_number":178,"repository":"facebook\/react","title":"Bug: `<select size value>` with `value` not matching any `option` results in first option being selected","description":"\r\n\r\nReact version: 18.1.0, 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. render `<select value=\"not-an-option\" size=\"2\"><option value=\"an-option\">one<\/option><\/select>`\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/codesandbox.io\/s\/react-18-select-value-with-value-not-matching-option-wopmt9?file=\/src\/index.js\r\n\r\n## The current behavior\r\n\r\nThe first option will be marked as selected\r\n\r\n## The expected behavior\r\n\r\nNo option should be selected\r\n\r\nhttps:\/\/github.com\/facebook\/react\/issues\/10691 was asking for a warning.","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2022-04-29T14:22:45Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/24469"},{"issue_number":179,"repository":"facebook\/react","title":"[DevTools Bug]: Error in event handler: Error: Attempting to use a disconnected port object","description":"### Website or app\r\n\r\nhttps:\/\/codesandbox.io\/s\/blissful-raman-2on7k2\r\n\r\n### Repro steps\r\n\r\n1. Create a react app \r\n```\r\nyarn create react-app test-react\r\ncd test-react\r\nyarn start\r\n```\r\n2. Create `.env.development` file in root.\r\n```\r\nHTTPS=true\r\nPORT=4100\r\nBROWSER=none\r\n```\r\n3. Visit https:\/\/localhost:4100\/ in Chrome v100.0.4896.127\r\n4. Open React Devtools by inspecting page, some times it shows `Components` tab but in large application it does not show the `Components` tab. If it shows the tab the error message is sent to dev tools every second.\r\n5. See error message in [chrome:\/\/extensions\/](chrome:\/\/extensions\/)\r\n6. This is not reproducible in Firefox v99.0.1.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n`4.24.3 (3\/30\/2022)`\r\n\r\n### Error message (automated)\r\n\r\n`Error in event handler: Error: Attempting to use a disconnected port object`\r\n\r\n### Error call stack (automated)\r\n`build\/background.js:139 (lOne)`\r\n\r\n```\r\n\/******\/ (function(modules) { \/\/ webpackBootstrap\r\n\/******\/ \t\/\/ The module cache\r\n\/******\/ \tvar installedModules = {};\r\n\/******\/\r\n\/******\/ \t\/\/ The require function\r\n\/******\/ \tfunction __webpack_require__(moduleId) {\r\n\/******\/\r\n\/******\/ \t\t\/\/ Check if module is in cache\r\n\/******\/ \t\tif(installedModules[moduleId]) {\r\n\/******\/ \t\t\treturn installedModules[moduleId].exports;\r\n\/******\/ \t\t}\r\n\/******\/ \t\t\/\/ Create a new module (and put it into the cache)\r\n\/******\/ \t\tvar module = installedModules[moduleId] = {\r\n\/******\/ \t\t\ti: moduleId,\r\n\/******\/ \t\t\tl: false,\r\n\/******\/ \t\t\texports: {}\r\n\/******\/ \t\t};\r\n\/******\/\r\n\/******\/ \t\t\/\/ Execute the module function\r\n\/******\/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n\/******\/\r\n\/******\/ \t\t\/\/ Flag the module as loaded\r\n\/******\/ \t\tmodule.l = true;\r\n\/******\/\r\n\/******\/ \t\t\/\/ Return the exports of the module\r\n\/******\/ \t\treturn module.exports;\r\n\/******\/ \t}\r\n\/******\/\r\n\/******\/\r\n\/******\/ \t\/\/ expose the modules object (__webpack_modules__)\r\n\/******\/ \t__webpack_require__.m = modules;\r\n\/******\/\r\n\/******\/ \t\/\/ expose the module cache\r\n\/******\/ \t__webpack_require__.c = installedModules;\r\n\/******\/\r\n\/******\/ \t\/\/ define getter function for harmony exports\r\n\/******\/ \t__webpack_require__.d = function(exports, name, getter) {\r\n\/******\/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n\/******\/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n\/******\/ \t\t}\r\n\/******\/ \t};\r\n\/******\/\r\n\/******\/ \t\/\/ define __esModule on exports\r\n\/******\/ \t__webpack_require__.r = function(exports) {\r\n\/******\/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n\/******\/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n\/******\/ \t\t}\r\n\/******\/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n\/******\/ \t};\r\n\/******\/\r\n\/******\/ \t\/\/ create a fake namespace object\r\n\/******\/ \t\/\/ mode & 1: value is a module id, require it\r\n\/******\/ \t\/\/ mode & 2: merge all properties of value into the ns\r\n\/******\/ \t\/\/ mode & 4: return value when already ns object\r\n\/******\/ \t\/\/ mode & 8|1: behave like require\r\n\/******\/ \t__webpack_require__.t = function(value, mode) {\r\n\/******\/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n\/******\/ \t\tif(mode & 8) return value;\r\n\/******\/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n\/******\/ \t\tvar ns = Object.create(null);\r\n\/******\/ \t\t__webpack_require__.r(ns);\r\n\/******\/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n\/******\/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n\/******\/ \t\treturn ns;\r\n\/******\/ \t};\r\n\/******\/\r\n\/******\/ \t\/\/ getDefaultExport function for compatibility with non-harmony modules\r\n\/******\/ \t__webpack_require__.n = function(module) {\r\n\/******\/ \t\tvar getter = module && module.__esModule ?\r\n\/******\/ \t\t\tfunction getDefault() { return module['default']; } :\r\n\/******\/ \t\t\tfunction getModuleExports() { return module; };\r\n\/******\/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n\/******\/ \t\treturn getter;\r\n\/******\/ \t};\r\n\/******\/\r\n\/******\/ \t\/\/ Object.prototype.hasOwnProperty.call\r\n\/******\/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n\/******\/\r\n\/******\/ \t\/\/ __webpack_public_path__\r\n\/******\/ \t__webpack_require__.p = \"\/build\/\";\r\n\/******\/\r\n\/******\/\r\n\/******\/ \t\/\/ Load entry module and return exports\r\n\/******\/ \treturn __webpack_require__(__webpack_require__.s = 115);\r\n\/******\/ })\r\n\/************************************************************************\/\r\n\/******\/ ({\r\n\r\n\/***\/ 115:\r\n\/***\/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\/* global chrome *\/\r\n\r\n\r\nconst ports = {};\r\nconst IS_FIREFOX = navigator.userAgent.indexOf('Firefox') >= 0;\r\nchrome.runtime.onConnect.addListener(function (port) {\r\n  let tab = null;\r\n  let name = null;\r\n\r\n  if (isNumeric(port.name)) {\r\n    tab = port.name;\r\n    name = 'devtools';\r\n    installContentScript(+port.name);\r\n  } else {\r\n    tab = port.sender.tab.id;\r\n    name = 'content-script';\r\n  }\r\n\r\n  if (!ports[tab]) {\r\n    ports[tab] = {\r\n      devtools: null,\r\n      'content-script': null\r\n    };\r\n  }\r\n\r\n  ports[tab][name] = port;\r\n\r\n  if (ports[tab].devtools && ports[tab]['content-script']) {\r\n    doublePipe(ports[tab].devtools, ports[tab]['content-script']);\r\n  }\r\n});\r\n\r\nfunction isNumeric(str) {\r\n  return +str + '' === str;\r\n}\r\n\r\nfunction installContentScript(tabId) {\r\n  chrome.tabs.executeScript(tabId, {\r\n    file: '\/build\/contentScript.js'\r\n  }, function () {});\r\n}\r\n\r\nfunction doublePipe(one, two) {\r\n  one.onMessage.addListener(lOne);\r\n\r\n  function lOne(message) {\r\n    two.postMessage(message);\r\n  }\r\n\r\n  two.onMessage.addListener(lTwo);\r\n\r\n  function lTwo(message) {\r\n    one.postMessage(message);\r\n  }\r\n\r\n  function shutdown() {\r\n    one.onMessage.removeListener(lOne);\r\n    two.onMessage.removeListener(lTwo);\r\n    one.disconnect();\r\n    two.disconnect();\r\n  }\r\n\r\n  one.onDisconnect.addListener(shutdown);\r\n  two.onDisconnect.addListener(shutdown);\r\n}\r\n\r\nfunction setIconAndPopup(reactBuildType, tabId) {\r\n  chrome.browserAction.setIcon({\r\n    tabId: tabId,\r\n    path: {\r\n      '16': 'icons\/16-' + reactBuildType + '.png',\r\n      '32': 'icons\/32-' + reactBuildType + '.png',\r\n      '48': 'icons\/48-' + reactBuildType + '.png',\r\n      '128': 'icons\/128-' + reactBuildType + '.png'\r\n    }\r\n  });\r\n  chrome.browserAction.setPopup({\r\n    tabId: tabId,\r\n    popup: 'popups\/' + reactBuildType + '.html'\r\n  });\r\n}\r\n\r\nfunction isRestrictedBrowserPage(url) {\r\n  return !url || new URL(url).protocol === 'chrome:';\r\n}\r\n\r\nfunction checkAndHandleRestrictedPageIfSo(tab) {\r\n  if (tab && isRestrictedBrowserPage(tab.url)) {\r\n    setIconAndPopup('restricted', tab.id);\r\n  }\r\n} \/\/ update popup page of any existing open tabs, if they are restricted browser pages.\r\n\/\/ we can't update for any other types (prod,dev,outdated etc)\r\n\/\/ as the content script needs to be injected at document_start itself for those kinds of detection\r\n\/\/ TODO: Show a different popup page(to reload current page probably) for old tabs, opened before the extension is installed\r\n\r\n\r\nif (!IS_FIREFOX) {\r\n  chrome.tabs.query({}, tabs => tabs.forEach(checkAndHandleRestrictedPageIfSo));\r\n  chrome.tabs.onCreated.addListener((tabId, changeInfo, tab) => checkAndHandleRestrictedPageIfSo(tab));\r\n} \/\/ Listen to URL changes on the active tab and update the DevTools icon.\r\n\r\n\r\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\r\n  if (IS_FIREFOX) {\r\n    \/\/ We don't properly detect protected URLs in Firefox at the moment.\r\n    \/\/ However we can reset the DevTools icon to its loading state when the URL changes.\r\n    \/\/ It will be updated to the correct icon by the onMessage callback below.\r\n    if (tab.active && changeInfo.status === 'loading') {\r\n      setIconAndPopup('disabled', tabId);\r\n    }\r\n  } else {\r\n    \/\/ Don't reset the icon to the loading state for Chrome or Edge.\r\n    \/\/ The onUpdated callback fires more frequently for these browsers,\r\n    \/\/ often after onMessage has been called.\r\n    checkAndHandleRestrictedPageIfSo(tab);\r\n  }\r\n});\r\nchrome.runtime.onMessage.addListener((request, sender) => {\r\n  var _request$payload, _ports$id;\r\n\r\n  const tab = sender.tab;\r\n\r\n  if (tab) {\r\n    const id = tab.id; \/\/ This is sent from the hook content script.\r\n    \/\/ It tells us a renderer has attached.\r\n\r\n    if (request.hasDetectedReact) {\r\n      \/\/ We use browserAction instead of pageAction because this lets us\r\n      \/\/ display a custom default popup when React is *not* detected.\r\n      \/\/ It is specified in the manifest.\r\n      setIconAndPopup(request.reactBuildType, id);\r\n    } else {\r\n      switch ((_request$payload = request.payload) === null || _request$payload === void 0 ? void 0 : _request$payload.type) {\r\n        case 'fetch-file-with-cache-complete':\r\n        case 'fetch-file-with-cache-error':\r\n          \/\/ Forward the result of fetch-in-page requests back to the extension.\r\n          const devtools = (_ports$id = ports[id]) === null || _ports$id === void 0 ? void 0 : _ports$id.devtools;\r\n\r\n          if (devtools) {\r\n            devtools.postMessage(request);\r\n          }\r\n\r\n          break;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n\/***\/ })\r\n\r\n\/******\/ });\r\n```\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-04-21T14:05:31Z","comments":33,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/24417"},{"issue_number":180,"repository":"facebook\/react","title":"Bug: Internal React error: Expected static flag was missing","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: V18.0.0\r\nReact router DOM: V5.2.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Going to profile page\r\n2. Warning: Internal React error: Expected static flag was missing. Please notify the React team.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n![Screenshot 2022-04-17 124859](https:\/\/user-images.githubusercontent.com\/51002164\/163707500-3ee1ca51-9695-4e2e-b3c4-3f5e8f7a98b3.png)\r\nDynamicFilter.js component\r\n![Screenshot 2022-04-17 125107](https:\/\/user-images.githubusercontent.com\/51002164\/163707576-b8536b98-3b47-4c7e-84f3-abfa9f93dddf.png)\r\n\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\n\r\n## The expected behavior\r\n","labels":["Type: Bug","Status: Unconfirmed"],"created_at":"2022-04-17T08:53:53Z","comments":23,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/24391"},{"issue_number":181,"repository":"facebook\/react","title":"Bug: Events in shadow dom get duplicated when bubbling","description":"Events dispatching from inside a shadow-root will be handled multiple times while bubbling up the virtual DOM tree. I suspect this is because of event retargeting when crossing the boundary of the shadow dom.\r\n\r\nReact version: 17.0+, including 18-rc2\r\n\r\n## Steps To Reproduce\r\n\r\nClick on the button in the code example below:\r\n\r\nhttps:\/\/codesandbox.io\/s\/react-shadow-dom-event-doubling-msgnj1\r\n\r\n## The current behavior\r\n\r\n`onDivClicked` is called twice per click on the button.\r\n\r\n## The expected behavior\r\n\r\n`onDivClicked` should only be called once per handled click.\r\n","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2022-03-21T02:39:00Z","comments":2,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/24136"},{"issue_number":182,"repository":"facebook\/react","title":"[DevTools Bug]: Out of Memory randomly on pages","description":"### Website or app\n\nhttps:\/\/bestellen-a.cito.nl\n\n### Repro steps\n\nGoto the site with the React DevTools extension installed.\r\n\r\nAfter installing this plugin pages I noticed that chrome started giving \"Out of Memory\" error pages while visiting pages with react. Not all of the times but some times. After uninstalling the plugin the error message didn't show up anymore. Am I the first to experience this?\r\n\r\nIs there anything I can supply to help figure out what is going wrong?\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Resolution: Needs More Information","Component: Developer Tools"],"created_at":"2022-03-09T16:54:32Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/24064"},{"issue_number":183,"repository":"facebook\/react","title":"Bug: TypeError elem.nodeName.toLowerCase is not a function","description":"React version: 17 +\r\n\r\n## Steps To Reproduce\r\n\r\n1.window.nodeName exists and does not have a toLowerCase method\r\n2.an error will be reported when the event is triggered, such as clicking on the page\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/18453647\/154606817-e28d1747-1c85-4ce3-b384-35c8e198cad0.png)\r\n\r\n[ChangeEventPlugin.js](https:\/\/github.com\/facebook\/react\/blob\/54f785bc51800556dead12aaedf9594b2f15e836\/packages\/react-dom\/src\/events\/plugins\/ChangeEventPlugin.js)\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/18453647\/154607065-e1d6e87b-6c5a-493a-9e3c-5a7836d14a57.png)\r\n\r\n","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2022-02-18T02:40:21Z","comments":9,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/23324"},{"issue_number":184,"repository":"facebook\/react","title":"Bug: pseudo styles don't work properly if React state does not change when clicking with right mouse button.","description":"I have a button that changes background in :hover and :active states. Clicking the button with left mouse button (LMB) works fine, styles change as they should. But, clicking with right mouse button (RMB) works fine only if underlying react state is actually changed (e.g. different from the previous state)\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n1. Open the code example provided below\r\n2. Click the \"Click Me\" button with LMB more than 2 times (DON'T move your mouse cursor while clicking)\r\n3. Click the \"Click Me\" button with RMB more than 2 times (DON'T move your mouse cursor while clicking)\r\n\r\nLink to code example: https:\/\/codesandbox.io\/s\/pensive-sunset-z1t69f\r\n\r\n## The current behavior\r\nNo mater how many times you click with LMB, the \"Click Me\" button consistently changes its background color to yellow when you hold LMB down, and changes it back to silver when you release LMB.\r\n\r\nThe second time RMB pressed down, the background color of the \"Click Me\" button remains yellow, even if you release RMB. That is, whenever you click it with RMB and the new react state is the same as the previous, the button style remains yellow even if you release RMB.\r\n## The expected behavior\r\nClicking the \"Click Me\" button with RMB should respect styles regardless of the underlying react state.","labels":["Type: Bug","Component: DOM"],"created_at":"2022-02-16T00:14:02Z","comments":11,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/23306"},{"issue_number":185,"repository":"facebook\/react","title":"Bug: autoFocus broken inside <dialog \/> ","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17 and 18.0.0-rc.0-next-27b569969-20220211\r\n\r\n## Steps To Reproduce\r\n\r\n1. render `<input \/><input autoFocus \/>` inside `<dialog \/>`\r\n2. execute the `showModal()` method of the dialog\r\n3. you will notice that react will not set focus to the correct input element\r\n\r\n![DialogAutoFocus](https:\/\/user-images.githubusercontent.com\/4113649\/154110039-dc6dbd63-f294-4089-aa25-420626088ef5.gif)\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\nhttps:\/\/codesandbox.io\/s\/dreamy-meninsky-460wbr?file=\/src\/App.tsx\r\n\r\n## The current behavior\r\n\r\nIn Chrome and Safari TP the element with `autofocus=\"true\"` will receive focus.  \r\nHowever the element with `autoFocus={true}` will not receive focus.\r\n\r\n## The expected behavior\r\n\r\nFrom the html-spec https:\/\/html.spec.whatwg.org\/multipage\/interaction.html#the-autofocus-attribute\r\n\r\n> The autofocus content attribute allows the author to indicate that an element is to be focused [...] as soon as the [dialog](https:\/\/html.spec.whatwg.org\/multipage\/interactive-elements.html#the-dialog-element) within which it finds itself is shown\r\n\r\n\r\nFrom https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Global_attributes\/autofocus\r\n\r\n> The autofocus [global attribute](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Global_attributes) is a Boolean attribute indicating that an element should be focused on page load, or when the [`<dialog>`](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/dialog) that it is part of is displayed\r\n\r\nTherefore `autoFocus={true}` should also set the focus similar to `autofocus=\"true\"` for elements inside `<dialog \/>`\r\n","labels":["Type: Bug"],"created_at":"2022-02-15T17:00:06Z","comments":15,"reactions":35,"url":"https:\/\/github.com\/facebook\/react\/issues\/23301"},{"issue_number":186,"repository":"facebook\/react","title":"Reset button on iOS time input does not return correct event value","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: React 17.0.2\r\nIOS version: 14+\r\n\r\n## Bug\r\nFor iOS(Safari and Chrom).\r\nThe reset button function does not work on the time input:\r\n\r\n If I change time to 00:31, reset directly, the time jumps back to 00:30, but the computer still shows 00:31.\r\nWhen pressing reset on a time input, the onChange event is not fired.\r\n\r\n![reset](https:\/\/user-images.githubusercontent.com\/83808682\/154050608-748e912a-c6c7-4cae-9d27-9a705762b6d2.PNG)\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps:\/\/stackblitz.com\/edit\/react-enuflz?file=src%2FApp.js\r\nPls try on iOS.\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n","labels":["Type: Bug"],"created_at":"2022-02-15T11:16:40Z","comments":9,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/23299"},{"issue_number":187,"repository":"facebook\/react","title":"Bug: eslint(react-hooks\/exhaustive-deps) When a property is accessed with and without optional chaining, exhaustive-deps' code suggestion will introduce an error","description":"## Steps To Reproduce\r\n\r\n[StackBlitz demo](https:\/\/stackblitz.com\/edit\/node-v1wayx?devtoolsheight=33&file=index.js)\r\n\r\nI've enabled `enableDangerousAutofixThisMayCauseInfiniteLoops` so you can run `npx eslint --fix index.js` and see the change that \r\nreact-hooks\/exhaustive-deps makes through the code suggestions API.\r\n\r\n## The current behavior\r\n\r\nWhen you accept react-hooks\/exhaustive-deps' code suggestions the following code:\r\n\r\n```js\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport function MyComponent() {\r\n  const [one] = useState(1);\r\n  const [foo] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    console.log(one);\r\n    if (foo?.bar) {\r\n      console.log(foo.bar);\r\n    }\r\n  }, [one]);\r\n\r\n  useEffect(() => {\r\n    console.log(one);\r\n    if (foo?.bar) {\r\n      console.log(foo.bar);\r\n    }\r\n  }, [foo?.bar]);\r\n\r\n  return null;\r\n}\r\n\r\n```\r\n\r\nWill be incorrectly fixed to the following.\r\n\r\n```js\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport function MyComponent() {\r\n  const [one] = useState(1);\r\n  const [foo] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    console.log(one);\r\n    if (foo?.bar) {\r\n      console.log(foo.bar);\r\n    }\r\n  }, [foo.bar, one]);\r\n\r\n  useEffect(() => {\r\n    console.log(one);\r\n    if (foo?.bar) {\r\n      console.log(foo.bar);\r\n    }\r\n  }, [foo.bar, one]);\r\n\r\n  return null;\r\n}\r\n```\r\n\r\n## The expected behavior\r\n\r\nreact-hooks\/exhaustive-deps should be recommending the following:\r\n\r\n```js\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport function MyComponent() {\r\n  const [one] = useState(1);\r\n  const [foo] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    console.log(one);\r\n    if (foo?.bar) {\r\n      console.log(foo.bar);\r\n    }\r\n  }, [foo?.bar, one]);\r\n\r\n  useEffect(() => {\r\n    console.log(one);\r\n    if (foo?.bar) {\r\n      console.log(foo.bar);\r\n    }\r\n  }, [foo?.bar, one]);\r\n\r\n  return null;\r\n}\r\n```\r\n\r\n## Additional details\r\n\r\nWhen you include both an optional chaining usage `foo?.bar` and a non-optional chaining usage `foo.bar` exhaustive-deps will use the version without the optional chaining for the deps array. i.e. It will recommend a deps array containing `foo.bar`, which because `foo` may be undefined and the deps array is outside will result in a silent runtime error in JS or a TypeScript error in TS.\r\n\r\nIf you only use `foo?.bar` it will recommend `foo?.bar`. So this may be an order of usage issue, i.e. preferring the last usage. I haven't checked. However that is a problem because the most common reason to access the same property with and without optional chaining is a case where you have an if condition which implicitly guarantees that the member you use optional chaining on is not nullish and can be accessed directly and thus do not need optional chaining within the if condition's body. And in that case the version without optional chaining will always be the latter usage.\r\n\r\nWhen you are already using `foo?.bar` will not try to autofix that. However this is made worse of an issue because if you are already using the correct version and you accept exhaustive-deps changes to fix a different issue (you added a new unrelated variable it needs to add) exhaustive-deps will override your `foo?.bar` dep and turn it into `foo.bar`.\r\n\r\nIf exhaustive-deps sees multiple versions of the same property access, it should recommend the version with the most optional chaining usage. Since anything less would create an error which would result in the optional chaining usage never even running.","labels":["Type: Bug","Status: Unconfirmed","Component: ESLint Rules"],"created_at":"2022-02-08T03:35:55Z","comments":1,"reactions":9,"url":"https:\/\/github.com\/facebook\/react\/issues\/23248"},{"issue_number":188,"repository":"facebook\/react","title":"[DevTools Bug]: Inconsistent enforcement of using hooks in callbacks","description":"### Website or app\n\nhttps:\/\/codesandbox.io\/s\/distracted-chihiro-u1mc2\n\n### Repro steps\n\nThe rules-for-hooks linter seems to be applying rules about using hooks in callbacks inconsistently.\r\n\r\nUsing a hook in this callback is okay\r\n`const useNamed = async () => useQuery();`\r\nAnd subsequently sending it as a prop is also okay\r\n`<Foo useData={useNamed} \/>`\r\n\r\nHowever, assigning the anonymous callback directly in the prop triggers the linter rule \"React hook cannot be called inside a callback\"\r\n`<Foo useData={async () => useQuery()} \/>`\r\n\r\nI'm having trouble understanding the difference. They appear to be equivalent code but with different results from the linter.\r\nIn which case is the linter correct?\r\n\r\nSandbox here: https:\/\/codesandbox.io\/s\/distracted-chihiro-u1mc2\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Component: ESLint Rules"],"created_at":"2022-02-03T03:56:20Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/23230"},{"issue_number":189,"repository":"facebook\/react","title":"[DevTools Bug] Cannot add node \"1\" because a node with that id is already in the Store.","description":"### Repro steps\r\n\r\n  \r\n  \"react\": \"17.0.2\",\r\n  \"react-native\": \"0.66.3\",\r\n  \"react-devtools\": \"^4.22.0\",\r\n  \"@react-navigation\/devtools\": \"^6.0.5\",\r\n  \"@react-navigation\/bottom-tabs\": \"^6.1.0\",\r\n  \"@react-navigation\/core\": \"^6.1.1\",\r\n  \"@react-navigation\/elements\": \"^1.3.0\",\r\n  \"@react-navigation\/native\": \"^6.0.7\",\r\n  \"@react-navigation\/native-stack\": \"^6.3.0\",\r\n  \"@react-navigation\/routers\": \"^6.1.0\",\r\n  \"@react-navigation\/stack\": \"^6.1.0\",\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\nreact-devtools-core\r\n\r\n### DevTools version (automated)\r\n\r\n4.14.0-d0ec283819\r\n\r\n### Error message (automated)\r\n\r\nCannot add node \"1\" because a node with that id is already in the Store.\r\n\r\n### Error call stack (automated)\r\n\r\n```text\r\nat \/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:48:140545\r\n    at c.emit (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:48:89515)\r\n    at \/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:48:90986\r\n    at \/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:48:347787\r\n    at Array.forEach (<anonymous>)\r\n    at S.Gc.e.onmessage (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:48:347771)\r\n    at S.n (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:40:3009)\r\n    at S.emit (events.js:315:20)\r\n    at e.exports.P (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:8:9318)\r\n    at e.exports.emit (events.js:315:20)\r\n    at e.exports.dataMessage (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:8:15409)\r\n    at e.exports.getData (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:8:14651)\r\n    at e.exports.startLoop (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:8:12066)\r\n    at e.exports._write (\/Applications\/React Native Debugger.app\/Contents\/Resources\/app.asar\/node_modules\/react-devtools-core\/dist\/standalone.js:8:11421)\r\n    at doWrite (_stream_writable.js:403:12)\r\n    at writeOrBuffer (_stream_writable.js:387:5)\r\n```\r\n\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n```text\r\nhttps:\/\/api.github.com\/search\/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\r\n```\r\n","labels":["Type: Bug","Resolution: Needs More Information","Component: Developer Tools"],"created_at":"2022-02-02T14:43:14Z","comments":32,"reactions":16,"url":"https:\/\/github.com\/facebook\/react\/issues\/23226"},{"issue_number":190,"repository":"facebook\/react","title":"[DevTools Bug] Cannot remove node \"612\" because no matching node was found in the Store.","description":"### Website or app\n\nproprietary\n\n### Repro steps\n\nOverall, testing and refactoring of a component containing a formik wrapped form which includes a fieldarray with yup schema.\r\nUsing VS Code to serve the  React js application.\r\n\r\nUnable to share the repo \/ website as it is proprietary.\r\n\r\nTask: Logged in to the app to see the form as the specific user role required to see the component, testing yup schema on formik elements touched property to do some custom error connections in the containing component with React Developer Tools open to the Components view with the console also open.  \r\n\r\nI was verifying the elements described in the schema file were getting 'touched' and was refining a select in yup schema js file.\r\n\r\nSwitched one element's schema property from yup.object() to yup.int() triggers the error.  This is a syntax error.  Should be yup.number().  But switching the two causes it all to crash.\r\n\r\n \"formik\": \"^2.2.6\",\r\n  \"prop-types\": \"^15.7.2\",\r\n  \"react\": \"^17.0.2\",\r\n  \"react-router-dom\": \"4.3.1\",\r\n  \"react-select\": \"^4.3.0\",\r\n  \"yup\": \"^0.26.10\"\r\n  \"yarn\": \"^1.13.0\",\r\n\r\n  \"babel-eslint\": \"^10.1.0\",\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.23.0-e28a0db22\n\n### Error message (automated)\n\nCannot remove node \"612\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:26349:43\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24415:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:24581:14\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:54033:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Resolution: Needs More Information","Component: Developer Tools"],"created_at":"2022-01-27T21:13:43Z","comments":26,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/23202"},{"issue_number":191,"repository":"facebook\/react","title":"[DevTools Bug]: Incorrect source location after hot reload & editing props","description":"### Website or app\n\nhttps:\/\/gist.github.com\/kiootic\/54986cd163b52cbbcd5d8283eb5ed06f\n\n### Repro steps\n\n1. Create a new react app using `create-react-app`\r\n2. Replace the code in `App.js` with `App.jsx` in the gist\r\n3. Start the app and inspect the 3 `p` elements using dev tool\r\n4. Should observe correct line numbers (`App.js:4`, `App.js:5`, `App.js:6`)\r\n5. In code editor, change the first `p` element to be multiline, like `App-update.jsx` in gist\r\n6. After hot reload, should observe updated line numbers (`App.js:4`, `App.js:7`, `App.js:8`)\r\n7. Using dev tool, change the first `p` element's `children` prop to be something else.\r\n8. Should observe incorrect line numbers (reverted to `App.js:4`, `App.js:5`, `App.js:6`)\r\n9. Repeat step 7 again, and should observe correct line numbers again.\r\n10. The line numbers are observed to be alternating between correct & incorrect state when repeating the edit step.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-01-17T16:15:21Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/23130"},{"issue_number":192,"repository":"facebook\/react","title":"[DevTools Bug]: Devtools script served over insecure connection causing issues with local https server.","description":"### Website or app\n\nhttps:\/\/github.com\/malewis5\/payment-sandbox\n\n### Repro steps\n\nHi React Team,\r\nI am trying to use the devtools to debug in Safari. I'm working with Apple Pay so I'm using ngrok to create a secure tunnel. When I visit the ngrok domain Safari throws a warning stating: \r\n```[blocked] The page at https:\/\/revcommerce.ngrok.io\/ was not allowed to run insecure content from http:\/\/192.168.132.58:8097\/.```\r\n\r\nRepro steps: \r\n1. Clone and install dependencies.\r\n2. Run using ngrok or other method for https.\r\n3. Visit the page using **Safari**.\r\n4. Inspect the page and you'll see the warning.\r\n\r\nThank you guys.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2022-01-12T17:44:05Z","comments":5,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/23100"},{"issue_number":193,"repository":"facebook\/react","title":"[DevTools Bug]: React Dev Tools fails to render props and state of component.","description":"### Website or app\n\nhttps:\/\/elisavidera.com\/\n\n### Repro steps\n\n1. Goto https:\/\/elisavidera.com\/\r\n2. Start inspecting component\r\n3. Issue happens on some components not all [https:\/\/static.elisa.com\/v2\/image\/2tqybbhjs47b\/3OvazhdGhnIeotXQqSB9ZK\/Screenshot from 2021-12-31 13-28-10.png?w=800](url)\r\n4. Also in browser console this gets reported\r\n5. react_devtools_backend.js:12847 Uncaught DOMException: Blocked a frame with origin \"https:\/\/elisavidera.com\" from accessing a cross-origin frame.\r\n    at exports.isElement (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:12847:51)\r\n    at getDataType (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:1051:65)\r\n    at dehydrate (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:3487:82)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:3639:26\r\n    at Set.forEach (<anonymous>)\r\n    at dehydrate (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:3637:91)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:3639:26\r\n    at Set.forEach (<anonymous>)\r\n    at dehydrate (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:3637:91)\r\n    at cleanForBridge (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/react_devtools_backend.js:1506:93)\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2021-12-31T11:30:47Z","comments":0,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/23052"},{"issue_number":194,"repository":"facebook\/react","title":"Bug: Rendering content inside an iFrame using createPortal with Firefox is blank","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\nI'm trying to render JSX content inside an iFrame using createPortal. It works fine in Edge, Chrome, but in Firefox the iframe body stays empty. \r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Render an iframe\r\n2. Use createPortal inside the iframe with an element i.e <p>test<\/p>\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/n6lyi.csb.app\/\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\nIn Firefox, the iframe content shows for like 300ms, then goes blank.\r\n\r\n## The expected behavior\r\nIt should show content we passed using createPortal.","labels":["Type: Bug","Status: Unconfirmed"],"created_at":"2021-11-30T14:06:08Z","comments":5,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/22847"},{"issue_number":195,"repository":"facebook\/react","title":"[DevTools Bug]: They make Firefox's debugger unusable (can't continue or step over)","description":"### Website or app\r\n\r\nhttps:\/\/jsfiddle.net\/xyuri\/ejp1of89\/\r\n\r\n### Repro steps\r\n\r\nIt's really easier to reproduce by opening a simple page in Firefox (93 in my case):\r\n\r\n```html\r\n<!doctype html>\r\n<html>\r\n<body>\r\n<script>\r\n    console.log(1);\r\n    debugger\r\n    console.log(1);\r\n    debugger\r\n    console.log(1);\r\n<\/script>\r\n<\/body>\r\n<\/html>\r\n```\r\n\r\nBecause in a sandbox, Firefox behaves even more... erratically?\r\n\r\nThe steps:\r\n\r\n1. Open the page. Open the Firefox's dev tools. Refresh. It stops on the first `debugger` statement.\r\n2. Press F8 (continue) or F10 (step over). And now there are signs that the debugging session ended (no current line, Continue button changes into Pause button), and that it goes on (Stop loading this page button doesn't change into Reload current page button, the loading page spinner is, well, spinning). All in all, the debugger doesn't respond to keys or button presses. To give you a glimpse of what it looks like:\r\n\r\n![](https:\/\/i.imgur.com\/A9CHFQ3.png)\r\n\r\nSometimes it helps to step into and out of the debugger statement (instead of F8\/F10). After that it works. But not always.\r\n\r\nWhen I disable the extension, it works without any tricks. Took me a while to figure out.\r\n\r\nI tried disabling everything but React Dev Tools and restarting Firefox. No difference.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2021-11-25T06:10:38Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/22828"},{"issue_number":196,"repository":"facebook\/react","title":"Timeline: Nested update warning logic flaw","description":"Timeline shows the following nested update warning when a synchronous update causes an event handler to run long:\r\n> A big nested update was scheduled during layout. Nested updates require React to re-render synchronously before the browser can paint. Consider delaying this update by moving it to a passive effect (useEffect).\r\n\r\nThis warning was intended to encourage developers to move _heavy_ updates from layout effects into passive effects so that they did not block paint or stretch event handlers.\r\n\r\nUnfortunately this warning currently does not handle a few cases well:\r\n1. Passive effects might be flushed synchronously (along with their updates) if a layout effect schedules a synchronous update.\r\n2. ~~Click events now always flush passive effects synchronously~~ (see https:\/\/github.com\/facebook\/react\/issues\/20074#issuecomment-811296789).\r\n\r\nThis means that the current warning may be confusing or misleading. We should either update it to ensure that it never fires for updates that were _already_ scheduled inside of a passive effect, or if that is not possible we should remove it entirely.","labels":["Type: Bug","Component: Developer Tools","Component: Scheduling Profiler"],"created_at":"2021-11-09T20:45:50Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/22731"},{"issue_number":197,"repository":"facebook\/react","title":"[DevTools Bug]: Chrome extension's settings reset after every reload","description":"### Website or app\n\nChrome 95.0.4638.69 (Official Build) (64-bit), DevTools version 4.21.0-2f8f60ca8\n\n### Repro steps\n\n1. Open Chrome dev tools\r\n2. Switch to Components or Profiler tab \r\n3. Select settings and change for example \"Highlight updates when components render.\"\r\n4. Reload window\r\n5. Get back to settings - checbox is not checked.\r\n\r\nExpected behavior is to preserve settings forever (local storage?) or at least between reloads.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Resolution: Needs More Information","Component: Developer Tools"],"created_at":"2021-11-09T06:08:26Z","comments":17,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/22727"},{"issue_number":198,"repository":"facebook\/react","title":"Bug: Parent <details> onToggle handler called when child <details> onToggle handler is triggered","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Declare a `<details>` element nested inside another `<details>` element.\r\n2. Add a handler for the `onToggle` event for each `<details>` element.\r\n3. Toggle the nested `<details>` element.\r\n4. Observe that its handler and its parent's handler are both called.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/codepen.io\/jordanbtucker\/pen\/oNedvvE?editors=0010\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\nThe `onToggle` event for child `<details>` elements triggers handlers for parent `<details>` elements. This behavior does not occur in normal DOM environments.\r\n\r\n## The expected behavior\r\nThe `onToggle` event should only trigger its own handler.","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2021-11-07T19:48:36Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/22718"},{"issue_number":199,"repository":"facebook\/react","title":"[DevTools Bug]: Components without own dimensions not highlighted at all","description":"### Website or app\n\nhttps:\/\/codesandbox.io\/s\/trusting-night-35uuz?file=\/src\/App.js\n\n### Repro steps\n\nCreate a fixed element with an absolute child like this: \r\n```js\r\n  return (\r\n    <div style={{ position: \"fixed\", left: point.x, top: point.y }}>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          color: \"blue\"\r\n        }}\r\n      >\r\n        Popover\r\n      <\/div>\r\n    <\/div>\r\n  );\r\n```\r\nOn top of that implement `rAF` loop updating the `point`. In such a scenario the root `div` gets constantly rerendered but no highlight is drawn on the canvas. Or rather - it is drawn ([here](https:\/\/github.com\/facebook\/react\/blob\/54f6ae9b1c0489784f6a95bbe26ffec31816d74a\/packages\/react-devtools-shared\/src\/backend\/views\/TraceUpdates\/canvas.js#L49)), but its dimensions are 0x0 so nothing gets highlighted from the user perspective.\r\n\r\nIf you believe this is an issue I would gladly work on a fix. I'm unsure what would be the proper fix here. My ideas are those:\r\n1. either introduce more heuristics for measuring nodes in [this function](https:\/\/github.com\/facebook\/react\/blob\/cae635054e17a6f107a39d328649137b83f25972\/packages\/react-devtools-shared\/src\/backend\/views\/TraceUpdates\/index.js#L135-L143)\r\n2. or always draw at least 2px x 2px highlight\r\n\r\ncc @bvaughn \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2021-11-05T11:16:58Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/22703"},{"issue_number":200,"repository":"facebook\/react","title":"Bug: Failed to execute 'insertBefore' on 'Node' And Failed to execute 'removeChild' on 'Node' with Chrome translate","description":"```js\r\n  const [oneShow, setOneShow] = useState(false);\r\n  const [twoShow, setTwoShow] = useState(true);\r\n  \r\n  return (\r\n    <div>\r\n      <h1>\u63d2\u5165\u8282\u70b9\u9519\u8bef<\/h1>\r\n      <div>\r\n        <span>\uff08{oneShow && '\u63d2\u5165\u8282\u70b9' }\uff09<\/span>\r\n      <\/div>\r\n      <button onClick={() => {\r\n        setOneShow(true)\r\n      }}>\u89e6\u53d1\r\n      <\/button>\r\n\r\n      <h1>\u5220\u9664\u8282\u70b9\u9519\u8bef<\/h1>\r\n      <div>\r\n        <span>\uff08{twoShow && '\u5220\u9664\u8282\u70b9' }\uff09<\/span>\r\n      <\/div>\r\n      <button onClick={() => {\r\n        setTwoShow(false)\r\n      }}>\u89e6\u53d1\r\n      <\/button>\r\n\r\n    <\/div>\r\n  );\r\n```\r\n\u8fd9\u4ee3\u7801\u5728\u8fdb\u884c\u8c37\u6b4c\u7ffb\u8bd1\u540e(\u8bf7\u9009\u62e9\u7ffb\u8bd1\u6210\u975e\u4e2d\u6587)\u5206\u522b\u4f1a\u89e6\u53d1\u63d2\u5165\u5220\u9664\u8282\u70b9\u7684\u9519\u8bef\u3002\r\n\r\n---\r\n\r\nEdited by @bvaughn to add [translation](https:\/\/translate.google.com\/?sl=zh-CN&tl=en&text=%E8%BF%99%E4%BB%A3%E7%A0%81%E5%9C%A8%E8%BF%9B%E8%A1%8C%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91%E5%90%8E(%E8%AF%B7%E9%80%89%E6%8B%A9%E7%BF%BB%E8%AF%91%E6%88%90%E9%9D%9E%E4%B8%AD%E6%96%87)%E5%88%86%E5%88%AB%E4%BC%9A%E8%A7%A6%E5%8F%91%E6%8F%92%E5%85%A5%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9%E7%9A%84%E9%94%99%E8%AF%AF%E3%80%82&op=translate):\r\n> This code will trigger the error of inserting and deleting nodes after Google translation (please choose to translate into non-Chinese).","labels":["Type: Bug","Resolution: Duplicate","Status: Unconfirmed"],"created_at":"2021-11-05T07:42:28Z","comments":3,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/22702"},{"issue_number":201,"repository":"facebook\/react","title":"Bug: \"The above error\u2026\" should appear after the error message but appears before (for some errors)","description":"React version: both latest (17.0.2) and next (18.0.0-alpha-9c8161ba8-20211028)\r\n\r\n## Steps To Reproduce\r\n\r\n1. Render `<input>hello<\/input>` to trigger the \"input is a void element tag\" error\r\n\r\nLink to code example: https:\/\/codesandbox.io\/s\/cocky-matan-ydmys\r\n\r\n## The current behavior\r\n\r\nTwo log lines appear:\r\n1. \"The above error occurred in the \\<input> component\"\r\n2. \"input is a void element tag\"\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/6820\/139519976-0f3d55c3-638f-40b0-b09d-0df3ffdfa305.png)\r\n\r\n## The expected behavior\r\n\r\nThey should be in the other order:\r\n\r\n1. \"input is a void element tag\"\r\n2. \"The above error occurred in the \\<input> component\"\r\n\r\nThis problem doesn't occur in the same way if a component throws an error. Presumably this goes through a different error handling path because it comes from the host config.\r\n\r\nIf someone works on this, you may also want to review look at this issue at the same time:\r\n\r\n* #18101","labels":["Type: Bug","Size: Medium"],"created_at":"2021-10-30T04:24:28Z","comments":18,"reactions":8,"url":"https:\/\/github.com\/facebook\/react\/issues\/22656"},{"issue_number":202,"repository":"facebook\/react","title":"React 18 - Internal React error if throwing on hook cleanup function.","description":"Running the following test:\r\n\r\n```javascript\r\nimport React, { useEffect } from \"react\";\r\nimport { create } from \"react-test-renderer\";\r\n\r\nconst Boom = () => {\r\n    useEffect(() => {\r\n        return () => {\r\n            throw new Error(\"Boom\");\r\n        };\r\n    }, []);\r\n\r\n    return null;\r\n};\r\n\r\nit(\"prints an error to the console on next is fine on latest\", () => {\r\n    const res = create(<Boom \/>);\r\n    res.unmount();    \r\n});\r\n```\r\n\r\nI'll get the following error message: \r\n```\r\n console.error\r\n    Warning: Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\r\n```\r\n\r\nThe test will pass but considering the nature of the message and that it differs from latest I thought reporting it might be a good idea.  Repo if you need it https:\/\/github.com\/andrew-w-ross\/react-18-unmount-error\r\n","labels":["Type: Bug","Component: Test Renderer"],"created_at":"2021-10-28T23:37:02Z","comments":8,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/22650"},{"issue_number":203,"repository":"facebook\/react","title":"DevTools can't load Components tree in Components Tab","description":"## Summary\r\n\r\nThere's a mix of several different issues that result in the Components tree not being able to load, which happens inconsistently. \r\n\r\nIn some cases, after trying out a different build of DevTools with a potential fix, the issue seems to fully resolve itself, even after going back to using the \"bad\" build where the issue originally occurred. However, that doesn't mean the issue is fixed by that build, since other reports keep occurring.\r\n\r\nThis issue is a master task tracking all of the issues we've seen so far from user reports:\r\n\r\n- `Cannot add node \"x\" because a node with that id is already in the store`, reported in #21636 before we shipped v4.20.0.\r\n- `No location name for view with id <id_of_components _tab>`, reported in the console inspecting DevTools itself.\r\n![image](https:\/\/user-images.githubusercontent.com\/1271509\/139111165-e5717518-f1fa-4579-80a9-5f8a0b80bf90.png)\r\n- `Invalid renderer id \"1\"`, logged in the console of the main page\r\n![image](https:\/\/user-images.githubusercontent.com\/1271509\/139113532-ceff5ac1-ab50-42ef-a432-153ea63733fa.png)\r\n- `Unable to find React on the page.`, which suggests that the extension failed to load entirely as that's just placeholder text from before the extension panels are created with Chrome.\r\n![image](https:\/\/user-images.githubusercontent.com\/1271509\/139111465-21759a3c-6455-49df-acfc-e7c56e430cb5.png)\r\n- `Uncaught error: Extension Context Invalidated`, reported in #22577.\r\nhttps:\/\/user-images.githubusercontent.com\/7581546\/137986963-f55b9fc2-745d-4aeb-8b8b-49645197c163.png\r\n- Navigating to a new tab doesn't load Components tree (even after v4.21.0 w duplicate extension logic reverted). See https:\/\/github.com\/facebook\/react\/issues\/22663 for details\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/1271509\/139601873-7e923b1d-6831-4994-ac17-d94ba58cf409.png)\r\n\r\n- No error being shown at all, as also reported in #22577.\r\n\r\n\r\n---------\r\n\r\n## Root Cause and Fixes\r\n\r\n- The suspected root cause is the changes shipped in v4.20.0 for detecting duplicate installations of DevTools. \r\n- A fix was attempted with v.4.20.2, based on reports from users in #22636 confirming that our changes in #22597 fixed the issue\r\n- The logic is now being fully reverted in https:\/\/github.com\/facebook\/react\/pull\/22638\r\n","labels":["Type: Bug","Type: Discussion","Component: Developer Tools"],"created_at":"2021-10-27T16:49:04Z","comments":10,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/22636"},{"issue_number":204,"repository":"facebook\/react","title":"devtools: \"What caused this update?\" when a lazy component resolves","description":"React version: 18.2.0\r\nDevtools version: 4.23.0-e28a0db22\r\n\r\nSince https:\/\/github.com\/facebook\/react\/pull\/21171 React Devtools shows which fiber scheduled an update.\r\n\r\nIn the case of \r\n\r\n```tsx\r\nroot.render(\r\n  <React.Suspense>\r\n    <LazyComponent \/>\r\n  <\/React.Suspense>\r\n);\r\n```\r\nwhere `LazyComponent` is some `React.lazy(() => {})` component we usually create two commits:\r\n1. initial render where `LazyComponent` suspends\r\n2. `LazyComponents` resolves\r\n\r\nIn legacy roots for the revealing commit Devtools displays the hostroot as the updater: https:\/\/github.com\/facebook\/react\/pull\/22602\/files#diff-3582df0bd6a071e1986363b080d3012a9c492b8be7dd4e67f39d72078422d316R1368-R1376.\r\nFor new roots we get \"unknown\" for the second commit (i.e. no updates): https:\/\/github.com\/facebook\/react\/pull\/22602\/files#diff-3582df0bd6a071e1986363b080d3012a9c492b8be7dd4e67f39d72078422d316R1267.\r\nCodesandbox for full repro: https:\/\/codesandbox.io\/p\/sandbox\/18-2-updaters-when-lazy-component-resolves-ff5x6h\r\n\r\nI would've expected that for both roots we get the nearest Suspense boundary that can commit after `LazyComponent` resolved. Or at least the fiber that \"unsuspended\" (not sure if this is the right terminology). The corresponding hostroot wouldn't help me much but I'm not that concerned with legacy roots in this instance.\r\n\r\nRight now the information isn't all that helpful. I noticed this especially for a larger apps with multiple suspense boundaries and partial hydration. \r\n\r\nI profiled the same codesandbox in the scheduling profiler but also couldn't extract any useful information with regards to why the second commit happened.","labels":["Type: Bug","Component: Developer Tools","React Core Team"],"created_at":"2021-10-20T17:56:50Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/22603"},{"issue_number":205,"repository":"facebook\/react","title":"[DevTools Bug]: Hook names fail to parse if source file for Component is an html file","description":"When testing our fixture in Safari (`.\/fixtures\/devtools\/standalone\/index.html`) with the standalone build if DevTools, I noticed that we were unable to parse hook names because the source file where the components are defined isn't a JavaScript file, and instead an HTML file (as in `index.html`), which contains HTML code, and some JS inside script tags, so the babel parser fails to parse the file.\r\n\r\nSpecifically:\r\n\r\n```javascript\r\n\/\/ parseSourceAndMetadata.js\r\n\r\nconst originalSourceAST = withSyncPerfMeasurements(\r\n  '[@babel\/parser] parse(originalSourceCode)',\r\n  () =>\r\n    parse(originalSourceCode, {\r\n      sourceType: 'unambiguous',\r\n      plugins: ['jsx', plugin],\r\n    }),\r\n);\r\n```\r\nIn the above code, the call to `parse` fails because `originalSourceCode` is actually html (with JS inside) like:\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" \/>\r\n    <title>TODO List<\/title>\r\n\r\n    <!-- ... -->\r\n\r\n  <body>\r\n    <div id=\"root\"><\/div>\r\n    <script type=\"text\/javascript\">\r\n      const { useState } = React;\r\n\r\n      function App() {\r\n        const [count, setCount] = useState(0);\r\n        return null;\r\n      }\r\n\r\n      ReactDOM.render(React.createElement(App), document.getElementById(\"root\"));\r\n    <\/script>\r\n  <\/body>\r\n```\r\n\r\nAnd `parse` expects actual JS code.\r\n\r\nDevTools should handle the case when source files aren't JS files, and still be able to extract out the hook names, or fail more gracefully. As of #22320, we log to the console a slightly better error message when this happens, as opposed to an obscure parsing error.\r\n\r\n### Repro steps\r\n\r\n1. Run standalone app\r\n2. Open fixtures file in safari: .\/fixtures\/devtools\/standalone\/index.html\r\n3. Try getting hook names, observe that parsing source files fails","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2021-09-14T21:35:28Z","comments":6,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/22319"},{"issue_number":206,"repository":"facebook\/react","title":"Bug: Rules of Hooks should not allow passing a Hook as a function argument","description":"See failing test in https:\/\/github.com\/facebook\/react\/pull\/22044.\r\n\r\nEven if the PR gets stale, we should implement this check because currently it lets you circumvent the rule.","labels":["Type: Bug","Component: ESLint Rules","Resolution: Backlog"],"created_at":"2021-09-06T19:30:25Z","comments":8,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/22254"},{"issue_number":207,"repository":"facebook\/react","title":"Bug: Nested ReactDOMServer.renderToString calls cause React hooks to throw invalid hook exception","description":"When you make a nested ReactDOMServer.renderToString call (i.e. call ReactDOMServer.renderToString from within a component rendered using ReactDOMServer.renderToString), you can not use any hooks after the second call. Custom hooks work, but React hooks throw a invalid hook call error.\r\nNot sure if this is an acceptable use case for ReactDOMServer, this is how a current project is setup, I am just making some additional hook calls and encountered this error. I have replicated the issue on a fresh React app with nothing else.\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Createa a component, ComponentA\r\n2. In ComponentA make a call to ReactDOMServer.renderToString, and then use a React hook (useState, useContext etc.)\r\n3. In the main app render ComponentA via ReactDOMServer.renderToString (ReactDOMServer.renderToString(<ComponentA \/>)\r\n\r\nLink to code example: https:\/\/codesandbox.io\/s\/sweet-kate-etr68\r\n## The current behavior\r\nThrows an invalid hook call exception\r\n\r\n## The expected behavior\r\nWork as usual, hooks working as normal.","labels":["Type: Bug","Component: Server Rendering","Type: Needs Investigation"],"created_at":"2021-08-30T17:24:22Z","comments":12,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/22214"},{"issue_number":208,"repository":"facebook\/react","title":"[DevTools Bug]: React Profiler: Flamegraph section overflows and not resizable","description":"### Website or app\n\nhttps:\/\/stackoverflow.com\/help\/minimal-reproducible-example\n\n### Repro steps\n\nnote: the URL I linked is not relevant and only meant to make the bug report submit pass, previously closed [here](https:\/\/github.com\/facebook\/react\/issues\/22137) since I couldn't find any production site with a *development* build, so I don't think it makes sense to outright fail bug reports for react profiler related issue. \r\n\r\nactual bug report:\r\nI have a page that has lots of component so the component tree is pretty long, when I profile on it, the flamechart just overflows by default and I have to put it fullscreen to see the \"why did this render\" side bar\r\n![image](https:\/\/user-images.githubusercontent.com\/2238944\/130124388-4dc40efd-b8a0-4a03-aacf-3d8bc6d64990.png)\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Resolution: Needs More Information","Component: Developer Tools"],"created_at":"2021-08-19T18:34:00Z","comments":6,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/22138"},{"issue_number":209,"repository":"facebook\/react","title":"[DevTools Bug]: Cannot hover\/click elements after scrolling","description":"### Website or app\n\nhttps:\/\/9tdhf.csb.app\/\n\n### Repro steps\n\n1. disable any component filter\r\n2. scroll component tree\r\n3. hover any element\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/12292047\/129872819-0e3c06aa-fc24-4c15-84c7-73940eb136b3.mp4\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n1d2528097\n\n### DevTools version (automated)\n\n4.16.0\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2021-08-18T09:21:06Z","comments":15,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/22122"},{"issue_number":210,"repository":"facebook\/react","title":"[DevTools Bug]: React Devtools on Firefox initially shows an empty (blank) component tree","description":"### Website or app\n\nhttps:\/\/reactjs.org\/\n\n### Repro steps\n\n1. Go to any site built with React.js \r\n2. Open the React Devtools from the firefox developer tools window.\r\n3. There will be an empty component when **Components** tab is selected\r\n4. Now refresh the page to see the component tree getting populated inside the **Components** tab.\r\n\r\nWindows Version - Windows 10 21H1\r\nFirefox Version - v90.0.2 (64-bit)\r\n\r\nAttaching a GIF of the issue while visiting reactjs.org - \r\n![O7VSagSc5l](https:\/\/user-images.githubusercontent.com\/32711472\/128354658-47665f4e-9fc4-479b-b16b-08c92c277376.gif)\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2021-08-05T13:05:15Z","comments":13,"reactions":11,"url":"https:\/\/github.com\/facebook\/react\/issues\/22034"},{"issue_number":211,"repository":"facebook\/react","title":"Bug: radio and checkbox controlled checked property is not updated when browser restores form state","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Add a textbox, two radio buttons (or checkboxes) controlling the `checked` property with state, and a `button[type=submit]`.\r\n2. Check off the second item (\"Bananas\").\r\n3. Enter text into the \"Your name\" textbox.\r\n4. Right click on the tab and duplicate it. Alternative: close + re-open the tab, or navigate away to a different page and go back.\r\n\r\n```javascript\r\nfunction App() {\r\n  const [fruit, updateFruit] = useState(\"apple\");\r\n  const [name, updateName] = useState(\"\");\r\n\r\n  function onFruitChange(e) {\r\n    const newFruit = e.target.value;\r\n    updateFruit(newFruit);\r\n  }\r\n\r\n  function onNameChange(e) {\r\n    const newName = e.target.value;\r\n    updateName(newName);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input type=\"radio\" name=\"fruit\" value=\"apple\" checked={fruit === \"apple\"} onChange={onFruitChange} \/>\r\n        Apples\r\n      <\/label>\r\n      <label>\r\n        <input type=\"radio\" name=\"fruit\" value=\"banana\" checked={fruit === \"banana\"} onChange={onFruitChange} \/>\r\n        Bananas\r\n      <\/label>\r\n      <div>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Your name\" value={name} onChange={onNameChange} \/>\r\n      <\/div>\r\n      <div>\r\n        Preferred fruit:\r\n        {fruit === \"apple\" ? \"Apples\" : \"Bananas\"}\r\n      <\/div>\r\n      <br \/>\r\n      <div>Your name: {name}<\/div>\r\n      <hr \/>\r\n      <br \/>\r\n      <div>\r\n        <button type=\"submit\">Save<\/button>\r\n      <\/div>\r\n    <\/div>\r\n  );\r\n}\r\n```\r\n\r\nhttps:\/\/user-images.githubusercontent.com\/613788\/124511769-e9187000-dda4-11eb-99f9-e1334d4057c3.mp4\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\nhttps:\/\/codesandbox.io\/s\/hungry-glitter-ut79s\r\n\r\n**IMPORTANT**: This CodeSandbox won't work because the browser will be too early when restoring the form state (transpiling is too slow). I suggest taking this script to a local server to confirm that the browser was able to properly restore form state when loading the page.\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThe `banana` radio is checked and `Preferred fruit: Apples` is shown. The react state has `fruit === 'apple'` but the browser has the opposite state.\r\n\r\nI've confirmed that this behavior happens with `input[type=checkbox]` too.\r\n\r\n## The expected behavior\r\n\r\nTo match the behavior of other controlled inputs like the textbox, `apple` radio should be checked and `Preferred fruit: Apples` should be shown. The input `checked` property isn't being synced. \r\n\r\n## Related issues\r\n\r\n- https:\/\/github.com\/facebook\/react\/issues\/10657\r\n  - I'm not using SSR though.\r\n- https:\/\/github.com\/facebook\/react\/issues\/18502\r\n  - Maybe related, but I'm not using `defaultChecked`.\r\n- https:\/\/github.com\/vercel\/next.js\/issues\/6128\r\n  - Similar issues.","labels":["Type: Bug","Component: DOM"],"created_at":"2021-07-05T19:25:33Z","comments":11,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/21801"},{"issue_number":212,"repository":"facebook\/react","title":"Bug: Picture elements fail to update to appropriate source image on window resize in Safari","description":"Using Safari 14.0.3 on macOS Big Sur 11.2.2, `<picture>` elements rendered using React fail to update to the correct image source when the window is resized.\r\n\r\nIf fixing this bug would be considered a good first ticket and some guidance is provided, I'd be happy to fix it.\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Resize window across picture's breakpoint (768px)\r\n\r\nLink to code example: [https:\/\/codesandbox.io\/s\/dazzling-nobel-bh3gh](https:\/\/codesandbox.io\/s\/dazzling-nobel-bh3gh)\r\n\r\n## The current behavior\r\n\r\nThe first image (rendered using React) continues to render the initial source image.\r\n\r\n## The expected behavior\r\n\r\nThe first image should behave the same as the second (rendered statically inside index.html) and switch to the correct source image when a media condition applies.","labels":["Type: Bug","Browser: Safari","Component: DOM","Status: Unconfirmed"],"created_at":"2021-06-27T18:00:49Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/21761"},{"issue_number":213,"repository":"facebook\/react","title":"[DevTools Bug] Children cannot be added or removed during a reorder operation.","description":"### Website or app\n\nhttps:\/\/github.com\/Alice-in-korea\/chrome_bug_report.git\n\n### Repro steps\n\n1. Click next day button or prev day button\r\n2. Normally there are only three column for three days but you can see the fragment of other column with error message.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n4.13.5-0ae5290b54\n\n### Error message (automated)\n\nChildren cannot be added or removed during a reorder operation.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:21301:41\r\n    at bridge_Bridge.emit (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:19286:22)\r\n    at chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:19446:12\r\n    at listener (chrome-extension:\/\/fmkadmapgofadopljbjfkapdkoienihi\/build\/main.js:37413:39)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps:\/\/api.github.com\/search\/issues?q=Children cannot be added or removed during a reorder operation. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook\/react\n```\n","labels":["Type: Bug","Status: Unconfirmed","Component: Developer Tools"],"created_at":"2021-06-25T04:11:26Z","comments":11,"reactions":11,"url":"https:\/\/github.com\/facebook\/react\/issues\/21751"},{"issue_number":214,"repository":"facebook\/react","title":"Inconsistent crossbrowser onBeforeInput paste event behavior","description":"### React version: 17.0.2\r\nIn Chrome, pasting triggers `onPaste` and `onBeforeInput`, with the `nativeEvent`s `ClipboardEvent` and `TextEvent` respectively.\r\n\r\nIn Firefox, pasting only triggers `onPaste` with `nativeEvent` `paste`.\r\n\r\nIf I'm not mistaken, this seems to be the code responsible for not triggering `onBeforeInput` on native `paste` events:\r\nhttps:\/\/github.com\/facebook\/react\/blob\/27c9c95e23ddedb9163373950e364dd62038f6c0\/packages\/react-dom\/src\/events\/plugins\/BeforeInputEventPlugin.js#L328-L331\r\n\r\n### React version: 17.0.2 and 18.0.0\r\n\r\n17.0.2\r\nhttps:\/\/codesandbox.io\/s\/condescending-cerf-e1qt9?file=\/src\/App.js\r\n18.0.0\r\nhttps:\/\/codesandbox.io\/s\/sparkling-sun-fylti?file=\/src\/App.js","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2021-06-24T01:13:36Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/21742"},{"issue_number":215,"repository":"facebook\/react","title":"Bug: Webpack process and setImmediate polyfill interferes with time slicing","description":"Here's the copy paste of the polyfill: https:\/\/gist.github.com\/gaearon\/5d2f7bedf76d7bbec2b5c1ee04861ce3\r\n\r\nThis reproes with old CRA (e.g. `react-scripts@0.7.0`). I saw this on this branch: https:\/\/github.com\/Swizec\/react-fractals\/pull\/16\r\n\r\nThe result is concurrent renders get grouped into a huge blocking task:\r\n\r\n<img width=\"815\" alt=\"Screenshot 2021-06-15 at 18 01 27\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/122094843-8581cf00-ce04-11eb-9a40-fd3758301255.png\">\r\n\r\nNot sure why yet.","labels":["Type: Bug","Component: Concurrent Features","React 18"],"created_at":"2021-06-15T17:07:37Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/21685"},{"issue_number":216,"repository":"facebook\/react","title":"Bug: Firefox and react-dom causing null access property","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. create a component with a state\r\n2. add elements added conditionally from state\r\n3. add a (complex ?) component like input, textarea, select, iframe etc inside the elements added conditionnaly\r\n4. open firefox and drag a file above the zone fast enough and then come back to the complex element (it might be really hard to trigger so I suggest to drag around really fast)\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n[CodeSandbox](https:\/\/codesandbox.io\/s\/unruffled-torvalds-xpikd?file=\/src\/App.js)\r\n\r\nMinimal (with the maximum of details I have) reproduction :\r\n```ts\r\nconst FileInput: React.FC = () => {\r\n  const fileZone = useRef<HTMLDivElement>(null);\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handlers = {\r\n      dragenter() {\r\n        setDragging(true);\r\n      },\r\n      dragleave() {\r\n        setDragging(false);\r\n      },\r\n    };\r\n    const div = fileZone.current as HTMLDivElement;\r\n    Object.entries(handlers).map(([key, value]) =>\r\n      div.addEventListener(key, value),\r\n    );\r\n\r\n    return () => {\r\n      if (div) {\r\n        Object.entries(handlers).map(([key, value]) =>\r\n          div.removeEventListener(key, value),\r\n        );\r\n      }\r\n    };\r\n  }, [fileZone]);\r\n\r\n  return (\r\n    <div ref={fileZone}>\r\n      {dragging ? (\r\n        <>drop here<\/>\r\n      ) : (\r\n        <>\r\n          drop here or{\" \"}\r\n          <label>\r\n            Search\r\n            <input \/>\r\n          <\/label>\r\n        <\/>\r\n      )}\r\n    <\/div>\r\n  );\r\n};\r\n```\r\n\r\nHere I used the dragevent to trigger the state but I think anything firing setState fast enough can reproduce this while this seems the most usable way to reproduce.\r\n\r\n## The current behavior\r\nWhen dragging a file over the zone fast enough and coming back to the complex element it triggers an error :\r\n`\r\n16:38:47.408 Uncaught TypeError: can't access property \"__reactFiber$6wig1bzlbmp\" of null\r\n    React 3\r\n    unstable_runWithPriority scheduler.development.js:468\r\n    React 12\r\n    tsx index.tsx:6\r\n    tsx main.chunk.js:263\r\n    Webpack 7\r\nreact-dom.development.js:10578\r\n    React 3\r\n    bind_applyFunctionN self-hosted:1376\r\n    dispatchEvent self-hosted:1339\r\n    unstable_runWithPriority scheduler.development.js:468\r\n    dispatchUserBlockingUpdate React\r\n    bind_applyFunctionN self-hosted:1376\r\n    dispatchUserBlockingUpdate self-hosted:1339\r\n    React 4\r\n    forEach self-hosted:4356\r\n    React 7\r\n    tsx index.tsx:6\r\n    tsx main.chunk.js:263\r\n    Webpack 7\r\n`\r\n\r\n\r\nScreenshots of errors (First one is firefox \"normal\" and second one is firefox developer edition) :\r\n![Firefox on Windows](https:\/\/user-images.githubusercontent.com\/7894362\/119522819-92b71b00-bd7c-11eb-9335-338d40a69c0d.png)\r\n![Firefox developer edition on ArchLinux](https:\/\/user-images.githubusercontent.com\/7894362\/119523063-c1cd8c80-bd7c-11eb-88bb-ae58672c22d8.png)\r\n\r\n## The expected behavior\r\nReact shouldn't trigger an error.","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2021-05-25T15:17:45Z","comments":6,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/21559"},{"issue_number":217,"repository":"facebook\/react","title":"Bug: In a specific environment, controlled input triggers onChange twice","description":"## On chrome of windows, controlled input changes the value in onChange, and enter(IME mode) non-letters(#\/$\/%\/...) will trigger onChange twice\r\n\r\n<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\n- React version: 17.0.2 (16 will also)\r\n- windows 10\r\n- chrome 90.0.4430.85\r\n\r\n## Steps To Reproduce\r\n1. The input method is adjusted to Chinese (IME)\r\n2. Enter non-letter special symbols , such as # $ % - =\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps:\/\/codesandbox.io\/s\/bold-morning-8x46e\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\nonChange call twice\r\n\r\n## The expected behavior\r\nonChange call correct times\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2021-04-25T08:13:07Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/21349"},{"issue_number":218,"repository":"facebook\/react","title":"Bug: iOS VoiceOver announces stale content in headings","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Go to https:\/\/jeffreyatw.com\/static\/voiceover-react using iOS, enable VoiceOver\r\n2. Swipe to first \"Not clicked\" h2, observe VoiceOver reads content correctly\r\n3. Click the first \"click me\" button\r\n4. Move VoiceOver's focus back to first h2, which is now \"Clicked\"\r\n5. VoiceOver **incorrectly** reads it as \"Not clicked, heading level 2\"\r\n6. Swipe to the second \"Not clicked\" h2, observe VoiceOver reads content correctly\r\n7. Click the second \"click me\" button\r\n8. Move VoiceOver's focus back to second h2, which is now \"Clicked\"\r\n9. VoiceOver correctly reads it as \"Clicked, heading level 2\"\r\n\r\n<!--\r\n\r\n\r\n\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/jeffreyatw.com\/static\/voiceover-react\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\nVoiceOver reads the first h2 as \"Not clicked, heading level 2\". See attached video for more details:\r\nhttps:\/\/user-images.githubusercontent.com\/266170\/114103859-b4b51680-987e-11eb-82b9-0d785442c3ae.mp4\r\n\r\n## The expected behavior\r\nVoiceOver should read the first h2 as \"Clicked, heading level 2\"\r\n","labels":["Type: Bug","Browser: Safari","Component: DOM","Status: Unconfirmed"],"created_at":"2021-04-08T22:26:44Z","comments":6,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/21212"},{"issue_number":219,"repository":"facebook\/react","title":"Bug: Radio\/Checkbox inputs not triggered when setting state in listener on a parent element","description":"Hello\r\n\r\nI wanted to highlight a div after clicking on it (and hide the highlight after clicking anywhere else). So in componentDidMount, I added two event listeners (on the div and on the window object).\r\nThe problem is kind of wild: when I use setState in a listener added in componentDidMount, radio buttons are not triggered.\r\nWhen the listener does not use setState or uses setTimeout(() => this.setState(...), 0), radio buttons works expectedly.\r\nWhen creating a code example, I also tried checkboxes, and they do not work as well. BUT, for example, button inputs work expectedly.\r\n\r\nReact version: 16.13.1 (in my app), 17.0.2 (in code sand box) - issue is in both of them\r\n\r\n## Steps To Reproduce\r\n\r\nYou can use this prepared code example: https:\/\/codesandbox.io\/s\/react-setstate-listener-input-bug-wjsdk\r\nThe example also shows other listeners set ups which work expectedly.\r\n\r\n## Current possible workaround\r\n\r\nAs mentioned earlier, we can use setTimeout(() => this.setState(...), 0) to gain expected behavior, but it is not a bug fix.","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2021-03-25T10:17:28Z","comments":17,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/21094"},{"issue_number":220,"repository":"facebook\/react","title":"react-devtools-inline package now has react@experimental dependency","description":"I recently updated DevTools to use the new, experimental `getCacheForType` API (#20548) which works well for the browser and standalone extension versions, because they bundle their own version of React (the experimental release). This has left the `react-devtools-inline` package (used by e.g. Code Sandbox) in an unreleasable state though until the new Suspense APIs are released as stable.\r\n\r\nPerhaps I could go back to the last commit prior to #20548 and do one final release, but then I will be blocked.","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2021-03-17T18:22:17Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/21023"},{"issue_number":221,"repository":"facebook\/react","title":"Bug: React test triggers mouseout event for disabled button","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.14.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create a test file in a react project, and paste the following code.\r\n2. Run the test\r\n3. The test for onMouseLeave event fails.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\n```javascript\r\nimport { act } from \"react-dom\/test-utils\";\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Counter = () => {\r\n  const increaseCount = () => {\r\n    setCount((prev) => prev + 1);\r\n  };\r\n  const [count, setCount] = useState(0);\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times<\/p>\r\n      <button\r\n        disabled\r\n        onClick={increaseCount}\r\n        onMouseEnter={increaseCount}\r\n        onMouseLeave={increaseCount}\r\n      >\r\n        Click me\r\n      <\/button>\r\n    <\/div>\r\n  );\r\n};\r\n\r\ndescribe(\"button with react test-utils\", () => {\r\n  let container;\r\n\r\n  beforeEach(() => {\r\n    container = document.createElement(\"div\");\r\n    document.body.appendChild(container);\r\n  });\r\n\r\n  afterEach(() => {\r\n    document.body.removeChild(container);\r\n    container = null;\r\n  });\r\n\r\n  it(\"should not trigger onClick when button is disabled\", () => {\r\n    act(() => {\r\n      ReactDOM.render(<Counter \/>, container);\r\n    });\r\n    const button = container.querySelector(\"button\");\r\n    const label = container.querySelector(\"p\");\r\n\r\n    act(() => {\r\n      button.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\r\n    });\r\n\r\n    expect(label.textContent).toBe(\"You clicked 0 times\");\r\n  });\r\n  it(\"should not trigger onMouseEnter when button is disabled\", () => {\r\n    act(() => {\r\n      ReactDOM.render(<Counter \/>, container);\r\n    });\r\n    const button = container.querySelector(\"button\");\r\n    const label = container.querySelector(\"p\");\r\n\r\n    act(() => {\r\n      button.dispatchEvent(new MouseEvent(\"mouseover\", { bubbles: true }));\r\n    });\r\n\r\n    expect(label.textContent).toBe(\"You clicked 0 times\");\r\n  });\r\n  it(\"should not trigger onMouseLeave when button is disabled\", () => {\r\n    act(() => {\r\n      ReactDOM.render(<Counter \/>, container);\r\n    });\r\n    const button = container.querySelector(\"button\");\r\n    const label = container.querySelector(\"p\");\r\n\r\n    act(() => {\r\n      button.dispatchEvent(new MouseEvent(\"mouseout\", { bubbles: true }));\r\n    });\r\n\r\n    expect(label.textContent).toBe(\"You clicked 0 times\");\r\n  });\r\n});\r\n\r\n```\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n\r\n## The current behavior\r\n<img width=\"664\" alt=\"Screenshot 2021-03-09 at 21 45 13\" src=\"https:\/\/user-images.githubusercontent.com\/2574511\/110506309-c9d44380-8120-11eb-9164-ce2ae7316889.png\">\r\n\r\n\r\n## The expected behavior\r\nAll tests should pass","labels":["Type: Bug","Component: DOM"],"created_at":"2021-03-09T16:47:36Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/20966"},{"issue_number":222,"repository":"facebook\/react","title":"Bug: React DevTools fails when using React Native + Hermes","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.13.1\r\nReact DevTools version: 4.10.1-3a8c04e3b2\r\n\r\n## Steps To Reproduce\r\n\r\n1. `npx react-native init MyApp --template react-native-template-typescript`\r\n2. set `enableHermes: true` in `android\/app\/build.gradle`\r\n3. start Metro bundler via `yarn start`\r\n4. launch app in Android emulator via `yarn android`\r\n5. launch React DevTools\r\n6. reload Metro bundler\r\n7. click on any element in the React DevTools components view\r\n8. right React DevTools panel is stuck on \"Loading...\" and Metro bundler logs `ERROR [TypeError: undefined is not a function]`:\r\n<img width=\"297\" alt=\"Screen Shot 2021-02-25 at 5 56 13 PM\" src=\"https:\/\/user-images.githubusercontent.com\/440230\/109231116-f76dd400-7793-11eb-8b7c-4c40a7eaee3a.png\">\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps:\/\/github.com\/helixbass\/HermesDevToolsIssueExample\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nReact DevTools fails to load element props, styles etc\r\n\r\n\r\n## The expected behavior\r\n\r\nReact DevTools should load element props, styles etc\r\n","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2021-02-25T23:07:49Z","comments":2,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/20884"},{"issue_number":223,"repository":"facebook\/react","title":"Bug: Disabled button state update prevents `scrollIntoView`","description":"I have a `button` that triggers `scrollIntoView` for a node when clicked. It also updates some state which subsequently disables that button in certain cases. If the button becomes disabled, the `scrollIntoView` execution aborts.\r\n\r\nThis seems to only happen in Chrome\/Brave.\r\n\r\nReact version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\nSee steps to reproduce in sandbox.\r\n\r\nhttps:\/\/codesandbox.io\/s\/goofy-curie-yts68?file=\/src\/App.js\r\n\r\n## The current behavior\r\n\r\nDescribed above.\r\n\r\n## The expected behavior\r\n\r\nThe state update should not prevent `scrollIntoView`.\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2021-02-09T18:16:29Z","comments":14,"reactions":11,"url":"https:\/\/github.com\/facebook\/react\/issues\/20770"},{"issue_number":224,"repository":"facebook\/react","title":"Bug: devtools may crash when custom hook has the name \"useState\"","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. clone repo: https:\/\/github.com\/avkonst\/react-devtools-crash-demo\r\n2. yarn start\r\n3. open the browser of the started app\r\n4. open devtools\r\n5. click Counter component in the components tab of the development tools\r\n6. Watch it not loading anything and unhandled exception dumped to the console log\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/github.com\/avkonst\/react-devtools-crash-demo\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nDevtools crash when I click on the following component in the development tools:\r\n\r\n```tsx\r\nimport React from 'react';\r\n\r\nfunction useState() {\r\n    React.useState(0);\r\n    React.useEffect(() => () => {});\r\n}\r\n\r\nfunction Counter() {\r\n\tuseState();\r\n\tReact.useState(0);\r\n\treturn <div>Open React Dev Tools Components panel,\r\n\t\tclick on Counter component and\r\n\t\tobserve the crash in the logging console.<\/div>;\r\n}\r\n\r\nexport default Counter;\r\n```\r\n\r\n## The expected behavior\r\n\r\nNo crash and the development tools show hooks used.\r\n","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2021-01-19T01:50:57Z","comments":29,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/20613"},{"issue_number":225,"repository":"facebook\/react","title":"Bug: CSS variables can't be a space character","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: v16\/v17\r\n\r\n## Steps To Reproduce\r\n\r\n1. https:\/\/codesandbox.io\/s\/empty-css-value-jmbfl?file=\/src\/App.js\r\n2. Notice the \"should be black border\" has a pink border\r\n3. Dangerously setting inner HTML works because it doesn't go through reacts `trim()` flow\r\n4. I've tracked the suspect code to here https:\/\/github.com\/facebook\/react\/blob\/6cbb9394d1474e3a728b49dc7f3a11d61a421ce3\/packages\/react-dom\/src\/shared\/dangerousStyleValue.js#L44\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/codesandbox.io\/s\/empty-css-value-jmbfl?file=\/src\/App.js\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nCSS variables have their value trimmed - resulting in `' '` become `''` which then removes the CSS variable from the browser.\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/6801309\/102850783-52bad780-446e-11eb-8cd3-222061febb48.png)\r\n\r\n## The expected behavior\r\n\r\nThe `' '` value should not be trimmed.\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/6801309\/102850909-944b8280-446e-11eb-9a88-9660469faf3e.png)\r\n\r\nOne potential option is to, for any custom properties that have a space value, don't trim.\r\n\r\n```js\r\nif (isCustomProperty && value === ' ') {\r\n   return value;\r\n}\r\n\r\nreturn ('' + value).trim();\r\n```\r\n\r\nI'm happy to do the bug fix. I would also love for this to get released on v16.\r\n\r\n---\r\n\r\nFound a work around:\r\n\r\nhttps:\/\/codesandbox.io\/s\/empty-css-value-forked-g5jud?file=\/src\/App.js\r\n\r\n```js\r\nstyle={{ \"--border-color\": \"var(--, )\" }}\r\n```","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2020-12-22T04:56:35Z","comments":12,"reactions":5,"url":"https:\/\/github.com\/facebook\/react\/issues\/20497"},{"issue_number":226,"repository":"facebook\/react","title":"Bug: react-hooks\/exhaustive-deps false postive when given undefined as deps","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nThere's currently a false positive for the `react-hooks\/exhaustive-deps` rule as it does not accept `undefined` as dependency. \r\n\r\n```typescript\r\n\/\/ Below gives => React Hook useMemo has a missing dependency: 'byId'. Either include it or remove the dependency array.\r\nconst allIds = useMemo(() => Object.keys(byId), undefined)\r\n```\r\n\r\nThis is clearly noticeable together with TypeScript as it does not allow omitting the second `deps` parameter, with the following typings:\r\n```typescript\r\n\/\/ allow undefined, but don't make it optional as that is very likely a mistake\r\nfunction useMemo<T>(factory: () => T, deps: DependencyList | undefined): T;\r\n```\r\n\r\nNote here that `deps` must be either a `DependencyList` or `undefined`. It is not listed as optional.\r\n\r\nReact version: 17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Install `\"eslint-plugin-react-hooks\": \"^4.1.0\"` and extend it with `'plugin:react-hooks\/recommended'`\r\n2. Write a hook that required a dependency list, input `undefined`.\r\n\r\n## The current behavior\r\nGives false positive when given `undefined` for `deps`.\r\n\r\n## The expected behavior\r\nShould allow `deps` to be set to undefined.","labels":["Type: Bug","Component: ESLint Rules"],"created_at":"2020-11-15T19:26:35Z","comments":11,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/20262"},{"issue_number":227,"repository":"facebook\/react","title":"Bug: eslint-plugin-react-hooks doesn't report conditional typescript \"?.\" hooks","description":"**React plugin version:** \r\neslint-plugin-react: \"^7.19.0\"\r\ntypescript: 4.0+ (must include ?. operator)\r\n\r\n## Steps To Reproduce\r\n\r\n```tsx\r\n\/\/ Just a demonstration example, obviously this is not ideal use of classes\r\nclass Dog {\r\n\tpublic useDogWoof() {\r\n\t\tuseEffect(() => {\r\n\t\t\tconsole.log(\"woof\")\r\n\t\t}])\r\n\t}\r\n}\r\n\r\nconst DogWoof = ({dog}: {dog?: Dog) => {\r\n\tdog?.useDogWoof() \/\/ Should print conditional hook error\r\n\treturn (\r\n\t\t\/\/\r\n\t)\r\n}\r\n```\r\n\r\n## The current behavior\r\n\r\nTypescript has the new 4.0 operator `?.` in case an object is undefined. But, this doesn't quite work along with hooks, as when the object is undefined, the hook is not called, thus the React Renderer complains that the amount of hooks is not the same or even worse untraceable type errors that I had. `eslint-plugin-react-hooks` is expected to be able to guard against that as well to prevent nasty errors with this new typescript operator.\r\n\r\n## The expected behavior\r\n\r\nCurrently, `eslint-plugin-react-hooks` doesn't take care of the typescript operator and thinks that nothing's wrong with using along one with a react hook.","labels":["Type: Bug","Component: ESLint Rules"],"created_at":"2020-11-09T12:17:51Z","comments":3,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/20196"},{"issue_number":228,"repository":"facebook\/react","title":"Bug: Input minLength not working after type changed","description":"I have an input with type password with minLength 8, and i have a toggle to change the type to text (password toggle).\r\nwhen i type with length < 8 and press submit, it prevent to submit. but, when i toggle the password so it change the type to text and submit the form, it can submitted. btw i using useRef()\r\n\r\nReact version:\r\nreact: ^17.0.1\r\nreact-dom: ^17.0.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. type character < minLength\r\n2. submit form\r\n3. toggle form type\r\n4. submit form\r\n\r\nLink to code example: [DEMO](https:\/\/codesandbox.io\/s\/young-shape-4tciw)\r\n\r\n## The current behavior\r\nThe form get submitted even when it under minLength\r\n\r\n## The expected behavior\r\nThe form not get submitted when it under minLength\r\n","labels":["Type: Bug","Browser: Safari","Component: DOM"],"created_at":"2020-11-05T09:45:52Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/20161"},{"issue_number":229,"repository":"facebook\/react","title":"Bug: input[type=\"radio\"] controlled value can get out-of-sync","description":"\r\nReact version: 16.13.1 and 17.0.0-alpha.0-2d131d782\r\n\r\n## Steps To Reproduce\r\n\r\n1. Render two `input[type=\"radio\"][name=\"radio\"]`: one is checked, one isn't\r\n2. Get warning about passing `onChange` or `readOnly`\r\n3. Add empty `onChange` to both\r\n\r\nLink to code example:\r\n\r\n- [React 16 repro](https:\/\/codesandbox.io\/s\/react-16-radio-cannot-be-read-only-z9ldc)\r\n- [React 17 repro](https:\/\/codesandbox.io\/s\/react-17-radio-cannot-be-read-only-forked-r6m9r)\r\n- [React 18 repro](https:\/\/codesandbox.io\/s\/react-18-radio-cannot-be-read-only-forked-7j9ckd)\r\n\r\n## The current behavior\r\n\r\n![screencapture of the described behavior](https:\/\/i.ibb.co\/CMGcrSH\/react-readonly-radio.gif)\r\n\r\n1. React recommends `readOnly` for `input[type=\"radio\"]` even though this isn't supported natively (though React could polyfill it)\r\n2. After looping through the radios once with arrow key navigation the checked state changes\r\n\r\n## The expected behavior\r\n\r\nArrow key navigation shouldn't break out of the controlled value. It's debateable whether React should recommend `readOnly` when this isn't a standard attribute like `readOnly` for `<input type=\"text\" \/>`.\r\n","labels":["Type: Bug","Component: DOM","Status: Unconfirmed"],"created_at":"2020-09-18T13:26:15Z","comments":4,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/19860"},{"issue_number":230,"repository":"facebook\/react","title":"Bug: Handling of symbols when used as deps incorrectly to create error message results in an unrelated TypeError: Cannot convert a Symbol value to a string","description":"React version: 16.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Click the button in this Code Sandbox https:\/\/codesandbox.io\/s\/blissful-sun-e0lle?file=\/src\/App.js\r\n\r\n## The current behavior\r\n\r\nThe wrong error is generated\r\n\r\n## The expected behavior\r\n\r\nAn error should still be generated but the error message should be correct. The problem is that if you do `[Symbol('...')].join(',')` JavaScript will freak out which is what happens if you put symbols incorrectly in the deps to hooks.","labels":["Type: Bug","Component: Hooks"],"created_at":"2020-09-17T13:40:58Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/19848"},{"issue_number":231,"repository":"facebook\/react","title":"Bug: MouseEnter does not fire when coming _from_ disabled elements","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\nhttps:\/\/codesandbox.io\/s\/eager-euler-c72fw?file=\/src\/App.js\r\n\r\n1. move from a disabled element to an element with a `mouseenter` listener.\r\n2. `mouseenter` does not fire\r\n\r\nLink to code example: https:\/\/codesandbox.io\/s\/eager-euler-c72fw?file=\/src\/App.js\r\n\r\n\r\n## The current behavior\r\n\r\n`mouseenter` does not fire because React calculates mouseenter\/leave based on the relative element of the opposing event.\r\ne.g. `mouseenter` calculated from the `mouseout` on the button. Browsers do not fire pointer events on disabled elements\r\n\r\n\r\n## The expected behavior\r\n\r\n`mouseenter` should fire\r\n\r\n\r\nPrevious issue: https:\/\/github.com\/facebook\/react\/issues\/4251","labels":["Type: Bug","Component: DOM"],"created_at":"2020-07-20T17:18:11Z","comments":8,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/19419"},{"issue_number":232,"repository":"facebook\/react","title":"Bug: Form reset lost checkbox onChange event","description":"Hi, I use checkbox uncontrolled mode, onChange in form reset after, lose onChange.\r\n```js\r\n<input type=\"checkbox\" onChange={onChange} \/>\r\n```\r\n\r\nbut use add ref.addEventListener('change', onChange) is ok\r\n```js\r\nconst checkRef = useRef<HTMLInputElement>();\r\nuseEffect(() => {\r\n        if (checkboxRef) {\r\n            checkboxRef.current.addEventListener('change', onChange);\r\n        }\r\n    }, []);\r\n\r\n<input type=\"checkbox\" ref=\"checkboxRef\" onChange={onChange} \/>\r\n```\r\n\r\n\r\nReact version: 16.13 and old \r\n\r\n## Steps To Reproduce\r\n\r\n1. checkbox => checked\r\n2. form reset\r\n3. checked  => checked\r\n\r\nLink to code example:\r\n[not react is ok](https:\/\/codepen.io\/imagine10255\/pen\/ExPaLOJ?editors=1111)\r\n[reset is lose target onChange](https:\/\/codesandbox.io\/s\/affectionate-brook-96dw9?file=\/src\/App.js)\r\n\r\n## The current behavior\r\n1. checkbox => checked (target onChange)\r\n2. form reset\r\n3. checked  => checked (lose target onChange)\r\n\r\n## The expected behavior\r\n1. checkbox => checked (target onChange)\r\n2. form reset\r\n3. checked  => checked (target onChange)\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2020-06-05T08:37:31Z","comments":11,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/19078"},{"issue_number":233,"repository":"facebook\/react","title":"Bug: Server hydration mistmatch and radio group with defaultChecked","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\nWhen hydrating from the server, whenever there's a mismatch in the initially checked input in a radio button group and the inputs use `defaultChecked` (uncontrolled), there is no warning of that mismatch and the component behaves in a buggy way for the input that was initially selected in the server payload (the `onChange` callback prop is not fired for the input that was marked as selected in the initial html, when selecting it).\r\n\r\nWorth noting that using a controlled input (using `checked`) makes the bug go away.\r\n\r\nReact version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. In the example provided below, make sure you refresh the browser within Code Sandbox.\r\n2. Check the first radio button. Verify that the radio is checked, but the text next to it still shows as \"not checked\" (which means the onChange prop was not triggered)\r\n3. Attempt to select any other option (works fine), and then back the first one (works fine too).\r\n4. Refreshing the page again, choosing any other option other than the first works fine.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https:\/\/codesandbox.io\/s\/affectionate-stonebraker-3wj68\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https:\/\/codesandbox.io\/s\/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https:\/\/stackoverflow.com\/help\/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nI know that using hydrate doesn't guarantee fixing the mismatches, but it says that it should warn about them in development (https:\/\/reactjs.org\/docs\/react-dom.html#hydrate). In this case, React doesn't warn about the mismatch, and the behavior is buggy, as shown in the example and steps to repro.\r\n\r\n## The expected behavior\r\n\r\nReact should ideally work without the issue, but given that it's not guaranteed to be fixed according to the documentation, it should at least warn about the mismatch.","labels":["Type: Bug","Component: DOM","Component: Server Rendering"],"created_at":"2020-04-06T10:24:24Z","comments":5,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/18502"},{"issue_number":234,"repository":"facebook\/react","title":"Arbitrary log lines may appear in between an error and the subsequent \"The above error\u2026\" message","description":"React version: 16.12\r\n\r\nIf one component throws, and one of its siblings logs something else to the console, that sibling's logs appear in between the throwing component and the extra React information about that throw.\r\n\r\nThis is hard to explain in words but easy to explain in code and pictures, so look:\r\n\r\nRepro: https:\/\/codesandbox.io\/s\/boring-firefly-bu79e\r\n\r\n![image](https:\/\/user-images.githubusercontent.com\/6820\/75078940-d822d380-54bb-11ea-99d2-c77fbc0c9a5b.png)\r\n\r\nThe third log line (\"The above\u2026\") refers to the first (\"Uncaught\u2026\") but looks like it refers to the second (\"Please don't\u2026\"). This is confusing when debugging.\r\n\r\nInstead, I would expect \"The above error\u2026\" to be right below the uncaught window-level exception we raise. (Maybe this isn't possible without diverging dev vs. prod behavior? Not sure but thought I'd file\u2026)","labels":["Type: Bug"],"created_at":"2020-02-21T23:08:59Z","comments":8,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/18101"},{"issue_number":235,"repository":"facebook\/react","title":"Bug: Unexpected render","description":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nhttps:\/\/stackoverflow.com\/questions\/60345064\/react-hooks-rendering-cause\r\n\r\nI'm playing with simple React components to understand when rendering occurs.\r\n\r\n\r\n## The current behavior\r\n\r\n[Sample 1][1] - Initially renders once. Regardless of the number of times the button is clicked, it doesn't render. This is expected.\r\n\r\n    import React, { useState } from \"react\";\r\n    import \".\/styles.css\";\r\n    \r\n    export default function App() {\r\n      const [state, setState] = useState([\r\n        { id: 1, name: \"test1\" },\r\n        { id: 2, name: \"test2\" }\r\n      ]);\r\n      const onClick = () => setState(data => data);\r\n      console.log(\"App rendered\");\r\n      return (\r\n        <div className=\"App\">\r\n          <h1>Test if setting same data causes re-rendering<\/h1>\r\n          <button onClick={onClick}>Call setState with same data<\/button>\r\n          {state.map(({ id, name }) => (\r\n            <p key={id}>{name}<\/p>\r\n          ))}\r\n        <\/div>\r\n      );\r\n    }\r\n\r\n\r\n[Sample 2][2] - Initially renders twice since `useEffect` updates `setMessages` with a value. This is expected. However, if the button is click 1+ times, it renders once. It shouldn't even re-render since the same value is being set. **Why is it rendering if no new value \/ reference is being updated?**\r\n\r\n    import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\n    import axios from \"axios\";\r\n    import \".\/styles.css\";\r\n    \r\n    const days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\"\r\n    ];\r\n    export default function App() {\r\n      const [messages, setMessages] = useState([]);\r\n      useEffect(() => {\r\n        axios\r\n          .get(`https:\/\/api.myjson.com\/bins\/10xva4`)\r\n          .then(({ data: { messages } }) => setMessages(messages));\r\n      }, []);\r\n      const Display = useMemo(\r\n        () =>\r\n          messages.map(({ content, senderUuid, sentAt }, index) => {\r\n            let d = new Date(sentAt);\r\n            return (\r\n              <div className=\"container\" key={index}>\r\n                <p>Content: {content}<\/p>\r\n                <p>SenderUuid: {senderUuid}<\/p>\r\n                <p>DayOfTheWeek: {d.getDate()}<\/p>\r\n                <p>Month: {d.getMonth()}<\/p>\r\n                <p>Day: {days[d.getDay()]}<\/p>\r\n                <p>Year: {d.getFullYear()}<\/p>\r\n              <\/div>\r\n            );\r\n          }),\r\n        [messages]\r\n      );\r\n      const onClick = useCallback(() => setMessages(messages => messages), []);\r\n      console.log(\"App rendered\");\r\n      \/\/ console.log({ messages });\r\n      return useMemo(\r\n        () => (\r\n          <div className=\"App\">\r\n            <button onClick={onClick}>Call setMessages with same data<\/button>\r\n            {Display}\r\n          <\/div>\r\n        ),\r\n        [Display, onClick]\r\n      );\r\n    }\r\n\r\n\r\n  [1]: https:\/\/codesandbox.io\/s\/testing-rendering-bo9bp\r\n  [2]: https:\/\/codesandbox.io\/s\/call-api-with-useeffect-vlo34\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\n## The expected behavior\r\n\r\nShould not re-render if no new value or reference is updated.\r\n","labels":["Type: Bug"],"created_at":"2020-02-21T20:47:07Z","comments":17,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/18098"},{"issue_number":236,"repository":"facebook\/react","title":"Bug: [eslint-plugin-react-hooks] exhaustive-deps false positive on \"unnecessary\" dependency if its a React component","description":"## Steps to reproduce\r\n\r\n1. create a memoized value using `useMemo`\r\n2. a React component is used in the creation of this value, in a JSX expression\r\n3. specify the React component in the dependency array\r\n\r\nLink to code example: https:\/\/github.com\/zeorin\/eslint-plugin-react-hooks-repro\r\n\r\n## The current behavior\r\n\r\n```\r\nReact Hook useMemo has an unnecessary dependency: 'Component'. Either exclude it or remove the dependency array react-hooks\/exhaustive-deps\r\n```\r\n\r\n## The expected behavior\r\n\r\nNo lint errors.\r\n\r\n## More details\r\n\r\nA simple repro (taken from the link above) is:\r\n\r\n```javascript.jsx\r\nfunction Foo({ component: Component }) {\r\n\tconst memoized = useMemo(() => ({\r\n\t\trender: () => <Component \/>\r\n\t}), [Component]);\r\n\r\n\treturn memoized.render();\r\n}\r\n```\r\n\r\n## Workarounds\r\n\r\nIf one changes the component to lowercase, the lint error goes away. It does also mean that we need to change the way we render the component:\r\n\r\n```javascript.jsx\r\nfunction Foo({ component }) {\r\n\tconst memoized = useMemo(() => ({\r\n\t\trender: component\r\n\t}), [component]);\r\n\r\n\treturn memoized.render();\r\n}\r\n```\r\n\r\nAlternatively we can decide not to use JSX, in which case the lint rule functions correctly, too:\r\n\r\n```javascript.jsx\r\nfunction Foo({ component: Component }) {\r\n\tconst memoized = useMemo(() => ({\r\n\t\trender: () => React.createElement(Component)\r\n\t}), [Component]);\r\n\r\n\treturn memoized.render();\r\n}\r\n```\r\n\r\n## Impact\r\n\r\nCurrently it is hard to use props that are components in a JSX expression if one is using the `exhaustive-deps` rule.\r\n\r\nThis is also compounded by the fact that this rule has a ESLint fix that removes the dependency, thus changing the behaviour of the code and leading to bugs. See https:\/\/github.com\/facebook\/react\/issues\/16313 for that bug report.","labels":["Type: Bug","Component: ESLint Rules"],"created_at":"2020-02-17T12:24:15Z","comments":11,"reactions":5,"url":"https:\/\/github.com\/facebook\/react\/issues\/18051"},{"issue_number":237,"repository":"facebook\/react","title":"Bug: DevTools DOM highlighting gets stuck after a prolonged hover","description":"## Steps To Reproduce\r\n\r\n1. Hover a component in DevTools\r\n2. *Keep hovering it for a second or so*\r\n3. Quickly move the cursor out of the DevTools without hovering anything else\r\n\r\nExpected: DOM highlighting goes away.\r\nActual: DOM highlighting gets stuck.\r\n\r\n![](https:\/\/d1sz9tkli0lfjq.cloudfront.net\/items\/2o2r240l0o3i1B0d1n3J\/Screen%20Recording%202020-01-16%20at%2005.14%20PM.gif?v=e1a91e13)","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2020-01-16T17:16:35Z","comments":10,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/17855"},{"issue_number":238,"repository":"facebook\/react","title":"Controlled numeric input gets cleared when unfocused","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nI would like to report a bug.\r\n\r\n**What is the current behavior?**\r\nA numeric input field gets cleared accidentally on several occasions.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https:\/\/jsfiddle.net\/Luktwrdm\/) or CodeSandbox (https:\/\/codesandbox.io\/s\/new) example below:**\r\n\r\n1. Open [this sandbox](https:\/\/codesandbox.io\/embed\/sad-rgb-mltuj)\r\n2. Type \u201c12.\u201d into the field, with the trailing decimal separator\r\n3. Unfocus the control\r\n4. Append \u201c.\u201d to the field\u2019s value to see \u201c12..\u201d\r\n5. Unfocus the control once again and see that the number has completely disappeared\r\n\r\n**What is the expected behavior?**\r\n\r\nSimilar to how uncontrolled inputs work (remove the `value` prop and then repeat the steps above), the input should not be cleared on blur.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI\u2019m using React 16.12.0 and experienced the same behavior with the latest version of Chrome and iOS Safari. Regarding this bug, I have no experience with previous versions of React.\r\n","labels":["Type: Bug","Component: DOM","Resolution: Backlog"],"created_at":"2019-12-15T01:10:16Z","comments":9,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/17609"},{"issue_number":239,"repository":"facebook\/react","title":"\"Should not already be working\" in Firefox after a breakpoint\/alert","description":"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nI'm seeing \"Error: Should not already be working\" after upgrading to React 16.11\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nThis is exclusively happening on an older version of Chrome, 68.0.3440 on Windows 7\r\n\r\nI was unable to reproduce this in a VM environment but our Sentry is getting littered with these errors. \r\n\r\nI know it's a long shot, but I wasn't able to find any information about this error anywhere, just a reference in the error codes file in react, so thought it would be a good idea to report this just in case. Curious if anyone has seen this.\r\n","labels":["Type: Bug","Difficulty: medium","Type: Needs Investigation","good first issue"],"created_at":"2019-11-13T16:35:19Z","comments":86,"reactions":64,"url":"https:\/\/github.com\/facebook\/react\/issues\/17355"},{"issue_number":240,"repository":"facebook\/react","title":"react-test-renderer: the findByType method doesn't work with memo components","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nWhenever I try something like:\r\n\r\n```\r\nReactTestRenderer.create(<SomeComponent \/>).root.findByType(SomeMemoComponent);\r\n```\r\n\r\nI get the following error: `No instances found with node type: \"undefined\"`. The only way I found for this to work was to reference the `type` property of memo components like this:\r\n\r\n```\r\nReactTestRenderer.create(<SomeComponent \/>).root.findByType(SomeMemoComponent.type);\r\n```\r\n\r\nI am fine with this solution but then flow complains that `type` doesn't exist so I find myself fixing this with `$FlowFixMe` all over the place.\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect that passing a memo component to `findByType` would work. Or that flow would recognize the `type` property of memo components. I think both should work, specially the first option.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nNo, it never worked as far as I know.\r\n","labels":["Type: Bug","Component: Test Renderer"],"created_at":"2019-11-07T09:39:23Z","comments":8,"reactions":6,"url":"https:\/\/github.com\/facebook\/react\/issues\/17301"},{"issue_number":241,"repository":"facebook\/react","title":"TypeError: \"'requestAnimationFrame' called on an object that does not implement interface Window.\"","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?** **Bug**\r\n\r\n**What is the current behavior?**\r\nTypeError: \"'requestAnimationFrame' called on an object that does not implement interface Window.\"\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https:\/\/jsfiddle.net\/Luktwrdm\/) or CodeSandbox (https:\/\/codesandbox.io\/s\/new) example below:**\r\n\r\nhttps:\/\/github.com\/facebook\/react\/blob\/0f6e3cd61cf4a5a1491bb3c92780936aebc2a146\/packages\/scheduler\/src\/forks\/SchedulerHostConfig.default.js#L88\r\n\r\nIn the WebExtension content script, globalThis !== window.\r\nSo when `const requestAnimationFrame = window.requestAnimationFrame`, the `this` binding of `rAF` is lost.\r\n\r\nIn the after calling, `rAF` rebinds to the globalThis, but globalThis doesn't implements Window interface.\r\n\r\nPoC: Install this extension in the Firefox and you will see the error reported.\r\n```index.js\r\ntry {\r\n    const raf = window.requestAnimationFrame\r\n    raf(() => console.log('Okay.'))\r\n} catch (e) {\r\n    console.warn(e)\r\n}\r\n```\r\n\r\n```manifest.json\r\n{\r\n    \"name\": \"rAF in content script test\",\r\n    \"version\": \"0.0.1\",\r\n    \"manifest_version\": 2,\r\n    \"content_scripts\": [{ \"js\": [\"\/index.js\"], \"matches\": [\"<all_urls>\"] }]\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\nFirefox, in WebExtension. \r\n\r\nRelated to https:\/\/github.com\/facebook\/react\/issues\/16605","labels":["Type: Bug","Component: Scheduler"],"created_at":"2019-08-29T05:25:38Z","comments":6,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/16606"},{"issue_number":242,"repository":"facebook\/react","title":"Devtools v4 does not work with Firefox's private window","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n* bug\r\n* This issue has been reported in https:\/\/github.com\/facebook\/react-devtools\/issues\/1383\r\n\r\n**What is the current behavior?**\r\n\r\n\r\nSteps to Reproduce is here:\r\n\r\n1. Environments are:\r\n2. Open the page which uses react with a private window.\r\n3. Open Firefox's devtools.\r\n\r\nActual Result is:\r\n\r\n* react devtools' _component_ pane show `Unable to find React on the page.`\r\n* From about:debugging, we can see the below messsage:\r\n\r\n```\r\nSecurityError: Permission denied to access property \"container\" on cross-origin object main.js:51:305877\r\n    Kl moz-extension:\/\/56db142d-3d36-b04e-91ca-a7504c7708a5\/build\/main.js:51\r\n    apply self-hosted:4417\r\n    applySafeWithoutClone resource:\/\/gre\/modules\/ExtensionCommon.jsm:588\r\n    asyncWithoutClone resource:\/\/gre\/modules\/ExtensionCommon.jsm:2400\r\n```\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nreact devtools work\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n* Firefox 68\r\n* react devtools v4.0.5\r\n* react v16.9","labels":["Type: Bug","Component: Developer Tools"],"created_at":"2019-08-22T16:42:22Z","comments":22,"reactions":25,"url":"https:\/\/github.com\/facebook\/react\/issues\/16547"},{"issue_number":243,"repository":"facebook\/react","title":"DevTools: Components tree is sometimes unexpectedly empty after navigation","description":"1. Open FB page\r\n2. Open Components tab\r\n3. Change address bar to `https:\/\/reactjs.org` and press Enter\r\n\r\nExpected: Components tab gets populated.\r\nActual:\r\n\r\n<img width=\"783\" alt=\"Screen Shot 2019-04-23 at 7 27 37 PM\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/56606380-00247a80-65fe-11e9-988c-2ad3e69eb579.png\">\r\n\r\n~~If I **inspect background page**, I see this:~~ (fixed by #229)\r\n\r\n<img width=\"652\" alt=\"Screen Shot 2019-04-23 at 7 27 12 PM\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/56606408-0b77a600-65fe-11e9-9f65-5502401b7e4a.png\">\r\n\r\n---\r\nOriginally reported by @gaearon via https:\/\/github.com\/bvaughn\/react-devtools-experimental\/issues\/217","labels":["Type: Bug","Component: Developer Tools","React Core Team"],"created_at":"2019-08-19T22:27:13Z","comments":10,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/16495"},{"issue_number":244,"repository":"facebook\/react","title":"DevTools: Re-enable postMessage transferable for faster ArrayBuffer transfers","description":"I got this on FB.com sandbox:\r\n\r\n<img width=\"815\" alt=\"screen shot 2019-03-01 at 1 15 24 pm\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/53640457-26dcbb00-3c24-11e9-828f-a987ffeec4da.png\">\r\n\r\n\r\n---\r\nOriginally reported by @gaearon via https:\/\/github.com\/bvaughn\/react-devtools-experimental\/issues\/25","labels":["Type: Bug","Component: Developer Tools","React Core Team"],"created_at":"2019-08-19T22:24:43Z","comments":1,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/16488"},{"issue_number":245,"repository":"facebook\/react","title":"DevTools: Crashes and warnings when quickly collapsing","description":"This is weird. Happens if I select a node deeply and then long-press \"left\" arrow.\r\n\r\n```\r\nInvalid index 154 specified; store contains 154 items.\r\n\r\nUncaught Invariant Violation: Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\r\n    at ReactError (file:\/\/\/Users\/gaearon\/p\/react-devtools-experimental\/shells\/dev\/build\/devtools.js:8529:40)\r\n```\r\n\r\nIt starts with \"invalid index\" and then gives me different React invariants or warnings depending on how lucky I am.\r\n\r\n![Screen Recording 2019-04-25 at 05 58 PM](https:\/\/user-images.githubusercontent.com\/810438\/56754075-fcbafb80-6783-11e9-8fe6-84aa29d1c120.gif)\r\n\r\n---\r\nMore weird symptoms:\r\n\r\n<img width=\"889\" alt=\"Screen Shot 2019-04-25 at 6 38 22 PM\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/56756281-5671f480-6789-11e9-8d0b-631a5217e63b.png\">\r\n\r\n---\r\n<img width=\"832\" alt=\"Screen Shot 2019-04-25 at 6 41 37 PM\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/56756492-c7191100-6789-11e9-8814-cb849590ee01.png\">\r\n\r\n---\r\nThis \"fixes\" it:\r\n\r\n```diff\r\n       runWithPriority(UserBlockingPriority, () => dispatch(action));\r\n-      next(() => dispatch({ type: 'UPDATE_INSPECTED_ELEMENT_ID' }));\r\n+      runWithPriority(UserBlockingPriority, () => dispatch({ type: 'UPDATE_INSPECTED_ELEMENT_ID' }));\r\n     },\r\n```\r\n\r\nSo I suspect it's a bug with `Scheduler.next()`.\r\n\r\n---\r\nThis also looks funky. Note how somewhere in the middle right pane gets \"stuck\" showing the same cycle of values:\r\n\r\n![Screen Recording 2019-04-25 at 07 36 PM](https:\/\/user-images.githubusercontent.com\/810438\/56759733-8b824500-6791-11e9-95ba-d4d3630a4c5e.gif)\r\n\r\n---\r\nReact bug: https:\/\/github.com\/facebook\/react\/issues\/15512\r\n\r\n---\r\nOriginally reported by @gaearon via https:\/\/github.com\/bvaughn\/react-devtools-experimental\/issues\/228","labels":["Type: Bug","Component: Developer Tools","React Core Team"],"created_at":"2019-08-19T22:24:17Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/16487"},{"issue_number":246,"repository":"facebook\/react","title":"DevTools: Occasional FOUC when loading DevTools","description":"Seems to only happen the first time DevTools is opened after being installed (or perhaps the first time after the browser is opened).\r\n\r\n---\r\nOriginally reported via https:\/\/github.com\/bvaughn\/react-devtools-experimental\/issues\/381","labels":["Type: Bug","Component: Developer Tools","React Core Team"],"created_at":"2019-08-19T21:38:01Z","comments":1,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/16465"},{"issue_number":247,"repository":"facebook\/react","title":"SSR: Cannot set property 'memoizedState' of null","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nA bug?\r\n\r\n**What is the current behavior?**\r\n\r\n> Cannot set property 'memoizedState' of null\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https:\/\/jsfiddle.net\/Luktwrdm\/) or CodeSandbox (https:\/\/codesandbox.io\/s\/new) example below:**\r\n\r\n```js\r\nconst processLink = html => {\r\n  return renderToStaticMarkup(<Link \/>)\r\n};\r\n\r\nconst RichText = ({ html }) => {\r\n  const htmlProcessed = useMemo(() => processLink(html), [html]);\r\n}\r\n```\r\nSee https:\/\/codesandbox.io\/s\/cannot-set-property-memoizedstate-of-null-mrxfr\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.8~16.9\r\n\r\n","labels":["Type: Bug"],"created_at":"2019-08-16T09:10:04Z","comments":27,"reactions":16,"url":"https:\/\/github.com\/facebook\/react\/issues\/16416"},{"issue_number":248,"repository":"facebook\/react","title":"ErrorBoundary rendering multiple copies of itself when ref assignment fails","description":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\nWhen a error occurs during the assignment of a `ref` (and maybe other conditions), a error boundary wrapping that error may get confused and it renders itself multiple times inside the same parent. See https:\/\/codesandbox.io\/s\/stoic-fermi-6etqb which renders:\r\n\r\n```html\r\n<div id=\"root\">\r\n  <div class=\"boundary\"><span>content<\/span><\/div>\r\n  <div class=\"boundary\"><span>error<\/span><\/div>\r\n<\/div>\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\n```html\r\n<div id=\"root\">\r\n  <div class=\"boundary\"><span>error<\/span><\/div>\r\n<\/div>\r\n```","labels":["Type: Bug","Component: Reconciler"],"created_at":"2019-08-12T14:12:35Z","comments":6,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/16365"},{"issue_number":249,"repository":"facebook\/react","title":"textarea does not show warning when switching from uncontrolled to controlled like inputs do","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nWhile things like `<input>` correctly get a warning when switching from uncrontrolled to controlled, I'm noticing `<textarea>` does not\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https:\/\/jsfiddle.net\/Luktwrdm\/) or CodeSandbox (https:\/\/codesandbox.io\/s\/new) example below:**\r\n\r\nHere's a codesandbox. Type in the input field, we see error (correct), change to textarea and start over, type in field and we don't see the error (incorrect I think) https:\/\/codesandbox.io\/s\/recursing-dawn-jls8i\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.8\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2019-08-09T19:15:55Z","comments":3,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/16342"},{"issue_number":250,"repository":"facebook\/react","title":"Controlled input makes browser not saving submitted value (for autocomplete)","description":"**Bug** (behaves different per browser, but generally inconsistent to uncontrolled inputs)\r\n\r\n**Current behavior**\r\nReproduce with https:\/\/jsfiddle.net\/bootleq\/hos4r6qd\/\r\n1. Type `a` in *name* field, and `b` in *uncontrolled* field.\r\n2. Submit.\r\n3. Re-run the fiddle.\r\n4. Focus input fields to see if browser \"saves\" previous input.\r\n\r\n**Expected behavior**\r\nBrowser provides `a` suggestion for *name* and `b` for *uncontrolled* field.\r\nControlled and uncontrolled elements should behave the same.\r\n\r\n**Actual result**\r\nUncontrolled input has `b` suggestion, but controlled input (*name*) has **no** suggestion.\r\nTested on Windows 7, Google Chrome 74.0.3729.169.\r\nAnd on Firefox 68.0b4, we can click the *workaround* button before submit, by reset the `value` DOM attribute it behaves as expected.","labels":["Type: Bug","Component: DOM"],"created_at":"2019-05-25T12:18:13Z","comments":12,"reactions":19,"url":"https:\/\/github.com\/facebook\/react\/issues\/15739"},{"issue_number":251,"repository":"facebook\/react","title":"Field type=\"email\" with multiple attribute cursor jumps to start","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nWhile adding multiple comma separated email addresses the cursor will jump to te beginning the input field. First i thought it was a [Formik](https:\/\/github.com\/jaredpalmer\/formik\/issues\/1428) issue, but it seems to be a React one.\r\n\r\nExample pure React: https:\/\/codesandbox.io\/embed\/0y06zo7l8p\r\nExample React with Formik: https:\/\/codesandbox.io\/embed\/k57zw7wz5\r\nMDN docs: https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/input\/email#multiple\r\n\r\n**What is the expected behavior?**\r\nCursor stays on current position.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\nChrome 73, Safari 12.1, Opera 60.0\r\nReact 16.7.0\r\n\r\nMaybe #14551 related?\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2019-04-15T08:32:08Z","comments":10,"reactions":5,"url":"https:\/\/github.com\/facebook\/react\/issues\/15418"},{"issue_number":252,"repository":"facebook\/react","title":"dangerouslySetInnerHTML is left empty on client render on top of bad server markup when rendering HTML","description":"This seems to be an edge case of https:\/\/github.com\/facebook\/react\/issues\/11789 fixed in https:\/\/github.com\/facebook\/react\/pull\/13353\/files.\r\n\r\nI ran into this when trying to hydrate content rendered with https:\/\/github.com\/prismicio\/prismic-dom `asHtml` method.\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug? I think. \r\n\r\n**What is the current behavior?**\r\n\r\nCurrent behavior:\r\n\r\n1. Server-side stuff comes in from server and contains the things we need\r\n2. Hydration mismatch happens\r\n3. dangerouslySetInnerHTML is called with correct value but an empty string gets rendered instead\r\n\r\nI tried to replicate the issue on https:\/\/codesandbox.io\/s\/2xojk10jln but failed.\r\n\r\nThe following testcase for `packages\/react-dom\/src\/__tests__\/ReactDOMServerIntegrationElements-test.js` produces the same result (I tried it first with the same PrismicDOM.RichText.asHtml(obj) call I have in the app) but I am not sure if it's correct:\r\n\r\n  ```js\r\n\r\n# test case\r\n    itRenders(\r\n      'a div with dangerouslySetInnerHTML set to html inserted',\r\n      async render => {\r\n        const obj = '<li>bar<\/li>';\r\n        const e = await render(\r\n          <div dangerouslySetInnerHTML={{__html: obj }} \/>,\r\n        );\r\n        expect(e.childNodes.length).toBe(1);\r\n        expect(e.firstChild.tagName).toBe('LI');\r\n        expect(e.firstChild.childNodes.length).toBe(1);\r\n      },\r\n    );\r\n```\r\n\r\n```bash\r\n      \u2713 renders a div with dangerouslySetInnerHTML set to html return value of function called with server string render (190ms)\r\n      \u2713 renders a div with dangerouslySetInnerHTML set to html return value of function called with server stream render (52ms)\r\n      \u2713 renders a div with dangerouslySetInnerHTML set to html return value of function called with clean client render (37ms)\r\n      \u2713 renders a div with dangerouslySetInnerHTML set to html return value of function called with client render on top of good server markup (74ms)\r\n      \u2715 renders a div with dangerouslySetInnerHTML set to html return value of function called with client render on top of bad server markup (34ms)\r\n\r\n  \u25cf ReactDOMServerIntegration \u203a ... \u203a renders a div with dangerouslySetInnerHTML set to html return value of function called with client render on top of bad server markup\r\n\r\n    expect(received).toBe(expected) \/\/ Object.is equality\r\n\r\n    Expected: \"bar\"\r\n    Received: \"\"\r\n```\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nThe client render would have rendered `<li>bar<\/li>`\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\ncommit c05b4b8  (latest master) and >16.8.\r\n\r\nSorry for a bit vague bug report.\r\n","labels":["Type: Bug","Type: Needs Investigation"],"created_at":"2019-03-20T20:35:18Z","comments":13,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/15171"},{"issue_number":253,"repository":"facebook\/react","title":"react-debug-tools doesn't support legacy context (Component.contextTypes)","description":"Original report: https:\/\/github.com\/facebook\/react-devtools\/issues\/1304\r\n\r\nRepro case: https:\/\/64yojj2wyk.codesandbox.io\/","labels":["Type: Bug","React Core Team"],"created_at":"2019-03-06T16:54:36Z","comments":3,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/15039"},{"issue_number":254,"repository":"facebook\/react","title":"Chrome Autofill overwrites values on controlled components","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nReport a bug. Initially reported in https:\/\/github.com\/mozilla-services\/react-jsonschema-form\/issues\/1153\r\n\r\n**What is the current behavior?**\r\nAutofill overwrites existing values in fields when those fields are controlled components in React.\r\n\r\nSee https:\/\/jsfiddle.net\/epicfaace\/9p17e2qx\/21\/ -- to test this, add a \"Saved Address\" in the Chrome options.\r\n\r\n![2019-01-24 10 37 23](https:\/\/user-images.githubusercontent.com\/1689183\/51700667-91b32a80-1fc4-11e9-876b-6f795225d99b.gif)\r\n\r\n**What is the expected behavior?**\r\nAutofill does not overwrite existing fields. I've made a JSFiddle with a plain HTML form, which works with the expected behavior.\r\n\r\nSee https:\/\/jsfiddle.net\/epicfaace\/1my3f9n4\/6\/\r\n\r\n![2019-01-24 10 37 02](https:\/\/user-images.githubusercontent.com\/1689183\/51700679-9841a200-1fc4-11e9-9408-dae369ac5366.gif)\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\nReact 15.3.2\r\nChrome 71.0.3578.98\r\n","labels":["Type: Bug","Component: DOM","Type: Breaking Change"],"created_at":"2019-01-24T18:42:29Z","comments":4,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/14694"},{"issue_number":255,"repository":"facebook\/react","title":"Sometimes controlled email inputs break in Chrome due to punycoding","description":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nReport a  bug\r\n\r\n**What is the current behavior?**\r\n\r\nIn Chrome, when typing a sharp S (\u00df, a German letter) in an input field with `type=\"email\"`, it converts the `\u00df` to `ss` (~~expected~~ unexpected behaviour) and the cursor jumps back to the beginning of the input field (unexpected behaviour). This does only happen if the `\u00df` is part of the domain.\r\nTrying to type `test@test\u00df.de` will end as `.detest@testss`:\r\n![Example](https:\/\/i.imgur.com\/SWQ0p4f.gif)\r\n\r\nIt can be tested with the latest Google Chrome: \r\nhttps:\/\/codepen.io\/anon\/pen\/MzzEqB\r\nIf you don't have a `\u00df` on your keyboard, you can reproduce the bug by just Copy&Pasting it.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nTested with Chrome Version 70.0.3538.110 (Official Build) (64-bit) on Ubuntu 18.04 and React 16.6.3\r\n\r\nIn Firefox, this does not happen, as it does not convert `\u00df` to `ss`. I didn't test other browsers.","labels":["Type: Bug","Component: DOM"],"created_at":"2018-11-29T13:22:22Z","comments":9,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/14356"},{"issue_number":256,"repository":"facebook\/react","title":"Textarea loses focus after inserting paired punctuation with Chinese IME","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\nTextarea lose focus after insert paired punctuation by \"Chinese-Pinyin 10 key\" input source on IOS safari. And then textarea can't be focused when I click it. But after other element has been focused, the textarea could be focused again.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https:\/\/jsfiddle.net\/Luktwrdm\/) or CodeSandbox (https:\/\/codesandbox.io\/s\/new) example below:**\r\n\r\n[CodeSandbox Demo](https:\/\/codesandbox.io\/s\/7w23wpl0q1)\r\n\r\n[steps(youtube video)](https:\/\/youtu.be\/4PJ2WVD83Eg)\r\n\r\n**What is the expected behavior?**\r\njust work fine!\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\nversions of React: 16+\r\nOS: IOS\r\nbrowser: safari\r\n\r\n\r\n\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2018-11-13T08:26:59Z","comments":2,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/14213"},{"issue_number":257,"repository":"facebook\/react","title":"react-test-renderer doesn't support Suspense and lazy nodes","description":"Hello. How can I test components with Suspense\/Lazy?\r\nnow renderer.create(...)toTree() throws\r\n\"toTree() does not yet know how to handle nodes with tag=13\"\r\n\r\nreact 16.6.1\r\nreact-test-renderer 16.6.1","labels":["Type: Bug"],"created_at":"2018-11-09T07:27:53Z","comments":9,"reactions":13,"url":"https:\/\/github.com\/facebook\/react\/issues\/14170"},{"issue_number":258,"repository":"facebook\/react","title":"JAWS reads non-interactive elements as Clickable","description":"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\n1. I create an app using [create-react-app](https:\/\/github.com\/facebook\/create-react-app)\r\n2. I use JAWS Professional Edition Version 2018 (build 1710.42 ILM) and Internet Explorer 11 on Windows 7\r\n3. I use arrow keys to navigate to paragraph \"Edit src\/App.js and save to reload.\"\r\n4. Jaws announces \"Edit src\/App.js and save to reload. **clickable**\"\r\n\r\n**What is the expected behavior?**\r\nThis paragraph is non interactive, it should not be announced as clickable.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n- JAWS Professional Edition Version 2018 (build 1710.42 ILM) \r\n- Internet Explorer 11\r\n- Windows 7\r\n- create-react-app 2.0.3\r\n\r\n**suspected cause**\r\nUsing Chrome Event Listener Breakpoints I observed there's a function called `trapClickOnNonInteractiveElement` which is the onclick handler for non interactive elements. This noop function is causing JAWS to think this is an interactive element\r\n\r\n**possible solution**\r\nIn [trapClickOnNonInteractiveElement](https:\/\/github.com\/facebook\/react\/blob\/8a8d973d3cc5623676a84f87af66ef9259c3937c\/packages\/react-dom\/src\/client\/ReactDOMComponent.js#L245) there is a comment which reads \r\n```\r\n\/\/ TODO: Only do this for the relevant Safaris maybe?\r\n```\r\nI think that this would fix this issue.","labels":["Type: Bug"],"created_at":"2018-10-10T14:07:16Z","comments":9,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/13798"},{"issue_number":259,"repository":"facebook\/react","title":"onChange doesn't fire if input re-renders due to a setState() in a non-React capture phase listener","description":"Extracting from https:\/\/github.com\/facebook\/react\/issues\/12643.\r\n\r\nThis issue has always been in React. I can reproduce it up to React 0.11. However **it's probably extremely rare in practice and isn't worth fixing**. I'm just filing this for posterity.\r\n\r\nHere is a minimal example.\r\n\r\n```js\r\nclass App extends React.Component {\r\n  state = {value: ''}\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\r\n      \"input\",\r\n      () => {\r\n        \/\/ COMMENT OUT THIS LINE TO FIX:\r\n        this.setState({});\r\n      },\r\n      true\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n        \/>\r\n      <\/div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App \/>, document.getElementById(\"container\"));\r\n```\r\n\r\nTyping doesn't work \u2014 unless I comment out that `setState` call in the capture phase listener.\r\n\r\nSay the input is empty and we're typing `a`.\r\n\r\nWhat happens here is that `setState({})` in the capture phase non-React listener runs first. When re-rendering due to that first empty `setState({})`, input props still contain the old value (`\"\"`) while the DOM node's value is new (`\"a\"`). They're not equal, so we'll set the DOM node value to `\"\"` (according to the props) and remember `\"\"` as the current value.\r\n\r\n<img width=\"549\" alt=\"screen shot 2018-08-17 at 1 08 42 am\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/44241204-4b0e0880-a1ba-11e8-847d-bf9ca43eb954.png\">\r\n\r\nThen, `ChangeEventPlugin` tries to decide whether to emit a change event. It asks the tracker whether the value has changed. The tracker compares the presumably \"new\" `node.value` (it's `\"\"` \u2014 we've just set it earlier!) with the `lastValue` it has stored (also `\"\"` \u2014 and also just updated). No changes!\r\n\r\n<img width=\"505\" alt=\"screen shot 2018-08-17 at 1 10 59 am\" src=\"https:\/\/user-images.githubusercontent.com\/810438\/44241293-e0110180-a1ba-11e8-9c5a-b0d808f745cd.png\">\r\n\r\n\r\nOur `\"a\"` update is lost. We never get the change event, and never actually get a chance to set the correct state.","labels":["Type: Bug","Component: DOM","React Core Team"],"created_at":"2018-08-17T16:41:41Z","comments":13,"reactions":10,"url":"https:\/\/github.com\/facebook\/react\/issues\/13424"},{"issue_number":260,"repository":"facebook\/react","title":"onMouseDown causes splash on real ios browsers","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n*bug*\r\n\r\n**What is the current behavior?**\r\n\r\nunexpected **grey splash** caused by `onMouseDown` on real ios device's browsers, both safari and chrome.\r\n[Please checkout this **grey splash** issue first](https:\/\/github.com\/mui-org\/material-ui\/issues\/11154)\r\nI did some trial later, and find out that vanilla html `<button onmousedown=\"\">btn<\/button>` doesn't cause **grey splash**, but with React's jsx `<button onMouseDown={()=>{}}><\/button>`, there is a noticeable **grey splash**\r\n\r\n**What is the expected behavior?**\r\n\r\nwho wants a splash?\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n\"react\": \"^16.3.2\"\r\n","labels":["Type: Bug","Browser: Safari","Component: DOM"],"created_at":"2018-04-29T14:27:00Z","comments":9,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/12717"},{"issue_number":261,"repository":"facebook\/react","title":"Unexpected warning when hydrating with portal and SSR","description":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\n*bug*\r\n\r\n**What is the current behavior?**\r\n\r\nGiven the following (simplified) snippet:\r\n\r\n```jsx\r\nclass HoverMenu extends React.Component {\r\n  render() {\r\n    if (typeof document === 'undefined') return null\r\n    const root = document.getElementById('root')\r\n    return ReactDOM.createPortal(<div>Hello World<\/div>, root)\r\n  }\r\n}\r\n\r\nclass Para extends React.Component {\r\n  render() {\r\n    return (\r\n      <span>\r\n        Some Text\r\n        <HoverMenu \/>\r\n      <\/span>\r\n    )\r\n  }\r\n} \r\n```\r\n\r\nwhere `div#root` is a valid `div` that exists, the following error is shown when hydrating after SSR:\r\n\r\n`Warning: Expected server HTML to contain a matching <div> in <span>`\r\n\r\nThe warning goes away if I update the definition of `HoverMenu` to:\r\n\r\n```jsx\r\nclass HoverMenu extends React.Component {\r\n  componentDidMount() {\r\n    this.setState({ isActive: true })\r\n  }\r\n  render() {\r\n    const { isActive} = this.state\r\n    if (!isActive) return null\r\n    const root = document.getElementById('root')\r\n    return ReactDOM.createPortal(<div>Hello World<\/div>, root)\r\n  }\r\n}\r\n```\r\n\r\nI'd prefer not to do that because of the double rendering caused by `setState` in `componentDidMount`.\r\n\r\nI don't quite understand what that error is telling me. No `<div \/>` is rendered server-side in either case. The error is particularly confusing, as the `HoverMenu` DOM `div` is not even rendered inside a DOM `span`. (I wonder if this is happening because `HoverMenu` is nested inside a React `span`.)\r\n\r\n**What is the expected behavior?**\r\n\r\nNo error is thrown. Or, at least that the error message is clearer.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nChrome 65\r\nReact 16.2\r\n(SSR through Next 5.1)\r\n","labels":["Type: Bug","Difficulty: medium"],"created_at":"2018-04-15T07:50:53Z","comments":28,"reactions":14,"url":"https:\/\/github.com\/facebook\/react\/issues\/12615"},{"issue_number":262,"repository":"facebook\/react","title":"React onBlur events not firing during unmount","description":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\nIf a DOM element rendered by a React component has focus, and the React component unmounts, the React `onBlur` event does not fire on parent DOM elements.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https:\/\/jsfiddle.net\/Luktwrdm\/) or CodeSandbox (https:\/\/codesandbox.io\/s\/new) example below:**\r\n\r\nhttps:\/\/codesandbox.io\/s\/134wrzy6q7\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect that, just like the browser fires a `focusout` event when removing a DOM node, React would fire an `onBlur` events up to parent nodes when the focused node is removed \/ unmounted.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact: 16.2\r\nMac OS X: 10.13.2\r\nBrowser: Chrome 67.0.3366.0, Chrome 64.0.3282.186\r\n\r\nNo idea if this worked in earlier versions of React.","labels":["Type: Bug","Component: DOM","Type: Needs Investigation"],"created_at":"2018-03-13T17:38:08Z","comments":16,"reactions":20,"url":"https:\/\/github.com\/facebook\/react\/issues\/12363"},{"issue_number":263,"repository":"facebook\/react","title":"For Controlled Input, step does not work as expected unless initialized with null or \"\".","description":"*BUG*\r\n\r\n**What is the current behavior?**\r\nFor input type=\"number\", step does not work as expected if there is an initial value set. Step only seems to get honored if the initial value is \"\" or null.\r\n\r\nExample:\r\nhttps:\/\/codepen.io\/anon\/pen\/MQMBmX\r\n\r\nThe example uses a controlled input binding value and step. Step is 1\/10th of the value. If you edit the value in the textbox to 50000 and increment using the stepper, it will increment to 50100 (i.e. by the initial value and not by the current step).\r\n\r\nEdit the code so initial value is \"\" or null. Edit textbox to 50000 and step up - value goes to 55000 as expected.\r\n\r\n**What is the expected behavior?**\r\nIt should be possible to render a number input that honors step without having to initialize the input component value to null or \"\" first.\r\n\r\nIt seems when there is an initial value provided, it will write a value attribute into the DOM (e.g. value=\"100\").  When initial value is \"\" or null then just the value attribute is written to DOM with no assignment. e.g. (value).\r\n\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.3.0-alpha.1  (ported to this version to confirm if still an issue)\r\n0.14.7 (originally found in this version)\r\n\r\nSeems to affect Chrome only (confirmed windows and mac, versions 59 and 64). Bug does not appear in Safari (on a mac at least).","labels":["Type: Bug","Component: DOM"],"created_at":"2018-03-06T10:30:40Z","comments":7,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/12334"},{"issue_number":264,"repository":"facebook\/react","title":"backspace fails to clear values on input type='email'","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug \r\n\r\n**What is the current behavior?**\r\nemail input doesn't control for whitespace \/\/ possible variation on [Issue 6368](https:\/\/github.com\/facebook\/react\/issues\/6368); however, 6368 shows up at 15.0.0 this bug shows up at 15.2\r\n\r\n**If the current behavior is a bug, demo**\r\n\r\nno bug in React 15.0.0\r\nno bug in React 15.1.0\r\nbug on React 15.2\r\n[React~15 fiddle](https:\/\/jsfiddle.net\/cburnett\/79z43qxn\/9\/)\r\n\r\nbug on React 16 \r\n[React~16 fiddle](https:\/\/jsfiddle.net\/cburnett\/q1297t5w\/2\/)\r\n\r\n**What is the expected behavior?**\r\n\r\nWhen a user presses down the backspace key and holds it, all values in the input are removed, including the whitespaces  \r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nWorks on 15.1.0\r\nbug at >= 15.2.0 \r\ntesting on Chrome 63\r\nMacOs Sierra 10.12\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2017-12-18T18:21:42Z","comments":8,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/11881"},{"issue_number":265,"repository":"facebook\/react","title":"Number input gets cleared when typing period as decimal mark","description":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https:\/\/github.com\/reactjs\/reactjs.org\/issues\/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nMy OS and browser are configured to a locale that uses comma as the decimal mark (Finland for those interested). In the codepen below when I accidentally type a period after some number the whole input gets cleared. This is somehow related to the parent component's state being updated because if the `defaultValue` prop is removed from the `<Input>` component the input doesn't get cleared.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https:\/\/jsfiddle.net or similar (template for React 16: https:\/\/jsfiddle.net\/Luktwrdm\/, template for React 15: https:\/\/jsfiddle.net\/hmbg7e9w\/).**\r\n\r\nhttps:\/\/codepen.io\/anon\/pen\/aEOgNL?editors=0010\r\n\r\n**What is the expected behavior?**\r\n\r\nThe input should retain its visible value even if it would be invalid (can't be converted to a number).\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.2.0 and Chrome 63 on macOS 10.12.6.\r\n\r\nTested in Safari 11.0.2 and typing a period kinda works. After typing the first number after the period it gets converted to a comma but the cursor jumps to the beginning.\r\n\r\nAlso tested in Firefox 57.0.1 but it seems to think that period is the correct decimal mark.","labels":["Type: Bug","Component: DOM"],"created_at":"2017-12-18T11:29:42Z","comments":13,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/11877"},{"issue_number":266,"repository":"facebook\/react","title":"React does not call onBlur callback","description":"**Do you want to request a *feature* or report a *bug*?**\r\n**Bug**\r\n\r\n**What is the current behavior?**\r\nWhen input control becomes disabled, React does not call onBlur callback\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal https:\/\/jsfiddle.net\/c22pez5z\/\r\n\r\n**What is the expected behavior?**\r\n1. Focus on input element\r\n2. Press Enter button (it makes input disabled)\r\n3. `Blur counter` and `Native blur counter` should be equal.","labels":["Type: Bug","Component: DOM"],"created_at":"2017-12-11T13:20:59Z","comments":11,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/11826"},{"issue_number":267,"repository":"facebook\/react","title":"value|defaultValue={Symbol|Function} should be ignored, not stringified","description":"Regression in master from https:\/\/github.com\/facebook\/react\/pull\/11534.\r\nFound it thanks to the attribute fixture snapshots.","labels":["Type: Bug","Difficulty: starter","Component: DOM","good first issue","React Core Team"],"created_at":"2017-12-01T01:01:08Z","comments":95,"reactions":4,"url":"https:\/\/github.com\/facebook\/react\/issues\/11734"},{"issue_number":268,"repository":"facebook\/react","title":"Resetting a form containing a focused controlled number input puts it out of step with state","description":"Here's a fixture demonstrating the issue (first test case): http:\/\/react-number-input-form-reset-bug.surge.sh\/number-inputs\r\n\r\nIf you have a controlled number input within a form containing a reset button, hitting Enter can trigger that reset event. This causes the focused input to be reset to the `defaultValue`, which won't be in sync with the tracked value because we do that work on blur for number inputs to avoid triggering validation warnings. This doesn't affect other input types, since the tracked value is updated immediately.\r\n\r\nThis might be a viable tradeoff for avoiding those validation warnings, so I'm not sure if this is actionable, but I wanted to at least document it for future reference.\r\n\r\n\r\ncc @nhunzaker @gaearon \r\n\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2017-11-27T21:29:06Z","comments":0,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/11674"},{"issue_number":269,"repository":"facebook\/react","title":"Multiple onFocus events fired on single focus in Safari","description":"I'd like to report a possible bug.\r\n\r\n1. Brief description\r\nOnFocus synthetic event is fired multiple times on single focus occurrence in Safari. Expected behaviour is for it to be fired only once per focus.\r\n\r\n2. Live demo: https:\/\/codesandbox.io\/s\/101pnjxq27\r\n\r\n3. Minimal steps to reproduce\r\n- install create-react-app\r\n`$ npm install -g create-react-app`\r\n\r\n- create an example application\r\n`$ create-react-app input-focus-test`\r\n`$ cd input-focus-test`\r\n\r\n- edit application file and add input with onFocus event handler\r\n`$ vi src\/App.js`\r\n\r\n```javascript\r\nimport React, { Component } from 'react';\r\nimport logo from '.\/logo.svg';\r\nimport '.\/App.css';\r\n\r\nclass App extends Component {\r\n  handleOnFocus = evt => {\r\n        console.log('handleOnFocus', evt);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" \/>\r\n          <h1 className=\"App-title\">Welcome to React<\/h1>\r\n        <\/header>\r\n        <p className=\"App-intro\">\r\n          To get started, edit <code>src\/App.js<\/code> and save to reload.\r\n        <\/p>\r\n        <p>\r\n          Input\r\n          <input onFocus={this.handleOnFocus}\/>\r\n        <\/p>\r\n      <\/div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n- start application\r\n`$ npm run start`\r\n\r\n- open up locahost:3000 in Safari\r\n- click on the input field with developer\u2019s console opened\r\n- notice focus event fired multiple times\r\n\r\n4. Additional info\r\nThis issue has been found in the following environment:\r\n- macOS Sierra version 10.12.6 (also tested and found on High Sierra)\r\n- Safari 10.1.2 (also tested and found in Safari 10.0 and Safari 11, seems to work on latest Safari mobile, Chrome and Firefox)\r\n- React JS 15.5.4 (also tested and found in React 16)\r\n- example steps to reproduce above generated with create-react-app version 1.4.1\r\n\r\nSome of our observations that might come in handy:\r\n- this issue seems to behave randomly to some extent\r\n- event is usually fired twice when changing focus from input to input (so first click on input fires two events, consequential fire only one, but when changing focus to a different input field it fires twice again)\r\n- additional interesting behavior happens with multiple input fields; for instance with input fields 1 and 2, first focus on input 1 generates two events onFocus with input 1, but then focus on input 2 sometimes generates three events: onFocus with input 1, then input 2, then input 1 again as targets.\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2017-09-27T13:18:30Z","comments":15,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/10871"},{"issue_number":270,"repository":"facebook\/react","title":"Form restoration & React hydration","description":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\n Bug\r\n\r\n**Reproduction**\r\n\r\n1. Open https:\/\/codesandbox.io\/p\/sandbox\/form-restoration-react-hydration-cz1xgj?file=%2Fapp%2Fpage.js%3A2%2C1, see the source\r\n2. Open https:\/\/cz1xgj-3000.csb.app\/\r\n3. Fill in the input, for example, you can type \"foo\"\r\n4. Press submit\r\n5. Undo the navigation\r\n6. See how the \"input value\" is outdated, it doesn\u2019t match what's inside the textbox.\r\n\r\nhttps:\/\/github.com\/facebook\/react\/assets\/3165635\/d29dd884-8896-4b59-8a55-16eb5145dfc7\r\n\r\n**What is the current behavior?**\r\n\r\nLet's say you start filling a form input type text or a select element with `foo`. Then you click on a link and press the back button. The browser back-forward cache (or maybe the form restauration logic) will kick in and change the initial value of the form elements. You will get the `foo` value back in the input. However, React doesn't account for it when the component is controlled.\r\n\r\nFor end-users, it means that they will try to submit a form because they see values in the inputs, but it won't work. They need to go back to each field and make a \"fake\" change so that React registers it.\r\n\r\nThis issue could also be worked around by not controlling the inputs, but I'm not sure how popular form libraries handle this.\r\n\r\n**What is the expected behavior?**\r\n\r\nI expect React to trigger an `onChange` event to replicate the actual form value. \r\nAt the fundamental level, there is a coordination issue between the browser and React.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n- React `@latest` (v18.2.0).\r\n- Chrome `@latest` (v112.0)\r\n\r\n**Details**\r\n\r\nWe have been using the following hack on Material UI:\r\n```js\r\n  componentDidMount() {\r\n    \/\/ Fix SSR issue with the go back feature of the browsers.\r\n    \/\/ Let's say you start filling the input with \"foo\", you change the page then after comes back.\r\n    \/\/ The browser will reset the input value to \"foo\", but we also need to tell React about it.\r\n    this.handleChange({\r\n      target: this.input,\r\n    });\r\n  }\r\n```\r\n\r\nBut it comes with issues: https:\/\/github.com\/mui\/material-ui\/pull\/8110.\r\nSo instead, we tried simulating a change event [as suggested in Stack Overflow](https:\/\/stackoverflow.com\/questions\/23892547\/what-is-the-best-way-to-trigger-onchange-event-in-react-js) but it doesn't work anymore\r\n```js\r\nvar event = new Event('input', { bubbles: true });\r\nelement.dispatchEvent(event);\r\n```\r\n\r\nSo for now, we are going to disable the cache with `<form autoComplete=\"off\">`.\r\n","labels":["Type: Bug","Type: Feature Request","Component: DOM"],"created_at":"2017-09-09T15:23:08Z","comments":3,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/10657"},{"issue_number":271,"repository":"facebook\/react","title":"Mouseenter event not triggered when cursor moves from disabled button","description":"BUG.\r\n\r\nMouseenter event not triggered when cursor moves from disabled button\r\nsee [example](https:\/\/alfa-laboratory.github.io\/arui-feather\/styleguide\/#playground\/code=%3Cdiv%3E%0A%20%0A%20%20%20%20%3Cdiv%20className='row'%3E%0A%20%20%20%20%20%20%20%20Hover%20on%20%20right%20button%20and%20then%20move%20cursor%20to%20left%20button%0A%20%20%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20onMouseEnter=%7B()=%3E%7Balert('Hey!');%7D%7D%20%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Not%20Disabled%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C\/button%3E%0A%20%20%20%20%20%20%20%20%3C\/div%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20disabled=%7B%20true%20%7D%3EDisabled%3C\/button%3E%0A%20%20%20%20%20%20%20%20%3C\/div%3E%0A%20%20%20%20%3C\/div%3E%0A%0A%20%20%20%20%3Cdiv%20className='row'%3E%0A%20%20%20%20%20%20%20%20Hover%20on%20%20right%20button%20and%20then%20move%20cursor%20to%20left%20button%0A%20%20%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%20onMouseEnter=%7B()=%3E%7Balert('Hey!');%7D%7D%20%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Not%20Disabled%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C\/button%3E%0A%20%20%20%20%20%20%20%20%3C\/div%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cbutton%3ENot%20Disabled%3C\/button%3E%0A%20%20%20%20%20%20%20%20%3C\/div%3E%0A%20%20%20%20%3C\/div%3E%0A%20%0A%3C\/div%3E)\r\n\r\n\r\n**What is the expected behavior?**\r\nShould trigger Mouseenter event\r\n\r\nReact 15.5.3\r\nLatest Chrome\r\nMacOs 10.12.5","labels":["Type: Bug","Component: DOM"],"created_at":"2017-07-05T11:01:18Z","comments":15,"reactions":14,"url":"https:\/\/github.com\/facebook\/react\/issues\/10109"},{"issue_number":272,"repository":"facebook\/react","title":"False positive getDefaultProps warning when mixing development and production versions","description":"As migrating from 15.4 to 15.5, I am rewrite original react components with `create-react-class`. \r\n\r\nHowever, there is a warning.\r\n\r\n```\r\nreact-15.5.4.js?bust=1497843639843:3287 Warning: getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\r\n```\r\n\r\n As I am really transferring from a **classic** `React.createClass` definition, I would like to ask is this warning appropriate? Or, this is a depreciation sames as the level of migrating to `create-react-class`?\r\n\r\nOoops, I get ticket #9999  :D","labels":["Type: Bug","Component: Core Utilities","Difficulty: medium"],"created_at":"2017-06-19T05:50:17Z","comments":39,"reactions":24,"url":"https:\/\/github.com\/facebook\/react\/issues\/9999"},{"issue_number":273,"repository":"facebook\/react","title":"A number input will always have left pad 0 though parseFloat value in onChange","description":"**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\nI have a number input with defalut value 0 and in onChange function I'll parse value to float to avoid invalid input, but I'll always get left pad 0 on input UI. But in previouse version, my code works.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https:\/\/jsfiddle.net or similar (template: https:\/\/jsfiddle.net\/84v837e9\/).**\r\n<input type=\"number\" value={this.state.value} onChange={e=>this.setState({value: parseFloat(e.target.value)? parseFloat(e.target.value) : 0})}\r\n\r\n**What is the expected behavior?**\r\nShould not have left pad 0.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\nreact 15.5.3, all browser \/ all OS. It works in 15.4.2","labels":["Type: Bug","Component: DOM"],"created_at":"2017-04-11T10:54:25Z","comments":22,"reactions":26,"url":"https:\/\/github.com\/facebook\/react\/issues\/9402"},{"issue_number":274,"repository":"facebook\/react","title":"No blur event fired when button is disabled\/removed","description":"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nWhen a focussed button becomes disabled, React does not dispatch a blur event.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https:\/\/jsfiddle.net or similar (template: https:\/\/jsfiddle.net\/reactjs\/69z2wepo\/).**\r\n1. Attach a blur event to a button\r\n2. Focus the button\r\n3. Make the button disabled or remove it from the DOM\r\n\r\n**What is the expected behavior?**\r\nA blur event will be dispatched.\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n15.1.0, not sure if it worked in previous versions.\r\n\r\nIsolated test case: http:\/\/jsbin.com\/fuvite\/1\/edit?html,css,js,output","labels":["Type: Bug","Component: DOM"],"created_at":"2017-03-09T18:13:08Z","comments":23,"reactions":14,"url":"https:\/\/github.com\/facebook\/react\/issues\/9142"},{"issue_number":275,"repository":"facebook\/react","title":"event.preventDefault in click handler does not prevent onChange from being called","description":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug!\r\n\r\n**What is the current behavior?**\r\n\r\nWhen rendering an `input` element of type `checkbox` with an `onClick` and `onChange` handler, `onChange` is still called even though `event.preventDefault()` is called in the `onClick` handler.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https:\/\/jsfiddle.net or similar (template: https:\/\/jsfiddle.net\/reactjs\/69z2wepo\/).**\r\n\r\nhttp:\/\/jsfiddle.net\/rf3w7apc\/\r\n\r\n**What is the expected behavior?**\r\n\r\nCalling `event.preventDefault` in the `onClick` handler should prevent the default action  from occurring (or undo its effect), which is to update the value of the `input` element. This should stop any `change` event listener from being invoked. See https:\/\/jsfiddle.net\/L1eskzsq\/ for expected behavior\r\n\r\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nTested using a build from master, macOS 10.12.2, verified in:\r\n\r\n* Chrome  56.0.2924.87 (64-bit)\r\n* Firefox 51.0.1 (64-bit)\r\n\r\nSafari 10.0.2 calls the `change` event listener in both cases.\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2017-02-17T18:31:19Z","comments":7,"reactions":8,"url":"https:\/\/github.com\/facebook\/react\/issues\/9023"},{"issue_number":276,"repository":"facebook\/react","title":"Clear button on iOS date input does not return correct event value","description":"**Bug**\r\nFor iOS only.\r\nWhen pressing `clear` on a date input, the `onChange` event is fired but` event.target.value` is showing the original value rather than an empty string.\r\n\r\n**What is the current behavior?**\r\nOn Chrome and Android, when the clear button is pressed the onChange event has a value of `''`.\r\nOn iOS when the clear button is pressed the onChange event has a value of `previousValue`.\r\n\r\n**Demo**\r\nhttps:\/\/output.jsbin.com\/zojuteloto\/5\/\r\nTry on Chrome\/Android. Then on iOS.\r\n\r\n**What is the expected behavior?**\r\nValue should be returned an an empty string.\r\n\r\n**Versions**\r\nAffects React 15+ & iOS 10. Unsure of previous versions.\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2017-02-07T01:29:52Z","comments":21,"reactions":5,"url":"https:\/\/github.com\/facebook\/react\/issues\/8938"},{"issue_number":277,"repository":"facebook\/react","title":"Undo behavior in controlled textareas works differently from the default behaviour in chrome","description":"If you control a textarea with **value**, it behaves differently when you use undo. When the textarea is controlled, you can only undo one letter at a time. This is not how undo works normally with an uncontrolled component. Undo seems to work as expected with input components.\r\n\r\nWith a controlled textarea component, you can only undo one letter at a time. The normal undo works with some kind of algorithm for how much is going to be un- or redone.\r\n\r\nYou can try the difference in this codepen:\r\n\r\nhttps:\/\/codepen.io\/fabsor\/pen\/LbmBOv\r\n\r\nTested with React 15.3.1 and Chrome 54 and Chrome Canary. Works as expected in Firefox and Safari. It might be a Chrome bug?","labels":["Type: Bug","Component: DOM"],"created_at":"2016-12-07T12:33:02Z","comments":5,"reactions":20,"url":"https:\/\/github.com\/facebook\/react\/issues\/8514"},{"issue_number":278,"repository":"facebook\/react","title":"input autoFocus causes focus to be emitted before ref","description":"https:\/\/jsfiddle.net\/nnwd2c34\/\n\nCan reproduce on Chrome, but not in IE11.\n","labels":["Type: Bug","Component: DOM","Difficulty: challenging"],"created_at":"2016-09-19T20:56:27Z","comments":14,"reactions":6,"url":"https:\/\/github.com\/facebook\/react\/issues\/7769"},{"issue_number":279,"repository":"facebook\/react","title":"[bug] click not disabled on <fieldset disabled><button onClick={() => alert('clicked')}><span>click me<\/span><\/button><\/fieldset>","description":"**bug**\n\nIn the following\n\n``` jsx\nconst Component = () =>\n        <fieldset disabled>\n            <button\n              onClick={() => alert('clicked by React')}\n            >click me here and <span style={{color: 'red'}}>here<\/span><\/button>\n        <\/fieldset>;\n```\n\nclicking on `click me here and` will not trigger `alert('clicked by React')` whereas clicking on the red `here` will trigger `alert('clicked by React')`.\n\nDemo: https:\/\/jsfiddle.net\/ropbvL3y\/\n\nThanks for React, it's an incredibly well designed tool.\n","labels":["Type: Bug","Component: DOM"],"created_at":"2016-09-13T11:28:53Z","comments":14,"reactions":6,"url":"https:\/\/github.com\/facebook\/react\/issues\/7711"},{"issue_number":280,"repository":"facebook\/react","title":"IE 11 and Edge no longer prompt to remember password on controlled form","description":"**Do you want to request a _feature_ or report a _bug_?**\nBug (regression) IE\/Edge\n\n**What is the current behavior?**\nOn React > v15.2.0, Edge and IE11 do not prompt the user to save the password for the form\n\n**Steps to reproduce**\nWith react 15.1.0:\nhttps:\/\/jsfiddle.net\/69z2wepo\/49876\/\nWith React 15.2.0:\nhttps:\/\/jsfiddle.net\/69z2wepo\/49877\/\n\n**What is the expected behavior?**\nThe browser prompts the user to save their password for the form\n\n**Which versions of React, and which browser \/ OS are affected by this issue? Did this work in previous versions of React?**\nReact > 15.2.0. It worked in React 15.2.0\nIE 11, Edge\n","labels":["Type: Bug","Component: DOM"],"created_at":"2016-07-21T12:26:25Z","comments":14,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/7328"},{"issue_number":281,"repository":"facebook\/react","title":"onMouseEnter propagation in double reactroot","description":"I think it is bug\r\n\r\nNow onMouseEnter event handler calls in child element when there are several reactroots. \r\n\r\nTo reproduce - run fiddle and move mouse from white square to red and back. In console you can see log when you do it. Link - https:\/\/jsfiddle.net\/47sn3j5c\/ . It works wrong.\r\n\r\nExpected behavior: handler has to call just when mouse enter to red square. See here simiar example but with one reactroot - https:\/\/jsfiddle.net\/bs3rc2wp\/1\/ . It works right.\r\n\r\nReact 15.1.0\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2016-06-28T04:08:47Z","comments":14,"reactions":6,"url":"https:\/\/github.com\/facebook\/react\/issues\/7135"},{"issue_number":282,"repository":"facebook\/react","title":"Changing state in onFocus and onChange for a select multiple element does not work in Firefox","description":"I want to use a controlled `<select multiple={true} \/>` component in React. In addition to the value I also want to keep the focused state of the select in the state. To do this, I update the state with `setState` in the `onChange`, `onFocus` and `onBlur` event handlers. Unfortunately there is an issue in Firefox: Firefox will only update the value on a change event after the select has gained focus. This means that a user has to click twice on the select element to change its value when it does not have focus. I would expect the select to gain focus and change the value at the same click.\n\nI created a jsFiddle to demonstrate the prolem: [React select multiple issue in Firefox demonstration](https:\/\/jsfiddle.net\/fugf1kw9\/2\/)\n\nI only see this problem in Firefox and with select multiple. In IE and Chrome it is working as expected, and in Firefox it is working as expected for other form elements (simple select, checkbox, radio, text input, textarea).\n\nMy environment:\n- Firefox 46.0.1 under Win7 x64\n- React 15.1.0\n","labels":["Type: Bug","Component: DOM"],"created_at":"2016-06-02T12:57:36Z","comments":9,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/6951"},{"issue_number":283,"repository":"facebook\/react","title":"Iframe load event not firing in Chrome and Safari when src is 'about:blank'","description":"See: https:\/\/jsfiddle.net\/pnct6b7r\/\n\nIt will not trigger the alert in Chrome and Safari, but it will work in Firefox and even IE8.\n\nIs this a React issue or Webkit issue? If it is a Webkit issue, should we \"fix it\" in React given that we want [consistent events across browsers](http:\/\/facebook.github.io\/react\/docs\/events.html)?\n\nps: The JSFiddle was based on the isuse #5332.\n","labels":["Type: Bug","Component: DOM"],"created_at":"2016-04-18T14:35:13Z","comments":9,"reactions":7,"url":"https:\/\/github.com\/facebook\/react\/issues\/6541"},{"issue_number":284,"repository":"facebook\/react","title":"Form input name='nodeName' breaks onSubmit event handling","description":"It happened that I stumbled on following edge case. If you add `name='nodeName'` attribute to form's _input_, at some point of React event handling (`ChangeEventPlugin.js: shouldUseChangeEvent()`) it will call: `elem.nodeName && elem.nodeName.toLowerCase()`, but coincidentally `nodeName` property refers to _input_ and invocation fails.\n\nHere's a [jsFiddle example](https:\/\/jsfiddle.net\/tLd7xvwc\/)\n","labels":["Type: Bug","Component: DOM"],"created_at":"2016-03-17T12:58:47Z","comments":9,"reactions":2,"url":"https:\/\/github.com\/facebook\/react\/issues\/6284"},{"issue_number":285,"repository":"facebook\/react","title":"onResponderGrant called before onResponderTerminate","description":"When a responder captures the active responder, it seems that `onResponderTerminate` is not called until after `onResponderGrant`. This seems like the wrong thing to do. Are there reasons for this behavior?\n","labels":["Type: Bug","Component: DOM"],"created_at":"2016-03-08T18:46:34Z","comments":18,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/6217"},{"issue_number":286,"repository":"facebook\/react","title":"DataTransfer's dropEffect not working on IE\/Edge with not minified version react.js","description":"code exmaple: [Non-minified version](https:\/\/jsfiddle.net\/sy7eja68\/) and [Minified version](https:\/\/jsfiddle.net\/sy7eja68\/1\/)\n\nBoth have the same code, html and js, the only difference is referenced to different version of react.js files.\n\nThere are three boxes.  Dragging the \"**drag me**\" box will show a \"**start**\" at the top, then show a \"**over**\" if it is dragged over either \"**normal drop**\" or \"**drop react**\" box, and show a \"**end**\" with a drop to the two drop boxes.\n\nEverything works fine on my Firefox(43.0.1), and the the [Minified version](https:\/\/jsfiddle.net\/sy7eja68\/1\/) works fine on my IE 11, and Edge(13).\n\nThe only thing dose not work is the  [Non-minified version](https:\/\/jsfiddle.net\/sy7eja68\/) on IE\/Edge.\n\nWhen dragging over the  \"**drop react**\" box, there shows **NO** \"over\".  In the F12 console, I can see lines of \"`SCRIPT16389: Unspecified error.`\". And with `console.log(ev.dataTransfer)`, I get this result: \n\n```\n[object DataTransfer] {\n   dropEffect: <Permission denied>,\n   effectAllowed: \"all\",\n   files: FileList {...}, \n   items: DataTransferItemList {...}, \n   types: DOMStringList {...}\n}\n```\n\nI thought the `dropEffect` should also be accessible on IE\/Edge with non-minified version react.js files?\n","labels":["Type: Bug","Browser: IE"],"created_at":"2015-12-21T16:28:31Z","comments":7,"reactions":1,"url":"https:\/\/github.com\/facebook\/react\/issues\/5700"},{"issue_number":287,"repository":"facebook\/react","title":"Change event fires extra times before IME composition ends","description":"### Extra details\r\n\r\n* Similar discussion with extra details and reproducing analysis: https:\/\/github.com\/facebook\/react\/issues\/8683\r\n* Previous attempt to fix it: https:\/\/github.com\/facebook\/react\/pull\/8438 (includes some unit tests, but sufficient to be confident in the fix)\r\n\r\n------\r\n\r\n### Original Issue\r\n\r\n\r\nWhen I was trying this [example](https:\/\/jsfiddle.net\/reactjs\/n47gckhr\/light\/) from https:\/\/facebook.github.io\/react\/blog\/2013\/11\/05\/thinking-in-react.html, any Chinese characters inputted by Chinese pinyin input method would fire too many renders like:\r\n\r\n![screen shot 2015-05-21 at 14 04 36](https:\/\/cloud.githubusercontent.com\/assets\/1091472\/7742565\/2c8625b0-ffc3-11e4-8ac2-d7eb22a3aef3.png)\r\n\r\nActually I would expect those not to fire before I confirm the Chinese character.\r\n\r\nThen I tried another kind of input method - wubi input method, I got this:\r\n\r\n![screen shot 2015-05-21 at 14 17 15](https:\/\/cloud.githubusercontent.com\/assets\/1091472\/7742657\/42c27bac-ffc4-11e4-8a3a-7d4550e88a59.png)\r\n\r\nIt's weird too. So I did a test [in jQuery](http:\/\/jsbin.com\/yepogahobo\/1\/edit?html,js,console,output):\r\n\r\n![screen shot 2015-05-21 at 14 05 12](https:\/\/cloud.githubusercontent.com\/assets\/1091472\/7742591\/71da6842-ffc3-11e4-9d7a-a8438721029c.png)\r\n\r\nOnly after I press the space bar to confirm the character, the `keyup` event would fire.\r\n\r\nI know it might be different between the implementation of jQuery `keyup` and react `onChange` , but I would expect the way how jQuery `keyup` handles Chinese characters instead of react's `onChange`.\r\n","labels":["Type: Bug","Component: DOM"],"created_at":"2015-05-21T06:30:30Z","comments":56,"reactions":36,"url":"https:\/\/github.com\/facebook\/react\/issues\/3926"},{"issue_number":288,"repository":"facebook\/react","title":"getEventKey implementation inconsistent with DOM3 spec \/ Firefox implementation","description":"There are some inconsistencies between `getEventKey` and the DOM3 keyboard event spec (as well as what Firefox has implemented):\n- `key` property is not correctly set for printable characters on `keydown` and `keyup` events. This works properly in Firefox, and my interpretation of the standard is that Firefox's behaviour is correct here. From the spec: _If the key generates a printable character, and there exists an appropriate Unicode code point, then the KeyboardEvent.key attribute must be a string consisting of the char value of that character._\n- Enter key only fires keydown in Firefox, but fires both keydown and keypress in Chrome. This should be consistent across browsers\n- CapsLock key only fires keydown when it is toggled on. When caps lock is toggled from on to off, no keydown event is fired (this may be a browser limitation in Chrome)\n\nRepro: Test this page in Firefox and compare the result to Chrome: http:\/\/jsfiddle.net\/63ycmLhe\/1\/\n","labels":["Type: Bug","Component: DOM"],"created_at":"2014-09-15T04:41:21Z","comments":6,"reactions":0,"url":"https:\/\/github.com\/facebook\/react\/issues\/2193"},{"issue_number":289,"repository":"facebook\/react","title":"iframe contents cause invariant violation","description":"When using server rendering, putting an `<img>` in an `<iframe>` seems to invariably cause an invariant violation (it can't find the image).\n\nThis is related to #1252, but not identical. In both cases, the browser isn't aware of the inner elements however, in this case, it's because browsers that support iframes are actually mutating the DOM (by replacing the contents with the document specified in the `src` attribute).\n","labels":["Type: Bug","Component: DOM"],"created_at":"2014-03-12T21:35:00Z","comments":8,"reactions":3,"url":"https:\/\/github.com\/facebook\/react\/issues\/1253"},{"issue_number":290,"repository":"facebook\/react","title":"Provide a way to handle browser-autocompleted form values on controlled components","description":"When there's a controlled component for form names that the user has saved in their browser (common with username\/password fields), the browser will sometimes render the page with values in those fields without firing onChange events.  If the user submits the form, the component state does not reflect what is showing to the user.\n\nIn experimenting with this, it appears that the data is there on load (tested by logging this.refs.myinput.getDOMNode().value)\n","labels":["Type: Bug","Component: DOM"],"created_at":"2014-02-22T02:05:11Z","comments":87,"reactions":160,"url":"https:\/\/github.com\/facebook\/react\/issues\/1159"}]